GAS LISTING /tmp/ccooBDg7.s 			page 1


   1               		.file	"main.cpp"
   2               	__SP_H__ = 0x3e
   3               	__SP_L__ = 0x3d
   4               	__SREG__ = 0x3f
   5               	__tmp_reg__ = 0
   6               	__zero_reg__ = 1
   7               		.stabs	"/usagers/alvux/Bureau/inf1995-4754/projet/",100,0,4,.Ltext0
   8               		.stabs	"main.cpp",100,0,4,.Ltext0
   9               		.text
  10               	.Ltext0:
  11               		.stabs	"gcc2_compiled.",60,0,0,0
  12               		.stabs	"__uint24:t(0,1)=@s24;r(0,1);0;077777777;",128,0,0,0
  13               		.stabs	"__int24:t(0,2)=@s24;r(0,2);040000000;037777777;",128,0,0,0
  14               		.stabs	"__builtin_va_list:t(0,3)=*(0,4)=(0,4)",128,0,0,0
  15               		.stabs	"complex long double:t(0,5)=R3;8;0;",128,0,0,0
  16               		.stabs	"complex double:t(0,6)=R3;8;0;",128,0,0,0
  17               		.stabs	"complex float:t(0,7)=R3;8;0;",128,0,0,0
  18               		.stabs	"complex int:t(0,8)=s4real:(0,9)=r(0,9);-32768;32767;,0,16;imag:(0,9),16,16;;",128,0,0,0
  19               		.stabs	"long long unsigned int:t(0,10)=@s64;r(0,10);0;01777777777777777777777;",128,0,0,0
  20               		.stabs	"long unsigned int:t(0,11)=@s32;r(0,11);0;037777777777;",128,0,0,0
  21               		.stabs	"unsigned int:t(0,12)=r(0,12);0;0177777;",128,0,0,0
  22               		.stabs	"unsigned char:t(0,13)=@s8;r(0,13);0;255;",128,0,0,0
  23               		.stabs	"long long int:t(0,14)=@s64;r(0,14);01000000000000000000000;0777777777777777777777;",128,0,
  24               		.stabs	"long int:t(0,15)=@s32;r(0,15);020000000000;017777777777;",128,0,0,0
  25               		.stabs	"int:t(0,9)",128,0,0,0
  26               		.stabs	"signed char:t(0,16)=@s8;r(0,16);-128;127;",128,0,0,0
  27               		.stabs	"char:t(0,17)=@s8;r(0,17);0;255;",128,0,0,0
  28               		.stabs	"signed:t(0,9)",128,0,0,0
  29               		.stabs	"unsigned long:t(0,11)",128,0,0,0
  30               		.stabs	"long long unsigned:t(0,10)",128,0,0,0
  31               		.stabs	"short int:t(0,18)=r(0,18);-32768;32767;",128,0,0,0
  32               		.stabs	"short unsigned int:t(0,19)=r(0,19);0;0177777;",128,0,0,0
  33               		.stabs	"unsigned short:t(0,19)",128,0,0,0
  34               		.stabs	"float:t(0,20)=r(0,9);4;0;",128,0,0,0
  35               		.stabs	"double:t(0,21)=r(0,9);4;0;",128,0,0,0
  36               		.stabs	"long double:t(0,22)=r(0,9);4;0;",128,0,0,0
  37               		.stabs	"short _Fract:t(0,23)=r(0,9);1;0;",128,0,0,0
  38               		.stabs	"long _Fract:t(0,24)=r(0,9);4;0;",128,0,0,0
  39               		.stabs	"long long _Fract:t(0,25)=r(0,9);8;0;",128,0,0,0
  40               		.stabs	"unsigned short _Fract:t(0,26)=r(0,9);1;0;",128,0,0,0
  41               		.stabs	"unsigned _Fract:t(0,27)=r(0,9);2;0;",128,0,0,0
  42               		.stabs	"unsigned long _Fract:t(0,28)=r(0,9);4;0;",128,0,0,0
  43               		.stabs	"unsigned long long _Fract:t(0,29)=r(0,9);8;0;",128,0,0,0
  44               		.stabs	"_Sat short _Fract:t(0,30)=r(0,9);1;0;",128,0,0,0
  45               		.stabs	"_Sat _Fract:t(0,31)=r(0,9);2;0;",128,0,0,0
  46               		.stabs	"_Sat long _Fract:t(0,32)=r(0,9);4;0;",128,0,0,0
  47               		.stabs	"_Sat long long _Fract:t(0,33)=r(0,9);8;0;",128,0,0,0
  48               		.stabs	"_Sat unsigned short _Fract:t(0,34)=r(0,9);1;0;",128,0,0,0
  49               		.stabs	"_Sat unsigned _Fract:t(0,35)=r(0,9);2;0;",128,0,0,0
  50               		.stabs	"_Sat unsigned long _Fract:t(0,36)=r(0,9);4;0;",128,0,0,0
  51               		.stabs	"_Sat unsigned long long _Fract:t(0,37)=r(0,9);8;0;",128,0,0,0
  52               		.stabs	"short _Accum:t(0,38)=r(0,9);2;0;",128,0,0,0
  53               		.stabs	"long _Accum:t(0,39)=r(0,9);8;0;",128,0,0,0
  54               		.stabs	"long long _Accum:t(0,40)=r(0,9);8;0;",128,0,0,0
  55               		.stabs	"unsigned short _Accum:t(0,41)=r(0,9);2;0;",128,0,0,0
  56               		.stabs	"unsigned _Accum:t(0,42)=r(0,9);4;0;",128,0,0,0
  57               		.stabs	"unsigned long _Accum:t(0,43)=r(0,9);8;0;",128,0,0,0
GAS LISTING /tmp/ccooBDg7.s 			page 2


  58               		.stabs	"unsigned long long _Accum:t(0,44)=r(0,9);8;0;",128,0,0,0
  59               		.stabs	"_Sat short _Accum:t(0,45)=r(0,9);2;0;",128,0,0,0
  60               		.stabs	"_Sat _Accum:t(0,46)=r(0,9);4;0;",128,0,0,0
  61               		.stabs	"_Sat long _Accum:t(0,47)=r(0,9);8;0;",128,0,0,0
  62               		.stabs	"_Sat long long _Accum:t(0,48)=r(0,9);8;0;",128,0,0,0
  63               		.stabs	"_Sat unsigned short _Accum:t(0,49)=r(0,9);2;0;",128,0,0,0
  64               		.stabs	"_Sat unsigned _Accum:t(0,50)=r(0,9);4;0;",128,0,0,0
  65               		.stabs	"_Sat unsigned long _Accum:t(0,51)=r(0,9);8;0;",128,0,0,0
  66               		.stabs	"_Sat unsigned long long _Accum:t(0,52)=r(0,9);8;0;",128,0,0,0
  67               		.stabs	"void:t(0,4)",128,0,0,0
  68               		.stabs	"wchar_t:t(0,53)=r(0,53);-32768;32767;",128,0,0,0
  69               		.stabs	"bool:t(0,54)=@s8;-16;",128,0,0,0
  70               		.stabs	"__vtbl_ptr_type:t(0,55)=*(0,56)=f(0,9)",128,0,0,0
  71               		.stabs	"decltype(nullptr):t(0,57)=(0,57)",128,0,0,0
  72               		.stabs	"int8_t:t(0,58)=(0,16)",128,0,121,0
  73               		.stabs	"uint8_t:t(0,59)=(0,13)",128,0,122,0
  74               		.stabs	"int16_t:t(0,60)=(0,9)",128,0,123,0
  75               		.stabs	"uint16_t:t(0,61)=(0,12)",128,0,124,0
  76               		.stabs	"int32_t:t(0,62)=(0,15)",128,0,125,0
  77               		.stabs	"uint32_t:t(0,63)=(0,11)",128,0,126,0
  78               		.stabs	"int64_t:t(0,64)=(0,14)",128,0,128,0
  79               		.stabs	"uint64_t:t(0,65)=(0,10)",128,0,129,0
  80               		.stabs	"intptr_t:t(0,66)=(0,60)",128,0,142,0
  81               		.stabs	"uintptr_t:t(0,67)=(0,61)",128,0,147,0
  82               		.stabs	"int_least8_t:t(0,68)=(0,58)",128,0,159,0
  83               		.stabs	"uint_least8_t:t(0,69)=(0,59)",128,0,164,0
  84               		.stabs	"int_least16_t:t(0,70)=(0,60)",128,0,169,0
  85               		.stabs	"uint_least16_t:t(0,71)=(0,61)",128,0,174,0
  86               		.stabs	"int_least32_t:t(0,72)=(0,62)",128,0,179,0
  87               		.stabs	"uint_least32_t:t(0,73)=(0,63)",128,0,184,0
  88               		.stabs	"int_least64_t:t(0,74)=(0,64)",128,0,192,0
  89               		.stabs	"uint_least64_t:t(0,75)=(0,65)",128,0,199,0
  90               		.stabs	"int_fast8_t:t(0,76)=(0,58)",128,0,213,0
  91               		.stabs	"uint_fast8_t:t(0,77)=(0,59)",128,0,218,0
  92               		.stabs	"int_fast16_t:t(0,78)=(0,60)",128,0,223,0
  93               		.stabs	"uint_fast16_t:t(0,79)=(0,61)",128,0,228,0
  94               		.stabs	"int_fast32_t:t(0,80)=(0,62)",128,0,233,0
  95               		.stabs	"uint_fast32_t:t(0,81)=(0,63)",128,0,238,0
  96               		.stabs	"int_fast64_t:t(0,82)=(0,64)",128,0,246,0
  97               		.stabs	"uint_fast64_t:t(0,83)=(0,65)",128,0,253,0
  98               		.stabs	"intmax_t:t(0,84)=(0,64)",128,0,273,0
  99               		.stabs	"uintmax_t:t(0,85)=(0,65)",128,0,278,0
 100               		.stabs	"int_farptr_t:t(0,86)=(0,62)",128,0,77,0
 101               		.stabs	"uint_farptr_t:t(0,87)=(0,63)",128,0,81,0
 102               		.stabs	"._0:Tt(0,88)=s3low:(0,13),0,8;high:(0,13),8,8;extended:(0,13),16,8;;",128,0,240,0
 103               		.stabs	"__fuse_t:t(0,88)",128,0,244,0
 104               		.stabs	"Memoire24CXXX:Tt(0,89)=s1m_adresse_peripherique:/0(0,59):_ZN13Memoire24CXXX22m_adresse_per
 105               		.stabs	"Del:Tt(0,98)=s1__base_ctor ::(0,99)=#(0,98),(0,4),(0,100)=*(0,98),(0,4);:_ZN3DelC2Ev;2A.;_
 106               		.stabs	"Moteur:Tt(0,102)=s1__base_ctor ::(0,103)=#(0,102),(0,4),(0,104)=*(0,102),(0,4);:_ZN6Moteur
 107               		.stabs	"can:Tt(0,105)=s1__base_ctor ::(0,106)=#(0,105),(0,4),(0,107)=*(0,105),(0,4);:_ZN3canC2Ev;2
 108               		.stabs	"Minuterie:Tt(0,109)=s4minuterieExpiree_:/0(0,110)=B(0,59),0,8;duree_:/0(0,61),8,16;boutonP
 109               		.stabs	"PwmSon:Tt(0,119)=s1__base_ctor ::(0,120)=#(0,119),(0,4),(0,121)=*(0,119),(0,4);:_ZN6PwmSon
 110               		.stabs	"Pwm:Tt(0,123)=s1__base_ctor ::(0,124)=#(0,123),(0,4),(0,125)=*(0,123),(0,4);:_ZN3PwmC2Ev;2
 111               		.stabs	"_Z18initialisationUARTv:F(0,4)",36,0,24,_Z18initialisationUARTv
 112               	.global	_Z18initialisationUARTv
 113               		.type	_Z18initialisationUARTv, @function
 114               	_Z18initialisationUARTv:
GAS LISTING /tmp/ccooBDg7.s 			page 3


 115               		.stabd	46,0,0
   1:main.cpp      **** #include "Memoire24CXXX.h"
   2:main.cpp      **** #include "delControl.h" 
   3:main.cpp      **** #include "Moteur.h" 
   4:main.cpp      **** #include "can.h"
   5:main.cpp      **** #include "minuterie.h" 
   6:main.cpp      **** #include "Memoire24CXXX.h" 
   7:main.cpp      **** #include "PwmSon.h"
   8:main.cpp      **** #include "PWM.h"
   9:main.cpp      **** #include <avr/io.h>
  10:main.cpp      **** #include <avr/interrupt.h> 
  11:main.cpp      **** #define F_CPU 8000000
  12:main.cpp      **** #include <util/delay.h>
  13:main.cpp      **** using namespace std;
  14:main.cpp      ****     volatile bool bit1 = false, bit2 = false, bit3 = false, bit4 = false, bit5 = false;
  15:main.cpp      **** 
  16:main.cpp      **** /*Capteurs:
  17:main.cpp      **** PINC & 0b00010000   capteur_droit
  18:main.cpp      **** PINC & 0b00000001   capteur_gauche
  19:main.cpp      **** PINC & 0b00000010   centre capteur_gauche
  20:main.cpp      **** PINC & 0b00001000   centre droit
  21:main.cpp      **** PINC & 0b00000100   centre
  22:main.cpp      ****  
  23:main.cpp      ****  */
  24:main.cpp      **** void initialisationUART ( void ) {
 116               		.stabn	68,0,24,.LM0-.LFBB1
 117               	.LM0:
 118               	.LFBB1:
 119               	/* prologue: function */
 120               	/* frame size = 0 */
 121               	/* stack size = 0 */
 122               	.L__stack_usage = 0
  25:main.cpp      **** 
  26:main.cpp      **** // 2400 bauds. Nous vous donnons la valeur des deux
  27:main.cpp      **** 
  28:main.cpp      **** // premier registres pour vous éviter des complications
  29:main.cpp      **** 
  30:main.cpp      **** UBRR0H = 0;
 123               		.stabn	68,0,30,.LM1-.LFBB1
 124               	.LM1:
 125 0000 1092 C500 		sts 197,__zero_reg__
  31:main.cpp      **** 
  32:main.cpp      **** UBRR0L = 0xCF;
 126               		.stabn	68,0,32,.LM2-.LFBB1
 127               	.LM2:
 128 0004 8FEC      		ldi r24,lo8(-49)
 129 0006 8093 C400 		sts 196,r24
  33:main.cpp      **** 
  34:main.cpp      **** // permettre la reception et la transmission par le UART0
  35:main.cpp      **** 
  36:main.cpp      **** UCSR0A = (1 << TXC0) | (1 << RXC0) ;
 130               		.stabn	68,0,36,.LM3-.LFBB1
 131               	.LM3:
 132 000a 80EC      		ldi r24,lo8(-64)
 133 000c 8093 C000 		sts 192,r24
  37:main.cpp      **** 
  38:main.cpp      **** UCSR0B =  (1 << RXEN0) | (1 << TXEN0) ; // L'émetteur USART est activé en réglant TXEN dans UCSR
GAS LISTING /tmp/ccooBDg7.s 			page 4


 134               		.stabn	68,0,38,.LM4-.LFBB1
 135               	.LM4:
 136 0010 88E1      		ldi r24,lo8(24)
 137 0012 8093 C100 		sts 193,r24
  39:main.cpp      **** 
  40:main.cpp      **** // Format des trames: 8 bits, 1 stop bits, none parity
  41:main.cpp      **** 
  42:main.cpp      **** UCSR0C = (1 << UCSZ00) | (1 << UCSZ01);
 138               		.stabn	68,0,42,.LM5-.LFBB1
 139               	.LM5:
 140 0016 86E0      		ldi r24,lo8(6)
 141 0018 8093 C200 		sts 194,r24
 142 001c 0895      		ret
 143               		.size	_Z18initialisationUARTv, .-_Z18initialisationUARTv
 144               	.Lscope1:
 145               		.stabs	"",36,0,0,.Lscope1-.LFBB1
 146               		.stabd	78,0,0
 147               		.stabs	"_Z22transmissionUARTVersPch:F(0,4)",36,0,46,_Z22transmissionUARTVersPch
 148               		.stabs	"donnee:P(0,59)",64,0,46,24
 149               	.global	_Z22transmissionUARTVersPch
 150               		.type	_Z22transmissionUARTVersPch, @function
 151               	_Z22transmissionUARTVersPch:
 152               		.stabd	46,0,0
  43:main.cpp      **** 
  44:main.cpp      **** }
  45:main.cpp      **** 
  46:main.cpp      **** void transmissionUARTVersPc ( uint8_t donnee ) {
 153               		.stabn	68,0,46,.LM6-.LFBB2
 154               	.LM6:
 155               	.LFBB2:
 156               	/* prologue: function */
 157               	/* frame size = 0 */
 158               	/* stack size = 0 */
 159               	.L__stack_usage = 0
 160               	.L3:
  47:main.cpp      **** 
  48:main.cpp      **** 	while (!( UCSR0A & (1<<UDRE0))) //Attendre que le tampon soient libre. 
 161               		.stabn	68,0,48,.LM7-.LFBB2
 162               	.LM7:
 163 001e 9091 C000 		lds r25,192
 164 0022 95FF      		sbrs r25,5
 165 0024 00C0      		rjmp .L3
  49:main.cpp      **** 	{
  50:main.cpp      **** 	}
  51:main.cpp      ****                
  52:main.cpp      ****     	UDR0 = donnee; 
 166               		.stabn	68,0,52,.LM8-.LFBB2
 167               	.LM8:
 168 0026 8093 C600 		sts 198,r24
 169 002a 0895      		ret
 170               		.size	_Z22transmissionUARTVersPch, .-_Z22transmissionUARTVersPch
 171               	.Lscope2:
 172               		.stabs	"",36,0,0,.Lscope2-.LFBB2
 173               		.stabd	78,0,0
 174               		.stabs	"_Z13lireDirectionv:F(0,4)",36,0,54,_Z13lireDirectionv
 175               	.global	_Z13lireDirectionv
 176               		.type	_Z13lireDirectionv, @function
GAS LISTING /tmp/ccooBDg7.s 			page 5


 177               	_Z13lireDirectionv:
 178               		.stabd	46,0,0
  53:main.cpp      **** }
  54:main.cpp      **** void lireDirection()
  55:main.cpp      **** {
 179               		.stabn	68,0,55,.LM9-.LFBB3
 180               	.LM9:
 181               	.LFBB3:
 182               	/* prologue: function */
 183               	/* frame size = 0 */
 184               	/* stack size = 0 */
 185               	.L__stack_usage = 0
  56:main.cpp      ****         bit1 = PINC & 0b00000001;
 186               		.stabn	68,0,56,.LM10-.LFBB3
 187               	.LM10:
 188 002c 86B1      		in r24,0x6
 189 002e 8170      		andi r24,lo8(1)
 190 0030 8093 0000 		sts bit1,r24
  57:main.cpp      ****         bit2 = PINC & 0b00000010;
 191               		.stabn	68,0,57,.LM11-.LFBB3
 192               	.LM11:
 193 0034 86B1      		in r24,0x6
 194 0036 8695      		lsr r24
 195 0038 8170      		andi r24,1
 196 003a 8093 0000 		sts bit2,r24
  58:main.cpp      ****         bit3 = PINC & 0b00000100;
 197               		.stabn	68,0,58,.LM12-.LFBB3
 198               	.LM12:
 199 003e 86B1      		in r24,0x6
 200 0040 82FB      		bst r24,2
 201 0042 8827      		clr r24
 202 0044 80F9      		bld r24,0
 203 0046 8093 0000 		sts bit3,r24
  59:main.cpp      ****         bit4 = PINC & 0b00001000;
 204               		.stabn	68,0,59,.LM13-.LFBB3
 205               	.LM13:
 206 004a 86B1      		in r24,0x6
 207 004c 83FB      		bst r24,3
 208 004e 8827      		clr r24
 209 0050 80F9      		bld r24,0
 210 0052 8093 0000 		sts bit4,r24
  60:main.cpp      ****         bit5 = PINC & 0b00010000;
 211               		.stabn	68,0,60,.LM14-.LFBB3
 212               	.LM14:
 213 0056 86B1      		in r24,0x6
 214 0058 8295      		swap r24
 215 005a 8170      		andi r24,1
 216 005c 8093 0000 		sts bit5,r24
 217 0060 0895      		ret
 218               		.size	_Z13lireDirectionv, .-_Z13lireDirectionv
 219               	.Lscope3:
 220               		.stabs	"",36,0,0,.Lscope3-.LFBB3
 221               		.stabd	78,0,0
 222               		.section	.text.startup,"ax",@progbits
 223               		.stabs	"main:F(0,9)",36,0,63,main
 224               	.global	main
 225               		.type	main, @function
GAS LISTING /tmp/ccooBDg7.s 			page 6


 226               	main:
 227               		.stabd	46,0,0
  61:main.cpp      **** }
  62:main.cpp      **** //!(x^y) 00011111   00011111 & 0x01  0z02 (stuff de godalol)
  63:main.cpp      **** int main()
  64:main.cpp      **** {
 228               		.stabn	68,0,64,.LM15-.LFBB4
 229               	.LM15:
 230               	.LFBB4:
 231 0000 CF92      		push r12
 232 0002 DF92      		push r13
 233 0004 EF92      		push r14
 234 0006 FF92      		push r15
 235 0008 0F93      		push r16
 236 000a 1F93      		push r17
 237 000c CF93      		push r28
 238 000e DF93      		push r29
 239 0010 00D0      		rcall .
 240 0012 00D0      		rcall .
 241 0014 00D0      		rcall .
 242 0016 CDB7      		in r28,__SP_L__
 243 0018 DEB7      		in r29,__SP_H__
 244               	/* prologue: function */
 245               	/* frame size = 6 */
 246               	/* stack size = 14 */
 247               	.L__stack_usage = 14
 248               	.LBB45:
  65:main.cpp      ****     
  66:main.cpp      ****     DDRD = 0b11110000;
 249               		.stabn	68,0,66,.LM16-.LFBB4
 250               	.LM16:
 251 001a 80EF      		ldi r24,lo8(-16)
 252 001c 8AB9      		out 0xa,r24
  67:main.cpp      ****     DDRC = 0x00;
 253               		.stabn	68,0,67,.LM17-.LFBB4
 254               	.LM17:
 255 001e 17B8      		out 0x7,__zero_reg__
  68:main.cpp      ****     DDRA = 0x0F;
 256               		.stabn	68,0,68,.LM18-.LFBB4
 257               	.LM18:
 258 0020 8FE0      		ldi r24,lo8(15)
 259 0022 81B9      		out 0x1,r24
  69:main.cpp      ****     Del del;
 260               		.stabn	68,0,69,.LM19-.LFBB4
 261               	.LM19:
 262 0024 CE01      		movw r24,r28
 263 0026 0696      		adiw r24,6
 264 0028 0E94 0000 		call _ZN3DelC1Ev
  70:main.cpp      ****     Pwm moteur;
 265               		.stabn	68,0,70,.LM20-.LFBB4
 266               	.LM20:
 267 002c CE01      		movw r24,r28
 268 002e 0596      		adiw r24,5
 269 0030 0E94 0000 		call _ZN3PwmC1Ev
  71:main.cpp      ****     can intensite;
 270               		.stabn	68,0,71,.LM21-.LFBB4
 271               	.LM21:
GAS LISTING /tmp/ccooBDg7.s 			page 7


 272 0034 CE01      		movw r24,r28
 273 0036 0496      		adiw r24,4
 274 0038 0E94 0000 		call _ZN3canC1Ev
  72:main.cpp      ****     uint8_t rapport;
  73:main.cpp      ****     //bool aTourneAGauche = false;
  74:main.cpp      ****     //bool aTourneADroite = false;
  75:main.cpp      ****     bool passeDansLeTunel = false;
  76:main.cpp      ****     bool estSortiDuTunel = false;
  77:main.cpp      ****     initialisationUART();
 275               		.stabn	68,0,77,.LM22-.LFBB4
 276               	.LM22:
 277 003c 0E94 0000 		call _Z18initialisationUARTv
  78:main.cpp      ****     
  79:main.cpp      **** ///////////// BOUTONS DE DIRECTION ///////////////
  80:main.cpp      ****     char directions[3] = {};
 278               		.stabn	68,0,80,.LM23-.LFBB4
 279               	.LM23:
 280 0040 1982      		std Y+1,__zero_reg__
 281 0042 1A82      		std Y+2,__zero_reg__
 282 0044 1B82      		std Y+3,__zero_reg__
  81:main.cpp      ****     uint8_t compteur = 0;
  82:main.cpp      ****     bool enfonceDroit = false;
  83:main.cpp      ****     bool enfonceGauche = false;
  84:main.cpp      ****     DDRB = 0b11111100;
 283               		.stabn	68,0,84,.LM24-.LFBB4
 284               	.LM24:
 285 0046 8CEF      		ldi r24,lo8(-4)
 286 0048 84B9      		out 0x4,r24
  83:main.cpp      ****     DDRB = 0b11111100;
 287               		.stabn	68,0,83,.LM25-.LFBB4
 288               	.LM25:
 289 004a 20E0      		ldi r18,0
  82:main.cpp      ****     bool enfonceGauche = false;
 290               		.stabn	68,0,82,.LM26-.LFBB4
 291               	.LM26:
 292 004c 90E0      		ldi r25,0
  81:main.cpp      ****     uint8_t compteur = 0;
 293               		.stabn	68,0,81,.LM27-.LFBB4
 294               	.LM27:
 295 004e 80E0      		ldi r24,0
  85:main.cpp      ****     
  86:main.cpp      **** 	while (compteur<3) {
  87:main.cpp      **** 	
  88:main.cpp      **** 		
  89:main.cpp      **** 			if (!(PINB & 0x01)) { 	//bouton droit
  90:main.cpp      **** 				_delay_ms(10);
  91:main.cpp      **** 				if(!(PINB & 0x01)){
  92:main.cpp      **** 					enfonceDroit = true;
  93:main.cpp      ****                                         PORTA = 0b1000;
  94:main.cpp      **** 					_delay_ms(10);
  95:main.cpp      **** 				}
  96:main.cpp      **** 			}
  97:main.cpp      **** 			else
  98:main.cpp      **** 				if(enfonceDroit){
  99:main.cpp      **** 					enfonceDroit = false;
 100:main.cpp      ****                                         PORTA = 0x00;
 101:main.cpp      **** 					directions[compteur] = 'g';
GAS LISTING /tmp/ccooBDg7.s 			page 8


 296               		.stabn	68,0,101,.LM28-.LFBB4
 297               	.LM28:
 298 0050 37E6      		ldi r19,lo8(103)
  93:main.cpp      **** 					_delay_ms(10);
 299               		.stabn	68,0,93,.LM29-.LFBB4
 300               	.LM29:
 301 0052 48E0      		ldi r20,lo8(8)
 102:main.cpp      **** 					compteur++;
 103:main.cpp      **** 				}
 104:main.cpp      **** 				
 105:main.cpp      **** 			if (!(PINB & 0x02)) { 		//bouton gauche
 106:main.cpp      **** 				_delay_ms(10);
 107:main.cpp      **** 				if(!(PINB & 0x02)){
 108:main.cpp      **** 					enfonceGauche = true;
 109:main.cpp      ****                                          PORTA = 0b0100;
 110:main.cpp      **** 					_delay_ms(10);
 111:main.cpp      **** 				}
 112:main.cpp      **** 			}
 113:main.cpp      **** 			else
 114:main.cpp      **** 				if(enfonceGauche){
 115:main.cpp      **** 					enfonceGauche = false;
 116:main.cpp      ****                                         PORTA = 0x00;
 117:main.cpp      **** 					directions[compteur] = 'd';
 302               		.stabn	68,0,117,.LM30-.LFBB4
 303               	.LM30:
 304 0054 54E6      		ldi r21,lo8(100)
 109:main.cpp      **** 					_delay_ms(10);
 305               		.stabn	68,0,109,.LM31-.LFBB4
 306               	.LM31:
 307 0056 64E0      		ldi r22,lo8(4)
 308               	.L13:
  89:main.cpp      **** 				_delay_ms(10);
 309               		.stabn	68,0,89,.LM32-.LFBB4
 310               	.LM32:
 311 0058 1899      		sbic 0x3,0
 312 005a 00C0      		rjmp .L9
 313               	.LBB46:
 314               	.LBB47:
 315               		.stabs	"/usr/avr/include/util/delay.h",132,0,0,.Ltext1
 316               	.Ltext1:
   1:/usr/avr/include/util/delay.h **** /* Copyright (c) 2002, Marek Michalkiewicz
   2:/usr/avr/include/util/delay.h ****    Copyright (c) 2004,2005,2007 Joerg Wunsch
   3:/usr/avr/include/util/delay.h ****    Copyright (c) 2007  Florin-Viorel Petrov
   4:/usr/avr/include/util/delay.h ****    All rights reserved.
   5:/usr/avr/include/util/delay.h **** 
   6:/usr/avr/include/util/delay.h ****    Redistribution and use in source and binary forms, with or without
   7:/usr/avr/include/util/delay.h ****    modification, are permitted provided that the following conditions are met:
   8:/usr/avr/include/util/delay.h **** 
   9:/usr/avr/include/util/delay.h ****    * Redistributions of source code must retain the above copyright
  10:/usr/avr/include/util/delay.h ****      notice, this list of conditions and the following disclaimer.
  11:/usr/avr/include/util/delay.h **** 
  12:/usr/avr/include/util/delay.h ****    * Redistributions in binary form must reproduce the above copyright
  13:/usr/avr/include/util/delay.h ****      notice, this list of conditions and the following disclaimer in
  14:/usr/avr/include/util/delay.h ****      the documentation and/or other materials provided with the
  15:/usr/avr/include/util/delay.h ****      distribution.
  16:/usr/avr/include/util/delay.h **** 
  17:/usr/avr/include/util/delay.h ****    * Neither the name of the copyright holders nor the names of
GAS LISTING /tmp/ccooBDg7.s 			page 9


  18:/usr/avr/include/util/delay.h ****      contributors may be used to endorse or promote products derived
  19:/usr/avr/include/util/delay.h ****      from this software without specific prior written permission.
  20:/usr/avr/include/util/delay.h **** 
  21:/usr/avr/include/util/delay.h ****   THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS "AS IS"
  22:/usr/avr/include/util/delay.h ****   AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE
  23:/usr/avr/include/util/delay.h ****   IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE
  24:/usr/avr/include/util/delay.h ****   ARE DISCLAIMED. IN NO EVENT SHALL THE COPYRIGHT OWNER OR CONTRIBUTORS BE
  25:/usr/avr/include/util/delay.h ****   LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR
  26:/usr/avr/include/util/delay.h ****   CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF
  27:/usr/avr/include/util/delay.h ****   SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS
  28:/usr/avr/include/util/delay.h ****   INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN
  29:/usr/avr/include/util/delay.h ****   CONTRACT, STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)
  30:/usr/avr/include/util/delay.h ****   ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE
  31:/usr/avr/include/util/delay.h ****   POSSIBILITY OF SUCH DAMAGE. */
  32:/usr/avr/include/util/delay.h **** 
  33:/usr/avr/include/util/delay.h **** /* $Id: delay.h.in 2251 2011-09-14 08:20:33Z joerg_wunsch $ */
  34:/usr/avr/include/util/delay.h **** 
  35:/usr/avr/include/util/delay.h **** #ifndef _UTIL_DELAY_H_
  36:/usr/avr/include/util/delay.h **** #define _UTIL_DELAY_H_ 1
  37:/usr/avr/include/util/delay.h **** 
  38:/usr/avr/include/util/delay.h **** #ifndef __HAS_DELAY_CYCLES
  39:/usr/avr/include/util/delay.h **** #define __HAS_DELAY_CYCLES 1
  40:/usr/avr/include/util/delay.h **** #endif
  41:/usr/avr/include/util/delay.h **** 
  42:/usr/avr/include/util/delay.h **** #include <inttypes.h>
  43:/usr/avr/include/util/delay.h **** #include <util/delay_basic.h>
  44:/usr/avr/include/util/delay.h **** #include <math.h>
  45:/usr/avr/include/util/delay.h **** 
  46:/usr/avr/include/util/delay.h **** /** \file */
  47:/usr/avr/include/util/delay.h **** /** \defgroup util_delay <util/delay.h>: Convenience functions for busy-wait delay loops
  48:/usr/avr/include/util/delay.h ****     \code
  49:/usr/avr/include/util/delay.h ****     #define F_CPU 1000000UL  // 1 MHz
  50:/usr/avr/include/util/delay.h ****     //#define F_CPU 14.7456E6
  51:/usr/avr/include/util/delay.h ****     #include <util/delay.h>
  52:/usr/avr/include/util/delay.h ****     \endcode
  53:/usr/avr/include/util/delay.h **** 
  54:/usr/avr/include/util/delay.h ****     \note As an alternative method, it is possible to pass the
  55:/usr/avr/include/util/delay.h ****     F_CPU macro down to the compiler from the Makefile.
  56:/usr/avr/include/util/delay.h ****     Obviously, in that case, no \c \#define statement should be
  57:/usr/avr/include/util/delay.h ****     used.
  58:/usr/avr/include/util/delay.h **** 
  59:/usr/avr/include/util/delay.h ****     The functions in this header file are wrappers around the basic
  60:/usr/avr/include/util/delay.h ****     busy-wait functions from <util/delay_basic.h>.  They are meant as
  61:/usr/avr/include/util/delay.h ****     convenience functions where actual time values can be specified
  62:/usr/avr/include/util/delay.h ****     rather than a number of cycles to wait for.  The idea behind is
  63:/usr/avr/include/util/delay.h ****     that compile-time constant expressions will be eliminated by
  64:/usr/avr/include/util/delay.h ****     compiler optimization so floating-point expressions can be used
  65:/usr/avr/include/util/delay.h ****     to calculate the number of delay cycles needed based on the CPU
  66:/usr/avr/include/util/delay.h ****     frequency passed by the macro F_CPU.
  67:/usr/avr/include/util/delay.h **** 
  68:/usr/avr/include/util/delay.h ****     \note In order for these functions to work as intended, compiler
  69:/usr/avr/include/util/delay.h ****     optimizations <em>must</em> be enabled, and the delay time
  70:/usr/avr/include/util/delay.h ****     <em>must</em> be an expression that is a known constant at
  71:/usr/avr/include/util/delay.h ****     compile-time.  If these requirements are not met, the resulting
  72:/usr/avr/include/util/delay.h ****     delay will be much longer (and basically unpredictable), and
  73:/usr/avr/include/util/delay.h ****     applications that otherwise do not use floating-point calculations
  74:/usr/avr/include/util/delay.h ****     will experience severe code bloat by the floating-point library
GAS LISTING /tmp/ccooBDg7.s 			page 10


  75:/usr/avr/include/util/delay.h ****     routines linked into the application.
  76:/usr/avr/include/util/delay.h **** 
  77:/usr/avr/include/util/delay.h ****     The functions available allow the specification of microsecond, and
  78:/usr/avr/include/util/delay.h ****     millisecond delays directly, using the application-supplied macro
  79:/usr/avr/include/util/delay.h ****     F_CPU as the CPU clock frequency (in Hertz).
  80:/usr/avr/include/util/delay.h **** 
  81:/usr/avr/include/util/delay.h **** */
  82:/usr/avr/include/util/delay.h **** 
  83:/usr/avr/include/util/delay.h **** #if !defined(__DOXYGEN__)
  84:/usr/avr/include/util/delay.h **** static inline void _delay_us(double __us) __attribute__((always_inline));
  85:/usr/avr/include/util/delay.h **** static inline void _delay_ms(double __ms) __attribute__((always_inline));
  86:/usr/avr/include/util/delay.h **** #endif
  87:/usr/avr/include/util/delay.h **** 
  88:/usr/avr/include/util/delay.h **** #ifndef F_CPU
  89:/usr/avr/include/util/delay.h **** /* prevent compiler error by supplying a default */
  90:/usr/avr/include/util/delay.h **** # warning "F_CPU not defined for <util/delay.h>"
  91:/usr/avr/include/util/delay.h **** # define F_CPU 1000000UL
  92:/usr/avr/include/util/delay.h **** #endif
  93:/usr/avr/include/util/delay.h **** 
  94:/usr/avr/include/util/delay.h **** #ifndef __OPTIMIZE__
  95:/usr/avr/include/util/delay.h **** # warning "Compiler optimizations disabled; functions from <util/delay.h> won't work as designed"
  96:/usr/avr/include/util/delay.h **** #endif
  97:/usr/avr/include/util/delay.h **** 
  98:/usr/avr/include/util/delay.h **** #if __HAS_DELAY_CYCLES && defined(__OPTIMIZE__) && \
  99:/usr/avr/include/util/delay.h ****   !defined(__DELAY_BACKWARD_COMPATIBLE__) &&	   \
 100:/usr/avr/include/util/delay.h ****   __STDC_HOSTED__
 101:/usr/avr/include/util/delay.h **** #  include <math.h>
 102:/usr/avr/include/util/delay.h **** #endif
 103:/usr/avr/include/util/delay.h **** 
 104:/usr/avr/include/util/delay.h **** /**
 105:/usr/avr/include/util/delay.h ****    \ingroup util_delay
 106:/usr/avr/include/util/delay.h **** 
 107:/usr/avr/include/util/delay.h ****    Perform a delay of \c __ms milliseconds, using _delay_loop_2().
 108:/usr/avr/include/util/delay.h **** 
 109:/usr/avr/include/util/delay.h ****    The macro F_CPU is supposed to be defined to a
 110:/usr/avr/include/util/delay.h ****    constant defining the CPU clock frequency (in Hertz).
 111:/usr/avr/include/util/delay.h **** 
 112:/usr/avr/include/util/delay.h ****    The maximal possible delay is 262.14 ms / F_CPU in MHz.
 113:/usr/avr/include/util/delay.h **** 
 114:/usr/avr/include/util/delay.h ****    When the user request delay which exceed the maximum possible one,
 115:/usr/avr/include/util/delay.h ****    _delay_ms() provides a decreased resolution functionality. In this
 116:/usr/avr/include/util/delay.h ****    mode _delay_ms() will work with a resolution of 1/10 ms, providing
 117:/usr/avr/include/util/delay.h ****    delays up to 6.5535 seconds (independent from CPU frequency).  The
 118:/usr/avr/include/util/delay.h ****    user will not be informed about decreased resolution.
 119:/usr/avr/include/util/delay.h **** 
 120:/usr/avr/include/util/delay.h ****    If the avr-gcc toolchain has __builtin_avr_delay_cycles(unsigned long)
 121:/usr/avr/include/util/delay.h ****    support, maximal possible delay is 4294967.295 ms/ F_CPU in MHz. For
 122:/usr/avr/include/util/delay.h ****    values greater than the maximal possible delay, overflows results in
 123:/usr/avr/include/util/delay.h ****    no delay i.e., 0ms.
 124:/usr/avr/include/util/delay.h **** 
 125:/usr/avr/include/util/delay.h ****    Conversion of __us into clock cycles may not always result in integer.
 126:/usr/avr/include/util/delay.h ****    By default, the clock cycles rounded up to next integer. This ensures that
 127:/usr/avr/include/util/delay.h ****    the user gets atleast __us microseconds of delay.
 128:/usr/avr/include/util/delay.h **** 
 129:/usr/avr/include/util/delay.h ****    Alternatively, user can define __DELAY_ROUND_DOWN__ and __DELAY_ROUND_CLOSEST__
 130:/usr/avr/include/util/delay.h ****    to round down and round to closest integer.
 131:/usr/avr/include/util/delay.h **** 
GAS LISTING /tmp/ccooBDg7.s 			page 11


 132:/usr/avr/include/util/delay.h ****    Note: The new implementation of _delay_ms(double __ms) with 
 133:/usr/avr/include/util/delay.h ****     __builtin_avr_delay_cycles(unsigned long) support is not backward compatible. 
 134:/usr/avr/include/util/delay.h ****    User can define __DELAY_BACKWARD_COMPATIBLE__ to get a backward compatible delay.
 135:/usr/avr/include/util/delay.h ****    Also, the backward compatible
 136:/usr/avr/include/util/delay.h ****    algorithm will be chosen if the code is compiled in a <em>freestanding
 137:/usr/avr/include/util/delay.h ****    environment</em> (GCC option \c -ffreestanding), as the math functions
 138:/usr/avr/include/util/delay.h ****    required for rounding are not available to the compiler then.
 139:/usr/avr/include/util/delay.h **** 
 140:/usr/avr/include/util/delay.h ****  */
 141:/usr/avr/include/util/delay.h **** void
 142:/usr/avr/include/util/delay.h **** _delay_ms(double __ms)
 143:/usr/avr/include/util/delay.h **** {
 144:/usr/avr/include/util/delay.h **** 	uint16_t __ticks;
 145:/usr/avr/include/util/delay.h **** 	double __tmp ; 
 146:/usr/avr/include/util/delay.h **** #if __HAS_DELAY_CYCLES && defined(__OPTIMIZE__) && \
 147:/usr/avr/include/util/delay.h ****   !defined(__DELAY_BACKWARD_COMPATIBLE__) &&	   \
 148:/usr/avr/include/util/delay.h ****   __STDC_HOSTED__
 149:/usr/avr/include/util/delay.h **** 	uint32_t __ticks_dc;
 150:/usr/avr/include/util/delay.h **** 	extern void __builtin_avr_delay_cycles(unsigned long);
 151:/usr/avr/include/util/delay.h **** 	__tmp = ((F_CPU) / 1e3) * __ms;
 152:/usr/avr/include/util/delay.h **** 
 153:/usr/avr/include/util/delay.h **** 	#if defined(__DELAY_ROUND_DOWN__)
 154:/usr/avr/include/util/delay.h **** 		__ticks_dc = (uint32_t)fabs(__tmp);
 155:/usr/avr/include/util/delay.h **** 
 156:/usr/avr/include/util/delay.h **** 	#elif defined(__DELAY_ROUND_CLOSEST__)
 157:/usr/avr/include/util/delay.h **** 		__ticks_dc = (uint32_t)(fabs(__tmp)+0.5);
 158:/usr/avr/include/util/delay.h **** 
 159:/usr/avr/include/util/delay.h **** 	#else
 160:/usr/avr/include/util/delay.h **** 		//round up by default
 161:/usr/avr/include/util/delay.h **** 		__ticks_dc = (uint32_t)(ceil(fabs(__tmp)));
 162:/usr/avr/include/util/delay.h **** 	#endif
 163:/usr/avr/include/util/delay.h **** 
 164:/usr/avr/include/util/delay.h **** 	__builtin_avr_delay_cycles(__ticks_dc);
 317               		.stabn	68,0,164,.LM33-.LFBB4
 318               	.LM33:
 319 005c EFE1      		ldi r30,lo8(19999)
 320 005e FEE4      		ldi r31,hi8(19999)
 321 0060 3197      		1: sbiw r30,1
 322 0062 01F4      		brne 1b
 323 0064 00C0      		rjmp .
 324 0066 0000      		nop
 325               	.LBE47:
 326               	.LBE46:
 327               		.stabs	"main.cpp",132,0,0,.Ltext2
 328               	.Ltext2:
  91:main.cpp      **** 					enfonceDroit = true;
 329               		.stabn	68,0,91,.LM34-.LFBB4
 330               	.LM34:
 331 0068 1899      		sbic 0x3,0
 332 006a 00C0      		rjmp .L10
  93:main.cpp      **** 					_delay_ms(10);
 333               		.stabn	68,0,93,.LM35-.LFBB4
 334               	.LM35:
 335 006c 42B9      		out 0x2,r20
 336               	.LBB48:
 337               	.LBB49:
 338               		.stabs	"/usr/avr/include/util/delay.h",132,0,0,.Ltext3
GAS LISTING /tmp/ccooBDg7.s 			page 12


 339               	.Ltext3:
 340               		.stabn	68,0,164,.LM36-.LFBB4
 341               	.LM36:
 342 006e EFE1      		ldi r30,lo8(19999)
 343 0070 FEE4      		ldi r31,hi8(19999)
 344 0072 3197      		1: sbiw r30,1
 345 0074 01F4      		brne 1b
 346 0076 00C0      		rjmp .
 347 0078 0000      		nop
 348               	.LBE49:
 349               	.LBE48:
 350               		.stabs	"main.cpp",132,0,0,.Ltext4
 351               	.Ltext4:
  92:main.cpp      ****                                         PORTA = 0b1000;
 352               		.stabn	68,0,92,.LM37-.LFBB4
 353               	.LM37:
 354 007a 91E0      		ldi r25,lo8(1)
 355 007c 00C0      		rjmp .L10
 356               	.L9:
  98:main.cpp      **** 					enfonceDroit = false;
 357               		.stabn	68,0,98,.LM38-.LFBB4
 358               	.LM38:
 359 007e 9923      		tst r25
 360 0080 01F0      		breq .L10
 100:main.cpp      **** 					directions[compteur] = 'g';
 361               		.stabn	68,0,100,.LM39-.LFBB4
 362               	.LM39:
 363 0082 12B8      		out 0x2,__zero_reg__
 101:main.cpp      **** 					compteur++;
 364               		.stabn	68,0,101,.LM40-.LFBB4
 365               	.LM40:
 366 0084 E1E0      		ldi r30,lo8(1)
 367 0086 F0E0      		ldi r31,0
 368 0088 EC0F      		add r30,r28
 369 008a FD1F      		adc r31,r29
 370 008c E80F      		add r30,r24
 371 008e F11D      		adc r31,__zero_reg__
 372 0090 3083      		st Z,r19
 102:main.cpp      **** 				}
 373               		.stabn	68,0,102,.LM41-.LFBB4
 374               	.LM41:
 375 0092 8F5F      		subi r24,lo8(-(1))
  99:main.cpp      ****                                         PORTA = 0x00;
 376               		.stabn	68,0,99,.LM42-.LFBB4
 377               	.LM42:
 378 0094 90E0      		ldi r25,0
 379               	.L10:
 105:main.cpp      **** 				_delay_ms(10);
 380               		.stabn	68,0,105,.LM43-.LFBB4
 381               	.LM43:
 382 0096 1999      		sbic 0x3,1
 383 0098 00C0      		rjmp .L11
 384               	.LBB50:
 385               	.LBB51:
 386               		.stabs	"/usr/avr/include/util/delay.h",132,0,0,.Ltext5
 387               	.Ltext5:
 388               		.stabn	68,0,164,.LM44-.LFBB4
GAS LISTING /tmp/ccooBDg7.s 			page 13


 389               	.LM44:
 390 009a EFE1      		ldi r30,lo8(19999)
 391 009c FEE4      		ldi r31,hi8(19999)
 392 009e 3197      		1: sbiw r30,1
 393 00a0 01F4      		brne 1b
 394 00a2 00C0      		rjmp .
 395 00a4 0000      		nop
 396               	.LBE51:
 397               	.LBE50:
 398               		.stabs	"main.cpp",132,0,0,.Ltext6
 399               	.Ltext6:
 107:main.cpp      **** 					enfonceGauche = true;
 400               		.stabn	68,0,107,.LM45-.LFBB4
 401               	.LM45:
 402 00a6 1999      		sbic 0x3,1
 403 00a8 00C0      		rjmp .L12
 109:main.cpp      **** 					_delay_ms(10);
 404               		.stabn	68,0,109,.LM46-.LFBB4
 405               	.LM46:
 406 00aa 62B9      		out 0x2,r22
 407               	.LBB52:
 408               	.LBB53:
 409               		.stabs	"/usr/avr/include/util/delay.h",132,0,0,.Ltext7
 410               	.Ltext7:
 411               		.stabn	68,0,164,.LM47-.LFBB4
 412               	.LM47:
 413 00ac EFE1      		ldi r30,lo8(19999)
 414 00ae FEE4      		ldi r31,hi8(19999)
 415 00b0 3197      		1: sbiw r30,1
 416 00b2 01F4      		brne 1b
 417 00b4 00C0      		rjmp .
 418 00b6 0000      		nop
 419               	.LBE53:
 420               	.LBE52:
 421               		.stabs	"main.cpp",132,0,0,.Ltext8
 422               	.Ltext8:
 108:main.cpp      ****                                          PORTA = 0b0100;
 423               		.stabn	68,0,108,.LM48-.LFBB4
 424               	.LM48:
 425 00b8 21E0      		ldi r18,lo8(1)
 426 00ba 00C0      		rjmp .L12
 427               	.L11:
 114:main.cpp      **** 					enfonceGauche = false;
 428               		.stabn	68,0,114,.LM49-.LFBB4
 429               	.LM49:
 430 00bc 2223      		tst r18
 431 00be 01F0      		breq .L12
 116:main.cpp      **** 					directions[compteur] = 'd';
 432               		.stabn	68,0,116,.LM50-.LFBB4
 433               	.LM50:
 434 00c0 12B8      		out 0x2,__zero_reg__
 435               		.stabn	68,0,117,.LM51-.LFBB4
 436               	.LM51:
 437 00c2 E1E0      		ldi r30,lo8(1)
 438 00c4 F0E0      		ldi r31,0
 439 00c6 EC0F      		add r30,r28
 440 00c8 FD1F      		adc r31,r29
GAS LISTING /tmp/ccooBDg7.s 			page 14


 441 00ca E80F      		add r30,r24
 442 00cc F11D      		adc r31,__zero_reg__
 443 00ce 5083      		st Z,r21
 118:main.cpp      **** 					compteur++;
 444               		.stabn	68,0,118,.LM52-.LFBB4
 445               	.LM52:
 446 00d0 8F5F      		subi r24,lo8(-(1))
 115:main.cpp      ****                                         PORTA = 0x00;
 447               		.stabn	68,0,115,.LM53-.LFBB4
 448               	.LM53:
 449 00d2 20E0      		ldi r18,0
 450               	.L12:
  86:main.cpp      **** 	
 451               		.stabn	68,0,86,.LM54-.LFBB4
 452               	.LM54:
 453 00d4 8330      		cpi r24,lo8(3)
 454 00d6 00F4      		brsh .+2
 455 00d8 00C0      		rjmp .L13
 456 00da 00E0      		ldi r16,0
 457 00dc 10E0      		ldi r17,0
 458 00de F12C      		mov r15,__zero_reg__
 119:main.cpp      **** 				}
 120:main.cpp      **** 				
 121:main.cpp      ****         }
 122:main.cpp      **** 
 123:main.cpp      **** 	
 124:main.cpp      **** 		
 125:main.cpp      **** 	
 126:main.cpp      **** ////////////// FIN DE DETECTION DE BOUTONS /////////////////////
 127:main.cpp      ****  
 128:main.cpp      ****  
 129:main.cpp      ****  
 130:main.cpp      ****     compteur = 0;
 131:main.cpp      ****     while (true)
 132:main.cpp      ****     {
 133:main.cpp      ****         ////////////////// SOYA GIRL SUPER ADDONS ///////////////////////////
 134:main.cpp      ****         rapport = intensite.lecture(6) >> 2;  /////////////////////////////////////// LIRE SUR LE B
 135:main.cpp      ****         lireDirection();
 136:main.cpp      ****         transmissionUARTVersPc(rapport);
 137:main.cpp      ****     
 138:main.cpp      ****        
 139:main.cpp      ****         
 140:main.cpp      ****         if(rapport < 80 && !estSortiDuTunel)
 141:main.cpp      ****         {
 142:main.cpp      ****             passeDansLeTunel = true;
 143:main.cpp      ****             PORTA = 0b1100;
 459               		.stabn	68,0,143,.LM55-.LFBB4
 460               	.LM55:
 461 00e0 9CE0      		ldi r25,lo8(12)
 462 00e2 E92E      		mov r14,r25
 463               	.L14:
 134:main.cpp      ****         lireDirection();
 464               		.stabn	68,0,134,.LM56-.LFBB4
 465               	.LM56:
 466 00e4 66E0      		ldi r22,lo8(6)
 467 00e6 CE01      		movw r24,r28
 468 00e8 0496      		adiw r24,4
GAS LISTING /tmp/ccooBDg7.s 			page 15


 469 00ea 0E94 0000 		call _ZN3can7lectureEh
 470 00ee 6C01      		movw r12,r24
 471 00f0 D694      		lsr r13
 472 00f2 C794      		ror r12
 473 00f4 D694      		lsr r13
 474 00f6 C794      		ror r12
 135:main.cpp      ****         transmissionUARTVersPc(rapport);
 475               		.stabn	68,0,135,.LM57-.LFBB4
 476               	.LM57:
 477 00f8 0E94 0000 		call _Z13lireDirectionv
 136:main.cpp      ****     
 478               		.stabn	68,0,136,.LM58-.LFBB4
 479               	.LM58:
 480 00fc 8C2D      		mov r24,r12
 481 00fe 0E94 0000 		call _Z22transmissionUARTVersPch
 140:main.cpp      ****         {
 482               		.stabn	68,0,140,.LM59-.LFBB4
 483               	.LM59:
 484 0102 FFE4      		ldi r31,lo8(79)
 485 0104 FC15      		cp r31,r12
 486 0106 00F0      		brlo .L15
 140:main.cpp      ****         {
 487               		.stabn	68,0,140,.LM60-.LFBB4
 488               	.LM60:
 489 0108 1111      		cpse r17,__zero_reg__
 490 010a 00C0      		rjmp .L16
 491               		.stabn	68,0,143,.LM61-.LFBB4
 492               	.LM61:
 493 010c E2B8      		out 0x2,r14
 142:main.cpp      ****             PORTA = 0b1100;
 494               		.stabn	68,0,142,.LM62-.LFBB4
 495               	.LM62:
 496 010e FF24      		clr r15
 497 0110 F394      		inc r15
 498 0112 00C0      		rjmp .L17
 499               	.L15:
 144:main.cpp      ****         }
 145:main.cpp      ****         else if(rapport >= 80 && passeDansLeTunel)
 500               		.stabn	68,0,145,.LM63-.LFBB4
 501               	.LM63:
 502 0114 FF20      		tst r15
 503 0116 01F0      		breq .L18
 146:main.cpp      ****         {
 147:main.cpp      ****             passeDansLeTunel = false;
 148:main.cpp      ****             estSortiDuTunel = true;
 149:main.cpp      ****             PORTA = 0x00;
 504               		.stabn	68,0,149,.LM64-.LFBB4
 505               	.LM64:
 506 0118 12B8      		out 0x2,__zero_reg__
 147:main.cpp      ****             estSortiDuTunel = true;
 507               		.stabn	68,0,147,.LM65-.LFBB4
 508               	.LM65:
 509 011a F12C      		mov r15,__zero_reg__
 510 011c 00C0      		rjmp .L16
 511               	.L18:
 150:main.cpp      ****         }
 151:main.cpp      ****         if(estSortiDuTunel) //En gros on fait une intersection fancy
GAS LISTING /tmp/ccooBDg7.s 			page 16


 512               		.stabn	68,0,151,.LM66-.LFBB4
 513               	.LM66:
 514 011e 1123      		tst r17
 515 0120 01F4      		brne .+2
 516 0122 00C0      		rjmp .L17
 517               	.L16:
 518               	.LBB54:
 519               	.LBB55:
 520               		.stabs	"/usr/avr/include/util/delay.h",132,0,0,.Ltext9
 521               	.Ltext9:
 522               		.stabn	68,0,164,.LM67-.LFBB4
 523               	.LM67:
 524 0124 2FEF      		ldi r18,lo8(479999)
 525 0126 82E5      		ldi r24,hi8(479999)
 526 0128 97E0      		ldi r25,hlo8(479999)
 527 012a 2150      		1: subi r18,1
 528 012c 8040      		sbci r24,0
 529 012e 9040      		sbci r25,0
 530 0130 01F4      		brne 1b
 531 0132 00C0      		rjmp .
 532 0134 0000      		nop
 533               	.LBE55:
 534               	.LBE54:
 535               		.stabs	"main.cpp",132,0,0,.Ltext10
 536               	.Ltext10:
 152:main.cpp      ****         {
 153:main.cpp      ****             _delay_ms(300); //Pour pas qu'il detecte trop tot et qu'il tourne dans le mur.
 154:main.cpp      ****             
 155:main.cpp      ****             if(compteur >= 3)// Comme ça si l'arrêt est à la sorti du tunnel bein c'est ça
 537               		.stabn	68,0,155,.LM68-.LFBB4
 538               	.LM68:
 539 0136 0330      		cpi r16,lo8(3)
 540 0138 00F0      		brlo .+2
 541 013a 00C0      		rjmp .L71
 156:main.cpp      ****             {
 157:main.cpp      ****                 moteur.Avance(0);
 158:main.cpp      ****                 return 0;
 159:main.cpp      ****             }    
 160:main.cpp      ****             else if (directions[compteur] == 'd')
 542               		.stabn	68,0,160,.LM69-.LFBB4
 543               	.LM69:
 544 013c E1E0      		ldi r30,lo8(1)
 545 013e F0E0      		ldi r31,0
 546 0140 EC0F      		add r30,r28
 547 0142 FD1F      		adc r31,r29
 548 0144 E00F      		add r30,r16
 549 0146 F11D      		adc r31,__zero_reg__
 550 0148 8081      		ld r24,Z
 551 014a 8436      		cpi r24,lo8(100)
 552 014c 01F4      		brne .L20
 161:main.cpp      ****             {
 162:main.cpp      ****                 moteur.pivotDroit(150);
 553               		.stabn	68,0,162,.LM70-.LFBB4
 554               	.LM70:
 555 014e 66E9      		ldi r22,lo8(-106)
 556 0150 70E0      		ldi r23,0
 557 0152 CE01      		movw r24,r28
GAS LISTING /tmp/ccooBDg7.s 			page 17


 558 0154 0596      		adiw r24,5
 559 0156 0E94 0000 		call _ZN3Pwm10pivotDroitEj
 560               	.LBB56:
 561               	.LBB57:
 562               		.stabs	"/usr/avr/include/util/delay.h",132,0,0,.Ltext11
 563               	.Ltext11:
 564               		.stabn	68,0,164,.LM71-.LFBB4
 565               	.LM71:
 566 015a EFE7      		ldi r30,lo8(399999)
 567 015c FAE1      		ldi r31,hi8(399999)
 568 015e 26E0      		ldi r18,hlo8(399999)
 569 0160 E150      		1: subi r30,1
 570 0162 F040      		sbci r31,0
 571 0164 2040      		sbci r18,0
 572 0166 01F4      		brne 1b
 573 0168 00C0      		rjmp .
 574 016a 0000      		nop
 575               	.L21:
 576               	.LBE57:
 577               	.LBE56:
 578               		.stabs	"main.cpp",132,0,0,.Ltext12
 579               	.Ltext12:
 163:main.cpp      ****                 _delay_ms(250);
 164:main.cpp      ****                // moteur.Avance(120);
 165:main.cpp      ****                 while(!(bit1 || bit2 || bit3 || bit4 || bit5))
 580               		.stabn	68,0,165,.LM72-.LFBB4
 581               	.LM72:
 582 016c 8091 0000 		lds r24,bit1
 583 0170 8111      		cpse r24,__zero_reg__
 584 0172 00C0      		rjmp .L98
 585               		.stabn	68,0,165,.LM73-.LFBB4
 586               	.LM73:
 587 0174 8091 0000 		lds r24,bit2
 588 0178 8111      		cpse r24,__zero_reg__
 589 017a 00C0      		rjmp .L98
 590               		.stabn	68,0,165,.LM74-.LFBB4
 591               	.LM74:
 592 017c 8091 0000 		lds r24,bit3
 593 0180 8111      		cpse r24,__zero_reg__
 594 0182 00C0      		rjmp .L98
 595               		.stabn	68,0,165,.LM75-.LFBB4
 596               	.LM75:
 597 0184 8091 0000 		lds r24,bit4
 598 0188 8111      		cpse r24,__zero_reg__
 599 018a 00C0      		rjmp .L98
 600               		.stabn	68,0,165,.LM76-.LFBB4
 601               	.LM76:
 602 018c 8091 0000 		lds r24,bit5
 603 0190 8111      		cpse r24,__zero_reg__
 604 0192 00C0      		rjmp .L98
 166:main.cpp      ****                 {
 167:main.cpp      ****                     lireDirection();
 605               		.stabn	68,0,167,.LM77-.LFBB4
 606               	.LM77:
 607 0194 0E94 0000 		call _Z13lireDirectionv
 168:main.cpp      ****                     moteur.Tourner_Gauche(170);
 608               		.stabn	68,0,168,.LM78-.LFBB4
GAS LISTING /tmp/ccooBDg7.s 			page 18


 609               	.LM78:
 610 0198 6AEA      		ldi r22,lo8(-86)
 611 019a 70E0      		ldi r23,0
 612 019c CE01      		movw r24,r28
 613 019e 0596      		adiw r24,5
 614 01a0 0E94 0000 		call _ZN3Pwm14Tourner_GaucheEj
 615 01a4 00C0      		rjmp .L21
 616               	.L20:
 169:main.cpp      ****                 }
 170:main.cpp      **** 					
 171:main.cpp      **** 		//_delay_ms(300);
 172:main.cpp      **** 		//moteur.Tourner_Gauche(150);
 173:main.cpp      **** 		//_delay_ms(200);
 174:main.cpp      ****             }
 175:main.cpp      ****             else if (directions[compteur] == 'g')
 617               		.stabn	68,0,175,.LM79-.LFBB4
 618               	.LM79:
 619 01a6 8736      		cpi r24,lo8(103)
 620 01a8 01F4      		brne .L98
 176:main.cpp      ****             {
 177:main.cpp      **** 		moteur.pivotGauche(150);
 621               		.stabn	68,0,177,.LM80-.LFBB4
 622               	.LM80:
 623 01aa 66E9      		ldi r22,lo8(-106)
 624 01ac 70E0      		ldi r23,0
 625 01ae CE01      		movw r24,r28
 626 01b0 0596      		adiw r24,5
 627 01b2 0E94 0000 		call _ZN3Pwm11pivotGaucheEj
 628               	.LBB58:
 629               	.LBB59:
 630               		.stabs	"/usr/avr/include/util/delay.h",132,0,0,.Ltext13
 631               	.Ltext13:
 632               		.stabn	68,0,164,.LM81-.LFBB4
 633               	.LM81:
 634 01b6 8FE7      		ldi r24,lo8(399999)
 635 01b8 9AE1      		ldi r25,hi8(399999)
 636 01ba E6E0      		ldi r30,hlo8(399999)
 637 01bc 8150      		1: subi r24,1
 638 01be 9040      		sbci r25,0
 639 01c0 E040      		sbci r30,0
 640 01c2 01F4      		brne 1b
 641 01c4 00C0      		rjmp .
 642 01c6 0000      		nop
 643               	.L23:
 644               	.LBE59:
 645               	.LBE58:
 646               		.stabs	"main.cpp",132,0,0,.Ltext14
 647               	.Ltext14:
 178:main.cpp      **** 		_delay_ms(250);
 179:main.cpp      **** 		//moteur.Avance(120);
 180:main.cpp      **** 		while(!(bit1 || bit2 || bit3 || bit4 || bit5))
 648               		.stabn	68,0,180,.LM82-.LFBB4
 649               	.LM82:
 650 01c8 8091 0000 		lds r24,bit1
 651 01cc 8111      		cpse r24,__zero_reg__
 652 01ce 00C0      		rjmp .L98
 653               		.stabn	68,0,180,.LM83-.LFBB4
GAS LISTING /tmp/ccooBDg7.s 			page 19


 654               	.LM83:
 655 01d0 8091 0000 		lds r24,bit2
 656 01d4 8111      		cpse r24,__zero_reg__
 657 01d6 00C0      		rjmp .L98
 658               		.stabn	68,0,180,.LM84-.LFBB4
 659               	.LM84:
 660 01d8 8091 0000 		lds r24,bit3
 661 01dc 8111      		cpse r24,__zero_reg__
 662 01de 00C0      		rjmp .L98
 663               		.stabn	68,0,180,.LM85-.LFBB4
 664               	.LM85:
 665 01e0 8091 0000 		lds r24,bit4
 666 01e4 8111      		cpse r24,__zero_reg__
 667 01e6 00C0      		rjmp .L98
 668               		.stabn	68,0,180,.LM86-.LFBB4
 669               	.LM86:
 670 01e8 8091 0000 		lds r24,bit5
 671 01ec 8111      		cpse r24,__zero_reg__
 672 01ee 00C0      		rjmp .L98
 181:main.cpp      **** 		{
 182:main.cpp      ****                     lireDirection();
 673               		.stabn	68,0,182,.LM87-.LFBB4
 674               	.LM87:
 675 01f0 0E94 0000 		call _Z13lireDirectionv
 183:main.cpp      ****                     moteur.Tourner_Gauche(170);
 676               		.stabn	68,0,183,.LM88-.LFBB4
 677               	.LM88:
 678 01f4 6AEA      		ldi r22,lo8(-86)
 679 01f6 70E0      		ldi r23,0
 680 01f8 CE01      		movw r24,r28
 681 01fa 0596      		adiw r24,5
 682 01fc 0E94 0000 		call _ZN3Pwm14Tourner_GaucheEj
 683 0200 00C0      		rjmp .L23
 684               	.L98:
 685 0202 11E0      		ldi r17,lo8(1)
 686               	.L17:
 184:main.cpp      **** 		}		
 185:main.cpp      **** 		//_delay_ms(300);
 186:main.cpp      **** 		//moteur.Tourner_Gauche(150);
 187:main.cpp      **** 		//_delay_ms(200);
 188:main.cpp      ****             }
 189:main.cpp      **** 		
 190:main.cpp      ****         }
 191:main.cpp      ****         /////////////////// FIN DES AJOUTS EXCITANTS ///////////////////////////
 192:main.cpp      ****         
 193:main.cpp      ****         if(bit1 && !(bit2 && bit3 && bit4 && bit5)) //sensor gauche
 687               		.stabn	68,0,193,.LM89-.LFBB4
 688               	.LM89:
 689 0204 8091 0000 		lds r24,bit1
 690 0208 8823      		tst r24
 691 020a 01F0      		breq .L25
 692               		.stabn	68,0,193,.LM90-.LFBB4
 693               	.LM90:
 694 020c 8091 0000 		lds r24,bit2
 695 0210 8823      		tst r24
 696 0212 01F0      		breq .L26
 697               		.stabn	68,0,193,.LM91-.LFBB4
GAS LISTING /tmp/ccooBDg7.s 			page 20


 698               	.LM91:
 699 0214 8091 0000 		lds r24,bit3
 700 0218 8823      		tst r24
 701 021a 01F0      		breq .L26
 702               		.stabn	68,0,193,.LM92-.LFBB4
 703               	.LM92:
 704 021c 8091 0000 		lds r24,bit4
 705 0220 8823      		tst r24
 706 0222 01F0      		breq .L26
 707               		.stabn	68,0,193,.LM93-.LFBB4
 708               	.LM93:
 709 0224 8091 0000 		lds r24,bit5
 710 0228 8111      		cpse r24,__zero_reg__
 711 022a 00C0      		rjmp .L25
 712               	.L26:
 194:main.cpp      ****         {
 195:main.cpp      ****             moteur.pivotGauche(130);
 713               		.stabn	68,0,195,.LM94-.LFBB4
 714               	.LM94:
 715 022c 62E8      		ldi r22,lo8(-126)
 716 022e 70E0      		ldi r23,0
 717 0230 CE01      		movw r24,r28
 718 0232 0596      		adiw r24,5
 719 0234 0E94 0000 		call _ZN3Pwm11pivotGaucheEj
 720 0238 00C0      		rjmp .L14
 721               	.L25:
 196:main.cpp      ****           
 197:main.cpp      ****             
 198:main.cpp      ****         }
 199:main.cpp      ****         else if(bit1 && bit2 && bit3 && bit4 && bit5)
 722               		.stabn	68,0,199,.LM95-.LFBB4
 723               	.LM95:
 724 023a 8091 0000 		lds r24,bit1
 725 023e 8823      		tst r24
 726 0240 01F0      		breq .L27
 727               		.stabn	68,0,199,.LM96-.LFBB4
 728               	.LM96:
 729 0242 8091 0000 		lds r24,bit2
 730 0246 8823      		tst r24
 731 0248 01F0      		breq .L27
 732               		.stabn	68,0,199,.LM97-.LFBB4
 733               	.LM97:
 734 024a 8091 0000 		lds r24,bit3
 735 024e 8823      		tst r24
 736 0250 01F0      		breq .L27
 737               		.stabn	68,0,199,.LM98-.LFBB4
 738               	.LM98:
 739 0252 8091 0000 		lds r24,bit4
 740 0256 8823      		tst r24
 741 0258 01F0      		breq .L27
 742               		.stabn	68,0,199,.LM99-.LFBB4
 743               	.LM99:
 744 025a 8091 0000 		lds r24,bit5
 745 025e 8111      		cpse r24,__zero_reg__
 746 0260 00C0      		rjmp .L28
 747               	.L27:
 200:main.cpp      ****         {
GAS LISTING /tmp/ccooBDg7.s 			page 21


 201:main.cpp      ****             if(compteur >= 3)
 202:main.cpp      ****             {
 203:main.cpp      ****                 moteur.Avance(0);
 204:main.cpp      ****                 return 0;
 205:main.cpp      ****             }
 206:main.cpp      ****             else
 207:main.cpp      ****                 moteur.Avance(120);
 208:main.cpp      ****         }
 209:main.cpp      ****         else if(compteur == 0 && !bit1 && bit2 && bit3 && bit4 && !bit5) // Attempt pour gerer l'in
 748               		.stabn	68,0,209,.LM100-.LFBB4
 749               	.LM100:
 750 0262 0111      		cpse r16,__zero_reg__
 751 0264 00C0      		rjmp .L30
 752               		.stabn	68,0,209,.LM101-.LFBB4
 753               	.LM101:
 754 0266 8091 0000 		lds r24,bit1
 755 026a 8111      		cpse r24,__zero_reg__
 756 026c 00C0      		rjmp .L30
 757               		.stabn	68,0,209,.LM102-.LFBB4
 758               	.LM102:
 759 026e 8091 0000 		lds r24,bit2
 760 0272 8823      		tst r24
 761 0274 01F4      		brne .+2
 762 0276 00C0      		rjmp .L30
 763               		.stabn	68,0,209,.LM103-.LFBB4
 764               	.LM103:
 765 0278 8091 0000 		lds r24,bit3
 766 027c 8823      		tst r24
 767 027e 01F4      		brne .+2
 768 0280 00C0      		rjmp .L30
 769               		.stabn	68,0,209,.LM104-.LFBB4
 770               	.LM104:
 771 0282 8091 0000 		lds r24,bit4
 772 0286 8823      		tst r24
 773 0288 01F4      		brne .+2
 774 028a 00C0      		rjmp .L30
 775               		.stabn	68,0,209,.LM105-.LFBB4
 776               	.LM105:
 777 028c 8091 0000 		lds r24,bit5
 778 0290 8111      		cpse r24,__zero_reg__
 779 0292 00C0      		rjmp .L30
 780 0294 00C0      		rjmp .L227
 781               	.L28:
 201:main.cpp      ****             {
 782               		.stabn	68,0,201,.LM106-.LFBB4
 783               	.LM106:
 784 0296 0330      		cpi r16,lo8(3)
 785 0298 00F4      		brsh .+2
 786 029a 00C0      		rjmp .L211
 787 029c 00C0      		rjmp .L71
 788               	.L227:
 210:main.cpp      ****         {
 211:main.cpp      ****             
 212:main.cpp      ****                 if (directions[compteur] == 'd')
 789               		.stabn	68,0,212,.LM107-.LFBB4
 790               	.LM107:
 791 029e 8981      		ldd r24,Y+1
GAS LISTING /tmp/ccooBDg7.s 			page 22


 792 02a0 8436      		cpi r24,lo8(100)
 793 02a2 01F4      		brne .L217
 213:main.cpp      ****                 {
 214:main.cpp      ****                     moteur.pivotDroit(150);
 794               		.stabn	68,0,214,.LM108-.LFBB4
 795               	.LM108:
 796 02a4 66E9      		ldi r22,lo8(-106)
 797 02a6 70E0      		ldi r23,0
 798 02a8 CE01      		movw r24,r28
 799 02aa 0596      		adiw r24,5
 800 02ac 0E94 0000 		call _ZN3Pwm10pivotDroitEj
 801               	.LBB60:
 802               	.LBB61:
 803               		.stabs	"/usr/avr/include/util/delay.h",132,0,0,.Ltext15
 804               	.Ltext15:
 805               		.stabn	68,0,164,.LM109-.LFBB4
 806               	.LM109:
 807 02b0 FFE7      		ldi r31,lo8(399999)
 808 02b2 2AE1      		ldi r18,hi8(399999)
 809 02b4 86E0      		ldi r24,hlo8(399999)
 810 02b6 F150      		1: subi r31,1
 811 02b8 2040      		sbci r18,0
 812 02ba 8040      		sbci r24,0
 813 02bc 01F4      		brne 1b
 814 02be 00C0      		rjmp .
 815 02c0 0000      		nop
 816               	.L32:
 817               	.LBE61:
 818               	.LBE60:
 819               		.stabs	"main.cpp",132,0,0,.Ltext16
 820               	.Ltext16:
 215:main.cpp      ****                     _delay_ms(250);
 216:main.cpp      ****                 // moteur.Avance(120);
 217:main.cpp      ****                     while(!(bit1 || bit2 || bit3 || bit4 || bit5))
 821               		.stabn	68,0,217,.LM110-.LFBB4
 822               	.LM110:
 823 02c2 8091 0000 		lds r24,bit1
 824 02c6 8823      		tst r24
 825 02c8 01F0      		breq .L33
 826               	.L34:
 218:main.cpp      ****                     {
 219:main.cpp      ****                         lireDirection();
 220:main.cpp      ****                         moteur.Tourner_Gauche(170);
 221:main.cpp      ****                     }
 222:main.cpp      ****                                             
 223:main.cpp      ****                     //_delay_ms(300);
 224:main.cpp      ****                     //moteur.Tourner_Gauche(150);
 225:main.cpp      ****                     //_delay_ms(200);
 226:main.cpp      ****                 }
 227:main.cpp      ****                 else if (directions[compteur] == 'g')
 228:main.cpp      ****                 {
 229:main.cpp      ****                     moteur.pivotGauche(150);
 230:main.cpp      ****                     _delay_ms(250);
 231:main.cpp      ****                     //moteur.Avance(120);
 232:main.cpp      ****                     while(!(bit1 || bit2 || bit3 || bit4 || bit5))
 233:main.cpp      ****                     {
 234:main.cpp      ****                         lireDirection();
GAS LISTING /tmp/ccooBDg7.s 			page 23


 235:main.cpp      ****                         moteur.Tourner_Gauche(170);
 236:main.cpp      ****                     }		
 237:main.cpp      ****                     //_delay_ms(300);
 238:main.cpp      ****                     //moteur.Tourner_Gauche(150);
 239:main.cpp      ****                     //_delay_ms(200);
 240:main.cpp      ****                 }
 241:main.cpp      ****                                     
 242:main.cpp      ****                     
 243:main.cpp      ****                 compteur++;
 827               		.stabn	68,0,243,.LM111-.LFBB4
 828               	.LM111:
 829 02ca 01E0      		ldi r16,lo8(1)
 830 02cc 00C0      		rjmp .L14
 831               	.L33:
 217:main.cpp      ****                     {
 832               		.stabn	68,0,217,.LM112-.LFBB4
 833               	.LM112:
 834 02ce 8091 0000 		lds r24,bit2
 835 02d2 8111      		cpse r24,__zero_reg__
 836 02d4 00C0      		rjmp .L34
 217:main.cpp      ****                     {
 837               		.stabn	68,0,217,.LM113-.LFBB4
 838               	.LM113:
 839 02d6 8091 0000 		lds r24,bit3
 840 02da 8111      		cpse r24,__zero_reg__
 841 02dc 00C0      		rjmp .L34
 217:main.cpp      ****                     {
 842               		.stabn	68,0,217,.LM114-.LFBB4
 843               	.LM114:
 844 02de 8091 0000 		lds r24,bit4
 845 02e2 8111      		cpse r24,__zero_reg__
 846 02e4 00C0      		rjmp .L34
 217:main.cpp      ****                     {
 847               		.stabn	68,0,217,.LM115-.LFBB4
 848               	.LM115:
 849 02e6 8091 0000 		lds r24,bit5
 850 02ea 8111      		cpse r24,__zero_reg__
 851 02ec 00C0      		rjmp .L34
 219:main.cpp      ****                         moteur.Tourner_Gauche(170);
 852               		.stabn	68,0,219,.LM116-.LFBB4
 853               	.LM116:
 854 02ee 0E94 0000 		call _Z13lireDirectionv
 220:main.cpp      ****                     }
 855               		.stabn	68,0,220,.LM117-.LFBB4
 856               	.LM117:
 857 02f2 6AEA      		ldi r22,lo8(-86)
 858 02f4 70E0      		ldi r23,0
 859 02f6 CE01      		movw r24,r28
 860 02f8 0596      		adiw r24,5
 861 02fa 0E94 0000 		call _ZN3Pwm14Tourner_GaucheEj
 862 02fe 00C0      		rjmp .L32
 863               	.L217:
 227:main.cpp      ****                 {
 864               		.stabn	68,0,227,.LM118-.LFBB4
 865               	.LM118:
 866 0300 8736      		cpi r24,lo8(103)
 867 0302 01F4      		brne .L34
GAS LISTING /tmp/ccooBDg7.s 			page 24


 229:main.cpp      ****                     _delay_ms(250);
 868               		.stabn	68,0,229,.LM119-.LFBB4
 869               	.LM119:
 870 0304 66E9      		ldi r22,lo8(-106)
 871 0306 70E0      		ldi r23,0
 872 0308 CE01      		movw r24,r28
 873 030a 0596      		adiw r24,5
 874 030c 0E94 0000 		call _ZN3Pwm11pivotGaucheEj
 875               	.LBB62:
 876               	.LBB63:
 877               		.stabs	"/usr/avr/include/util/delay.h",132,0,0,.Ltext17
 878               	.Ltext17:
 879               		.stabn	68,0,164,.LM120-.LFBB4
 880               	.LM120:
 881 0310 9FE7      		ldi r25,lo8(399999)
 882 0312 EAE1      		ldi r30,hi8(399999)
 883 0314 F6E0      		ldi r31,hlo8(399999)
 884 0316 9150      		1: subi r25,1
 885 0318 E040      		sbci r30,0
 886 031a F040      		sbci r31,0
 887 031c 01F4      		brne 1b
 888 031e 00C0      		rjmp .
 889 0320 0000      		nop
 890               	.L36:
 891               	.LBE63:
 892               	.LBE62:
 893               		.stabs	"main.cpp",132,0,0,.Ltext18
 894               	.Ltext18:
 232:main.cpp      ****                     {
 895               		.stabn	68,0,232,.LM121-.LFBB4
 896               	.LM121:
 897 0322 8091 0000 		lds r24,bit1
 898 0326 8111      		cpse r24,__zero_reg__
 899 0328 00C0      		rjmp .L34
 232:main.cpp      ****                     {
 900               		.stabn	68,0,232,.LM122-.LFBB4
 901               	.LM122:
 902 032a 8091 0000 		lds r24,bit2
 903 032e 8111      		cpse r24,__zero_reg__
 904 0330 00C0      		rjmp .L34
 232:main.cpp      ****                     {
 905               		.stabn	68,0,232,.LM123-.LFBB4
 906               	.LM123:
 907 0332 8091 0000 		lds r24,bit3
 908 0336 8111      		cpse r24,__zero_reg__
 909 0338 00C0      		rjmp .L34
 232:main.cpp      ****                     {
 910               		.stabn	68,0,232,.LM124-.LFBB4
 911               	.LM124:
 912 033a 8091 0000 		lds r24,bit4
 913 033e 8111      		cpse r24,__zero_reg__
 914 0340 00C0      		rjmp .L34
 232:main.cpp      ****                     {
 915               		.stabn	68,0,232,.LM125-.LFBB4
 916               	.LM125:
 917 0342 8091 0000 		lds r24,bit5
 918 0346 8111      		cpse r24,__zero_reg__
GAS LISTING /tmp/ccooBDg7.s 			page 25


 919 0348 00C0      		rjmp .L34
 234:main.cpp      ****                         moteur.Tourner_Gauche(170);
 920               		.stabn	68,0,234,.LM126-.LFBB4
 921               	.LM126:
 922 034a 0E94 0000 		call _Z13lireDirectionv
 235:main.cpp      ****                     }		
 923               		.stabn	68,0,235,.LM127-.LFBB4
 924               	.LM127:
 925 034e 6AEA      		ldi r22,lo8(-86)
 926 0350 70E0      		ldi r23,0
 927 0352 CE01      		movw r24,r28
 928 0354 0596      		adiw r24,5
 929 0356 0E94 0000 		call _ZN3Pwm14Tourner_GaucheEj
 930 035a 00C0      		rjmp .L36
 931               	.L30:
 244:main.cpp      ****             
 245:main.cpp      ****         }
 246:main.cpp      ****         else if(bit1 && bit2 && !(bit3 && bit4 && bit5)) // 1 1 0 0 0
 932               		.stabn	68,0,246,.LM128-.LFBB4
 933               	.LM128:
 934 035c 8091 0000 		lds r24,bit1
 935 0360 8823      		tst r24
 936 0362 01F0      		breq .L38
 937               		.stabn	68,0,246,.LM129-.LFBB4
 938               	.LM129:
 939 0364 8091 0000 		lds r24,bit2
 940 0368 8823      		tst r24
 941 036a 01F0      		breq .L38
 942               		.stabn	68,0,246,.LM130-.LFBB4
 943               	.LM130:
 944 036c 8091 0000 		lds r24,bit3
 945 0370 8823      		tst r24
 946 0372 01F0      		breq .L41
 947               		.stabn	68,0,246,.LM131-.LFBB4
 948               	.LM131:
 949 0374 8091 0000 		lds r24,bit4
 950 0378 8823      		tst r24
 951 037a 01F0      		breq .L41
 952               		.stabn	68,0,246,.LM132-.LFBB4
 953               	.LM132:
 954 037c 8091 0000 		lds r24,bit5
 955 0380 8823      		tst r24
 956 0382 01F0      		breq .L41
 957               	.L38:
 247:main.cpp      ****         {
 248:main.cpp      ****             moteur.Tourner_Gauche(120);
 249:main.cpp      ****         }
 250:main.cpp      ****         else if(!bit1 && bit2 && !(bit3 && bit4 && bit5)) // 0 1 0 0 0
 958               		.stabn	68,0,250,.LM133-.LFBB4
 959               	.LM133:
 960 0384 8091 0000 		lds r24,bit1
 961 0388 8111      		cpse r24,__zero_reg__
 962 038a 00C0      		rjmp .L40
 963               		.stabn	68,0,250,.LM134-.LFBB4
 964               	.LM134:
 965 038c 8091 0000 		lds r24,bit2
 966 0390 8823      		tst r24
GAS LISTING /tmp/ccooBDg7.s 			page 26


 967 0392 01F0      		breq .L40
 968               		.stabn	68,0,250,.LM135-.LFBB4
 969               	.LM135:
 970 0394 8091 0000 		lds r24,bit3
 971 0398 8823      		tst r24
 972 039a 01F0      		breq .L41
 973               		.stabn	68,0,250,.LM136-.LFBB4
 974               	.LM136:
 975 039c 8091 0000 		lds r24,bit4
 976 03a0 8823      		tst r24
 977 03a2 01F0      		breq .L41
 978               		.stabn	68,0,250,.LM137-.LFBB4
 979               	.LM137:
 980 03a4 8091 0000 		lds r24,bit5
 981 03a8 8111      		cpse r24,__zero_reg__
 982 03aa 00C0      		rjmp .L40
 983               	.L41:
 251:main.cpp      ****         {
 252:main.cpp      ****             moteur.Tourner_Gauche(120);
 984               		.stabn	68,0,252,.LM138-.LFBB4
 985               	.LM138:
 986 03ac 68E7      		ldi r22,lo8(120)
 987 03ae 70E0      		ldi r23,0
 988 03b0 CE01      		movw r24,r28
 989 03b2 0596      		adiw r24,5
 990 03b4 0E94 0000 		call _ZN3Pwm14Tourner_GaucheEj
 991 03b8 00C0      		rjmp .L14
 992               	.L40:
 253:main.cpp      ****         }
 254:main.cpp      ****         else if(!(bit1) && !(bit2) && bit3 && bit4 && bit5) // 0 0 1 1 1
 993               		.stabn	68,0,254,.LM139-.LFBB4
 994               	.LM139:
 995 03ba 8091 0000 		lds r24,bit1
 996 03be 8111      		cpse r24,__zero_reg__
 997 03c0 00C0      		rjmp .L42
 998               		.stabn	68,0,254,.LM140-.LFBB4
 999               	.LM140:
 1000 03c2 8091 0000 		lds r24,bit2
 1001 03c6 8111      		cpse r24,__zero_reg__
 1002 03c8 00C0      		rjmp .L42
 1003               		.stabn	68,0,254,.LM141-.LFBB4
 1004               	.LM141:
 1005 03ca 8091 0000 		lds r24,bit3
 1006 03ce 8823      		tst r24
 1007 03d0 01F0      		breq .L42
 1008               		.stabn	68,0,254,.LM142-.LFBB4
 1009               	.LM142:
 1010 03d2 8091 0000 		lds r24,bit4
 1011 03d6 8823      		tst r24
 1012 03d8 01F0      		breq .L42
 1013               		.stabn	68,0,254,.LM143-.LFBB4
 1014               	.LM143:
 1015 03da 8091 0000 		lds r24,bit5
 1016 03de 8823      		tst r24
 1017 03e0 01F0      		breq .L42
 255:main.cpp      ****         {
 256:main.cpp      ****             moteur.pivotDroit(120);
GAS LISTING /tmp/ccooBDg7.s 			page 27


 1018               		.stabn	68,0,256,.LM144-.LFBB4
 1019               	.LM144:
 1020 03e2 68E7      		ldi r22,lo8(120)
 1021 03e4 70E0      		ldi r23,0
 1022 03e6 CE01      		movw r24,r28
 1023 03e8 0596      		adiw r24,5
 1024 03ea 0E94 0000 		call _ZN3Pwm10pivotDroitEj
 1025               	.LBB64:
 1026               	.LBB65:
 1027               		.stabs	"/usr/avr/include/util/delay.h",132,0,0,.Ltext19
 1028               	.Ltext19:
 1029               		.stabn	68,0,164,.LM145-.LFBB4
 1030               	.LM145:
 1031 03ee 8FEF      		ldi r24,lo8(479999)
 1032 03f0 92E5      		ldi r25,hi8(479999)
 1033 03f2 E7E0      		ldi r30,hlo8(479999)
 1034 03f4 8150      		1: subi r24,1
 1035 03f6 9040      		sbci r25,0
 1036 03f8 E040      		sbci r30,0
 1037 03fa 01F4      		brne 1b
 1038 03fc 00C0      		rjmp .L226
 1039               	.L42:
 1040               	.LBE65:
 1041               	.LBE64:
 1042               		.stabs	"main.cpp",132,0,0,.Ltext20
 1043               	.Ltext20:
 257:main.cpp      ****             _delay_ms(300);
 258:main.cpp      ****         }
 259:main.cpp      ****         else if(bit1 && bit2 && bit3 && !(bit4) && !(bit5)) // 1 1 1 0 0
 1044               		.stabn	68,0,259,.LM146-.LFBB4
 1045               	.LM146:
 1046 03fe 8091 0000 		lds r24,bit1
 1047 0402 8823      		tst r24
 1048 0404 01F0      		breq .L44
 1049               		.stabn	68,0,259,.LM147-.LFBB4
 1050               	.LM147:
 1051 0406 8091 0000 		lds r24,bit2
 1052 040a 8823      		tst r24
 1053 040c 01F0      		breq .L44
 1054               		.stabn	68,0,259,.LM148-.LFBB4
 1055               	.LM148:
 1056 040e 8091 0000 		lds r24,bit3
 1057 0412 8823      		tst r24
 1058 0414 01F0      		breq .L44
 1059               		.stabn	68,0,259,.LM149-.LFBB4
 1060               	.LM149:
 1061 0416 8091 0000 		lds r24,bit4
 1062 041a 8111      		cpse r24,__zero_reg__
 1063 041c 00C0      		rjmp .L44
 1064               		.stabn	68,0,259,.LM150-.LFBB4
 1065               	.LM150:
 1066 041e 8091 0000 		lds r24,bit5
 1067 0422 8111      		cpse r24,__zero_reg__
 1068 0424 00C0      		rjmp .L44
 260:main.cpp      ****         {
 261:main.cpp      ****             moteur.pivotGauche(120);
 1069               		.stabn	68,0,261,.LM151-.LFBB4
GAS LISTING /tmp/ccooBDg7.s 			page 28


 1070               	.LM151:
 1071 0426 68E7      		ldi r22,lo8(120)
 1072 0428 70E0      		ldi r23,0
 1073 042a CE01      		movw r24,r28
 1074 042c 0596      		adiw r24,5
 1075 042e 0E94 0000 		call _ZN3Pwm11pivotGaucheEj
 1076               	.LBB66:
 1077               	.LBB67:
 1078               		.stabs	"/usr/avr/include/util/delay.h",132,0,0,.Ltext21
 1079               	.Ltext21:
 1080               		.stabn	68,0,164,.LM152-.LFBB4
 1081               	.LM152:
 1082 0432 FFEF      		ldi r31,lo8(479999)
 1083 0434 22E5      		ldi r18,hi8(479999)
 1084 0436 87E0      		ldi r24,hlo8(479999)
 1085 0438 F150      		1: subi r31,1
 1086 043a 2040      		sbci r18,0
 1087 043c 8040      		sbci r24,0
 1088 043e 01F4      		brne 1b
 1089               	.L226:
 1090 0440 00C0      		rjmp .
 1091 0442 0000      		nop
 1092 0444 00C0      		rjmp .L14
 1093               	.L44:
 1094               	.LBE67:
 1095               	.LBE66:
 1096               		.stabs	"main.cpp",132,0,0,.Ltext22
 1097               	.Ltext22:
 262:main.cpp      ****             _delay_ms(300);
 263:main.cpp      ****         }
 264:main.cpp      ****         else if (!(bit1 && bit2 && bit3 && bit4) && bit5) //0 0 0 0 1
 1098               		.stabn	68,0,264,.LM153-.LFBB4
 1099               	.LM153:
 1100 0446 8091 0000 		lds r24,bit1
 1101 044a 8823      		tst r24
 1102 044c 01F0      		breq .L46
 1103               		.stabn	68,0,264,.LM154-.LFBB4
 1104               	.LM154:
 1105 044e 8091 0000 		lds r24,bit2
 1106 0452 8823      		tst r24
 1107 0454 01F0      		breq .L46
 1108               		.stabn	68,0,264,.LM155-.LFBB4
 1109               	.LM155:
 1110 0456 8091 0000 		lds r24,bit3
 1111 045a 8823      		tst r24
 1112 045c 01F0      		breq .L46
 1113               		.stabn	68,0,264,.LM156-.LFBB4
 1114               	.LM156:
 1115 045e 8091 0000 		lds r24,bit4
 1116 0462 8111      		cpse r24,__zero_reg__
 1117 0464 00C0      		rjmp .L47
 1118               	.L46:
 1119               		.stabn	68,0,264,.LM157-.LFBB4
 1120               	.LM157:
 1121 0466 8091 0000 		lds r24,bit5
 1122 046a 8111      		cpse r24,__zero_reg__
 1123 046c 00C0      		rjmp .L48
GAS LISTING /tmp/ccooBDg7.s 			page 29


 1124               	.L47:
 265:main.cpp      ****         {
 266:main.cpp      ****             moteur.pivotDroit(130);
 267:main.cpp      ****           
 268:main.cpp      ****         }
 269:main.cpp      ****         else if (!(bit1 && bit2 && bit3) && bit4 && bit5) //0 0 0 1 1
 1125               		.stabn	68,0,269,.LM158-.LFBB4
 1126               	.LM158:
 1127 046e 8091 0000 		lds r24,bit1
 1128 0472 8823      		tst r24
 1129 0474 01F0      		breq .L49
 1130               		.stabn	68,0,269,.LM159-.LFBB4
 1131               	.LM159:
 1132 0476 8091 0000 		lds r24,bit2
 1133 047a 8823      		tst r24
 1134 047c 01F0      		breq .L49
 1135               		.stabn	68,0,269,.LM160-.LFBB4
 1136               	.LM160:
 1137 047e 8091 0000 		lds r24,bit3
 1138 0482 8111      		cpse r24,__zero_reg__
 1139 0484 00C0      		rjmp .L50
 1140               	.L49:
 1141               		.stabn	68,0,269,.LM161-.LFBB4
 1142               	.LM161:
 1143 0486 8091 0000 		lds r24,bit4
 1144 048a 8823      		tst r24
 1145 048c 01F0      		breq .L50
 1146               		.stabn	68,0,269,.LM162-.LFBB4
 1147               	.LM162:
 1148 048e 8091 0000 		lds r24,bit5
 1149 0492 8111      		cpse r24,__zero_reg__
 1150 0494 00C0      		rjmp .L208
 1151 0496 00C0      		rjmp .L50
 1152               	.L48:
 266:main.cpp      ****           
 1153               		.stabn	68,0,266,.LM163-.LFBB4
 1154               	.LM163:
 1155 0498 62E8      		ldi r22,lo8(-126)
 1156 049a 70E0      		ldi r23,0
 1157 049c CE01      		movw r24,r28
 1158 049e 0596      		adiw r24,5
 1159 04a0 0E94 0000 		call _ZN3Pwm10pivotDroitEj
 1160 04a4 00C0      		rjmp .L14
 1161               	.L50:
 270:main.cpp      ****         {
 271:main.cpp      ****             moteur.Tourner_Droite(120);
 272:main.cpp      ****         }
 273:main.cpp      ****         else if (!(bit1 && bit2 && bit3) && bit4 && !(bit5)) // 0 0 0 1 0
 1162               		.stabn	68,0,273,.LM164-.LFBB4
 1163               	.LM164:
 1164 04a6 8091 0000 		lds r24,bit1
 1165 04aa 8823      		tst r24
 1166 04ac 01F0      		breq .L52
 1167               		.stabn	68,0,273,.LM165-.LFBB4
 1168               	.LM165:
 1169 04ae 8091 0000 		lds r24,bit2
 1170 04b2 8823      		tst r24
GAS LISTING /tmp/ccooBDg7.s 			page 30


 1171 04b4 01F0      		breq .L52
 1172               		.stabn	68,0,273,.LM166-.LFBB4
 1173               	.LM166:
 1174 04b6 8091 0000 		lds r24,bit3
 1175 04ba 8111      		cpse r24,__zero_reg__
 1176 04bc 00C0      		rjmp .L53
 1177               	.L52:
 1178               		.stabn	68,0,273,.LM167-.LFBB4
 1179               	.LM167:
 1180 04be 8091 0000 		lds r24,bit4
 1181 04c2 8823      		tst r24
 1182 04c4 01F0      		breq .L53
 1183               		.stabn	68,0,273,.LM168-.LFBB4
 1184               	.LM168:
 1185 04c6 8091 0000 		lds r24,bit5
 1186 04ca 8111      		cpse r24,__zero_reg__
 1187 04cc 00C0      		rjmp .L53
 1188               	.L208:
 274:main.cpp      ****         {
 275:main.cpp      ****             moteur.Tourner_Droite(120);
 1189               		.stabn	68,0,275,.LM169-.LFBB4
 1190               	.LM169:
 1191 04ce 68E7      		ldi r22,lo8(120)
 1192 04d0 70E0      		ldi r23,0
 1193 04d2 CE01      		movw r24,r28
 1194 04d4 0596      		adiw r24,5
 1195 04d6 0E94 0000 		call _ZN3Pwm14Tourner_DroiteEj
 1196 04da 00C0      		rjmp .L14
 1197               	.L53:
 276:main.cpp      ****         }
 277:main.cpp      ****         
 278:main.cpp      **** 	else if (!(bit1) && !(bit2) && bit3 && !bit4 && !bit5) // 0 0 1 0 0
 1198               		.stabn	68,0,278,.LM170-.LFBB4
 1199               	.LM170:
 1200 04dc 8091 0000 		lds r24,bit1
 1201 04e0 8111      		cpse r24,__zero_reg__
 1202 04e2 00C0      		rjmp .L55
 1203               		.stabn	68,0,278,.LM171-.LFBB4
 1204               	.LM171:
 1205 04e4 8091 0000 		lds r24,bit2
 1206 04e8 8111      		cpse r24,__zero_reg__
 1207 04ea 00C0      		rjmp .L55
 1208               		.stabn	68,0,278,.LM172-.LFBB4
 1209               	.LM172:
 1210 04ec 8091 0000 		lds r24,bit3
 1211 04f0 8823      		tst r24
 1212 04f2 01F0      		breq .L55
 1213               		.stabn	68,0,278,.LM173-.LFBB4
 1214               	.LM173:
 1215 04f4 8091 0000 		lds r24,bit4
 1216 04f8 8111      		cpse r24,__zero_reg__
 1217 04fa 00C0      		rjmp .L55
 1218               		.stabn	68,0,278,.LM174-.LFBB4
 1219               	.LM174:
 1220 04fc 8091 0000 		lds r24,bit5
 1221 0500 8823      		tst r24
 1222 0502 01F0      		breq .L211
GAS LISTING /tmp/ccooBDg7.s 			page 31


 1223               	.L55:
 279:main.cpp      **** 	{
 280:main.cpp      **** 		moteur.Avance(120);
 281:main.cpp      **** 	}
 282:main.cpp      **** 	else if (!bit1 && bit2 && bit3 && !bit4 && !bit5) //0 1 1 0 0
 1224               		.stabn	68,0,282,.LM175-.LFBB4
 1225               	.LM175:
 1226 0504 8091 0000 		lds r24,bit1
 1227 0508 8111      		cpse r24,__zero_reg__
 1228 050a 00C0      		rjmp .L57
 1229               		.stabn	68,0,282,.LM176-.LFBB4
 1230               	.LM176:
 1231 050c 8091 0000 		lds r24,bit2
 1232 0510 8823      		tst r24
 1233 0512 01F0      		breq .L57
 1234               		.stabn	68,0,282,.LM177-.LFBB4
 1235               	.LM177:
 1236 0514 8091 0000 		lds r24,bit3
 1237 0518 8823      		tst r24
 1238 051a 01F0      		breq .L57
 1239               		.stabn	68,0,282,.LM178-.LFBB4
 1240               	.LM178:
 1241 051c 8091 0000 		lds r24,bit4
 1242 0520 8111      		cpse r24,__zero_reg__
 1243 0522 00C0      		rjmp .L57
 1244               		.stabn	68,0,282,.LM179-.LFBB4
 1245               	.LM179:
 1246 0524 8091 0000 		lds r24,bit5
 1247 0528 8823      		tst r24
 1248 052a 01F0      		breq .L211
 1249               	.L57:
 283:main.cpp      **** 	{
 284:main.cpp      **** 		moteur.Avance(120);
 285:main.cpp      **** 	}
 286:main.cpp      **** 	else if (!bit1 && !bit2 && bit3 && bit4 && !bit5) // 0 0 1 1 0
 1250               		.stabn	68,0,286,.LM180-.LFBB4
 1251               	.LM180:
 1252 052c 8091 0000 		lds r24,bit1
 1253 0530 8111      		cpse r24,__zero_reg__
 1254 0532 00C0      		rjmp .L59
 1255               		.stabn	68,0,286,.LM181-.LFBB4
 1256               	.LM181:
 1257 0534 8091 0000 		lds r24,bit2
 1258 0538 8111      		cpse r24,__zero_reg__
 1259 053a 00C0      		rjmp .L59
 1260               		.stabn	68,0,286,.LM182-.LFBB4
 1261               	.LM182:
 1262 053c 8091 0000 		lds r24,bit3
 1263 0540 8823      		tst r24
 1264 0542 01F0      		breq .L59
 1265               		.stabn	68,0,286,.LM183-.LFBB4
 1266               	.LM183:
 1267 0544 8091 0000 		lds r24,bit4
 1268 0548 8823      		tst r24
 1269 054a 01F0      		breq .L59
 1270               		.stabn	68,0,286,.LM184-.LFBB4
 1271               	.LM184:
GAS LISTING /tmp/ccooBDg7.s 			page 32


 1272 054c 8091 0000 		lds r24,bit5
 1273 0550 8111      		cpse r24,__zero_reg__
 1274 0552 00C0      		rjmp .L59
 1275               	.L211:
 287:main.cpp      **** 	{
 288:main.cpp      **** 		moteur.Avance(120);
 1276               		.stabn	68,0,288,.LM185-.LFBB4
 1277               	.LM185:
 1278 0554 68E7      		ldi r22,lo8(120)
 1279 0556 70E0      		ldi r23,0
 1280 0558 CE01      		movw r24,r28
 1281 055a 0596      		adiw r24,5
 1282 055c 0E94 0000 		call _ZN3Pwm6AvanceEj
 1283 0560 00C0      		rjmp .L14
 1284               	.L59:
 289:main.cpp      **** 	}		
 290:main.cpp      **** 	else if (!(bit1 || bit2 || bit3 || bit4 || bit5))	// 0 0 0 0 0
 1285               		.stabn	68,0,290,.LM186-.LFBB4
 1286               	.LM186:
 1287 0562 8091 0000 		lds r24,bit1
 1288 0566 8111      		cpse r24,__zero_reg__
 1289 0568 00C0      		rjmp .L14
 1290               		.stabn	68,0,290,.LM187-.LFBB4
 1291               	.LM187:
 1292 056a 8091 0000 		lds r24,bit2
 1293 056e 8111      		cpse r24,__zero_reg__
 1294 0570 00C0      		rjmp .L14
 1295               		.stabn	68,0,290,.LM188-.LFBB4
 1296               	.LM188:
 1297 0572 8091 0000 		lds r24,bit3
 1298 0576 8111      		cpse r24,__zero_reg__
 1299 0578 00C0      		rjmp .L14
 1300               		.stabn	68,0,290,.LM189-.LFBB4
 1301               	.LM189:
 1302 057a 8091 0000 		lds r24,bit4
 1303 057e 8111      		cpse r24,__zero_reg__
 1304 0580 00C0      		rjmp .L14
 1305               		.stabn	68,0,290,.LM190-.LFBB4
 1306               	.LM190:
 1307 0582 8091 0000 		lds r24,bit5
 1308 0586 8111      		cpse r24,__zero_reg__
 1309 0588 00C0      		rjmp .L14
 291:main.cpp      **** 	{
 292:main.cpp      **** 			moteur.Avance(120);
 1310               		.stabn	68,0,292,.LM191-.LFBB4
 1311               	.LM191:
 1312 058a 68E7      		ldi r22,lo8(120)
 1313 058c 70E0      		ldi r23,0
 1314 058e CE01      		movw r24,r28
 1315 0590 0596      		adiw r24,5
 1316 0592 0E94 0000 		call _ZN3Pwm6AvanceEj
 1317               	.LBB68:
 1318               	.LBB69:
 1319               		.stabs	"/usr/avr/include/util/delay.h",132,0,0,.Ltext23
 1320               	.Ltext23:
 1321               		.stabn	68,0,164,.LM192-.LFBB4
 1322               	.LM192:
GAS LISTING /tmp/ccooBDg7.s 			page 33


 1323 0596 9FEF      		ldi r25,lo8(479999)
 1324 0598 E2E5      		ldi r30,hi8(479999)
 1325 059a F7E0      		ldi r31,hlo8(479999)
 1326 059c 9150      		1: subi r25,1
 1327 059e E040      		sbci r30,0
 1328 05a0 F040      		sbci r31,0
 1329 05a2 01F4      		brne 1b
 1330 05a4 00C0      		rjmp .
 1331 05a6 0000      		nop
 1332               	.LBE69:
 1333               	.LBE68:
 1334               		.stabs	"main.cpp",132,0,0,.Ltext24
 1335               	.Ltext24:
 293:main.cpp      **** 			_delay_ms(300);
 294:main.cpp      **** 			
 295:main.cpp      **** 			if (!(bit1 || bit2 || bit3 || bit4 || bit5))
 1336               		.stabn	68,0,295,.LM193-.LFBB4
 1337               	.LM193:
 1338 05a8 8091 0000 		lds r24,bit1
 1339 05ac 8111      		cpse r24,__zero_reg__
 1340 05ae 00C0      		rjmp .L14
 1341               		.stabn	68,0,295,.LM194-.LFBB4
 1342               	.LM194:
 1343 05b0 8091 0000 		lds r24,bit2
 1344 05b4 8111      		cpse r24,__zero_reg__
 1345 05b6 00C0      		rjmp .L14
 1346               		.stabn	68,0,295,.LM195-.LFBB4
 1347               	.LM195:
 1348 05b8 8091 0000 		lds r24,bit3
 1349 05bc 8111      		cpse r24,__zero_reg__
 1350 05be 00C0      		rjmp .L14
 1351               		.stabn	68,0,295,.LM196-.LFBB4
 1352               	.LM196:
 1353 05c0 8091 0000 		lds r24,bit4
 1354 05c4 8111      		cpse r24,__zero_reg__
 1355 05c6 00C0      		rjmp .L14
 1356               		.stabn	68,0,295,.LM197-.LFBB4
 1357               	.LM197:
 1358 05c8 8091 0000 		lds r24,bit5
 1359 05cc 8111      		cpse r24,__zero_reg__
 1360 05ce 00C0      		rjmp .L14
 296:main.cpp      **** 			{
 297:main.cpp      ****                             
 298:main.cpp      ****                                
 299:main.cpp      **** 				if (directions[compteur] == 'd')
 1361               		.stabn	68,0,299,.LM198-.LFBB4
 1362               	.LM198:
 1363 05d0 E1E0      		ldi r30,lo8(1)
 1364 05d2 F0E0      		ldi r31,0
 1365 05d4 EC0F      		add r30,r28
 1366 05d6 FD1F      		adc r31,r29
 1367 05d8 E00F      		add r30,r16
 1368 05da F11D      		adc r31,__zero_reg__
 1369 05dc 8081      		ld r24,Z
 1370 05de 8436      		cpi r24,lo8(100)
 1371 05e0 01F4      		brne .L225
 300:main.cpp      **** 				{
GAS LISTING /tmp/ccooBDg7.s 			page 34


 301:main.cpp      **** 					moteur.pivotDroit(150);
 1372               		.stabn	68,0,301,.LM199-.LFBB4
 1373               	.LM199:
 1374 05e2 66E9      		ldi r22,lo8(-106)
 1375 05e4 70E0      		ldi r23,0
 1376 05e6 CE01      		movw r24,r28
 1377 05e8 0596      		adiw r24,5
 1378 05ea 0E94 0000 		call _ZN3Pwm10pivotDroitEj
 1379               	.LBB70:
 1380               	.LBB71:
 1381               		.stabs	"/usr/avr/include/util/delay.h",132,0,0,.Ltext25
 1382               	.Ltext25:
 1383               		.stabn	68,0,164,.LM200-.LFBB4
 1384               	.LM200:
 1385 05ee 2FE7      		ldi r18,lo8(399999)
 1386 05f0 8AE1      		ldi r24,hi8(399999)
 1387 05f2 96E0      		ldi r25,hlo8(399999)
 1388 05f4 2150      		1: subi r18,1
 1389 05f6 8040      		sbci r24,0
 1390 05f8 9040      		sbci r25,0
 1391 05fa 01F4      		brne 1b
 1392 05fc 00C0      		rjmp .
 1393 05fe 0000      		nop
 1394               	.LBE71:
 1395               	.LBE70:
 1396               		.stabs	"main.cpp",132,0,0,.Ltext26
 1397               	.Ltext26:
 302:main.cpp      **** 					_delay_ms(250);
 303:main.cpp      **** 					moteur.Avance(120);
 1398               		.stabn	68,0,303,.LM201-.LFBB4
 1399               	.LM201:
 1400 0600 68E7      		ldi r22,lo8(120)
 1401 0602 70E0      		ldi r23,0
 1402 0604 CE01      		movw r24,r28
 1403 0606 0596      		adiw r24,5
 1404 0608 0E94 0000 		call _ZN3Pwm6AvanceEj
 1405               	.L63:
 304:main.cpp      **** 					while(!(bit1 || bit2 || bit3 || bit4 || bit5))
 1406               		.stabn	68,0,304,.LM202-.LFBB4
 1407               	.LM202:
 1408 060c 8091 0000 		lds r24,bit1
 1409 0610 8823      		tst r24
 1410 0612 01F0      		breq .L64
 1411               	.L65:
 305:main.cpp      **** 					{
 306:main.cpp      **** 						lireDirection();
 307:main.cpp      **** 						
 308:main.cpp      **** 					}
 309:main.cpp      **** 					
 310:main.cpp      **** 					//_delay_ms(300);
 311:main.cpp      **** 					//moteur.Tourner_Gauche(150);
 312:main.cpp      **** 					//_delay_ms(200);
 313:main.cpp      **** 				}
 314:main.cpp      **** 				else if (directions[compteur] == 'g')
 315:main.cpp      **** 				{
 316:main.cpp      **** 					moteur.pivotGauche(150);
 317:main.cpp      **** 					_delay_ms(250);
GAS LISTING /tmp/ccooBDg7.s 			page 35


 318:main.cpp      **** 					
 319:main.cpp      **** 					moteur.Avance(120);
 320:main.cpp      **** 					while(!(bit1 || bit2 || bit3 || bit4 || bit5))
 321:main.cpp      **** 					{
 322:main.cpp      **** 						lireDirection();
 323:main.cpp      **** 						
 324:main.cpp      **** 					}
 325:main.cpp      **** 						
 326:main.cpp      **** 					//_delay_ms(300);
 327:main.cpp      **** 					//moteur.Tourner_Gauche(150);
 328:main.cpp      **** 					//_delay_ms(200);
 329:main.cpp      **** 				}
 330:main.cpp      **** 				
 331:main.cpp      **** 		
 332:main.cpp      **** 				compteur++;
 1412               		.stabn	68,0,332,.LM203-.LFBB4
 1413               	.LM203:
 1414 0614 0F5F      		subi r16,lo8(-(1))
 1415 0616 00C0      		rjmp .L14
 1416               	.L64:
 304:main.cpp      **** 					while(!(bit1 || bit2 || bit3 || bit4 || bit5))
 1417               		.stabn	68,0,304,.LM204-.LFBB4
 1418               	.LM204:
 1419 0618 8091 0000 		lds r24,bit2
 1420 061c 8111      		cpse r24,__zero_reg__
 1421 061e 00C0      		rjmp .L65
 304:main.cpp      **** 					while(!(bit1 || bit2 || bit3 || bit4 || bit5))
 1422               		.stabn	68,0,304,.LM205-.LFBB4
 1423               	.LM205:
 1424 0620 8091 0000 		lds r24,bit3
 1425 0624 8111      		cpse r24,__zero_reg__
 1426 0626 00C0      		rjmp .L65
 304:main.cpp      **** 					while(!(bit1 || bit2 || bit3 || bit4 || bit5))
 1427               		.stabn	68,0,304,.LM206-.LFBB4
 1428               	.LM206:
 1429 0628 8091 0000 		lds r24,bit4
 1430 062c 8111      		cpse r24,__zero_reg__
 1431 062e 00C0      		rjmp .L65
 304:main.cpp      **** 					while(!(bit1 || bit2 || bit3 || bit4 || bit5))
 1432               		.stabn	68,0,304,.LM207-.LFBB4
 1433               	.LM207:
 1434 0630 8091 0000 		lds r24,bit5
 1435 0634 8111      		cpse r24,__zero_reg__
 1436 0636 00C0      		rjmp .L65
 306:main.cpp      **** 						
 1437               		.stabn	68,0,306,.LM208-.LFBB4
 1438               	.LM208:
 1439 0638 0E94 0000 		call _Z13lireDirectionv
 1440 063c 00C0      		rjmp .L63
 1441               	.L225:
 314:main.cpp      **** 				{
 1442               		.stabn	68,0,314,.LM209-.LFBB4
 1443               	.LM209:
 1444 063e 8736      		cpi r24,lo8(103)
 1445 0640 01F4      		brne .L65
 316:main.cpp      **** 					_delay_ms(250);
 1446               		.stabn	68,0,316,.LM210-.LFBB4
GAS LISTING /tmp/ccooBDg7.s 			page 36


 1447               	.LM210:
 1448 0642 66E9      		ldi r22,lo8(-106)
 1449 0644 70E0      		ldi r23,0
 1450 0646 CE01      		movw r24,r28
 1451 0648 0596      		adiw r24,5
 1452 064a 0E94 0000 		call _ZN3Pwm11pivotGaucheEj
 1453               	.LBB72:
 1454               	.LBB73:
 1455               		.stabs	"/usr/avr/include/util/delay.h",132,0,0,.Ltext27
 1456               	.Ltext27:
 1457               		.stabn	68,0,164,.LM211-.LFBB4
 1458               	.LM211:
 1459 064e EFE7      		ldi r30,lo8(399999)
 1460 0650 FAE1      		ldi r31,hi8(399999)
 1461 0652 26E0      		ldi r18,hlo8(399999)
 1462 0654 E150      		1: subi r30,1
 1463 0656 F040      		sbci r31,0
 1464 0658 2040      		sbci r18,0
 1465 065a 01F4      		brne 1b
 1466 065c 00C0      		rjmp .
 1467 065e 0000      		nop
 1468               	.LBE73:
 1469               	.LBE72:
 1470               		.stabs	"main.cpp",132,0,0,.Ltext28
 1471               	.Ltext28:
 319:main.cpp      **** 					while(!(bit1 || bit2 || bit3 || bit4 || bit5))
 1472               		.stabn	68,0,319,.LM212-.LFBB4
 1473               	.LM212:
 1474 0660 68E7      		ldi r22,lo8(120)
 1475 0662 70E0      		ldi r23,0
 1476 0664 CE01      		movw r24,r28
 1477 0666 0596      		adiw r24,5
 1478 0668 0E94 0000 		call _ZN3Pwm6AvanceEj
 1479               	.L67:
 320:main.cpp      **** 					{
 1480               		.stabn	68,0,320,.LM213-.LFBB4
 1481               	.LM213:
 1482 066c 8091 0000 		lds r24,bit1
 1483 0670 8111      		cpse r24,__zero_reg__
 1484 0672 00C0      		rjmp .L65
 320:main.cpp      **** 					{
 1485               		.stabn	68,0,320,.LM214-.LFBB4
 1486               	.LM214:
 1487 0674 8091 0000 		lds r24,bit2
 1488 0678 8111      		cpse r24,__zero_reg__
 1489 067a 00C0      		rjmp .L65
 320:main.cpp      **** 					{
 1490               		.stabn	68,0,320,.LM215-.LFBB4
 1491               	.LM215:
 1492 067c 8091 0000 		lds r24,bit3
 1493 0680 8111      		cpse r24,__zero_reg__
 1494 0682 00C0      		rjmp .L65
 320:main.cpp      **** 					{
 1495               		.stabn	68,0,320,.LM216-.LFBB4
 1496               	.LM216:
 1497 0684 8091 0000 		lds r24,bit4
 1498 0688 8111      		cpse r24,__zero_reg__
GAS LISTING /tmp/ccooBDg7.s 			page 37


 1499 068a 00C0      		rjmp .L65
 320:main.cpp      **** 					{
 1500               		.stabn	68,0,320,.LM217-.LFBB4
 1501               	.LM217:
 1502 068c 8091 0000 		lds r24,bit5
 1503 0690 8111      		cpse r24,__zero_reg__
 1504 0692 00C0      		rjmp .L65
 322:main.cpp      **** 						
 1505               		.stabn	68,0,322,.LM218-.LFBB4
 1506               	.LM218:
 1507 0694 0E94 0000 		call _Z13lireDirectionv
 1508 0698 00C0      		rjmp .L67
 1509               	.L71:
 157:main.cpp      ****                 return 0;
 1510               		.stabn	68,0,157,.LM219-.LFBB4
 1511               	.LM219:
 1512 069a 60E0      		ldi r22,0
 1513 069c 70E0      		ldi r23,0
 1514 069e CE01      		movw r24,r28
 1515 06a0 0596      		adiw r24,5
 1516 06a2 0E94 0000 		call _ZN3Pwm6AvanceEj
  71:main.cpp      ****     uint8_t rapport;
 1517               		.stabn	68,0,71,.LM220-.LFBB4
 1518               	.LM220:
 1519 06a6 CE01      		movw r24,r28
 1520 06a8 0496      		adiw r24,4
 1521 06aa 0E94 0000 		call _ZN3canD1Ev
  70:main.cpp      ****     can intensite;
 1522               		.stabn	68,0,70,.LM221-.LFBB4
 1523               	.LM221:
 1524 06ae CE01      		movw r24,r28
 1525 06b0 0596      		adiw r24,5
 1526 06b2 0E94 0000 		call _ZN3PwmD1Ev
 333:main.cpp      **** 			}
 334:main.cpp      **** 			
 335:main.cpp      ****         }
 336:main.cpp      **** 		
 337:main.cpp      **** 	
 338:main.cpp      ****         
 339:main.cpp      ****     }
 1527               		.stabn	68,0,339,.LM222-.LFBB4
 1528               	.LM222:
 1529 06b6 CE01      		movw r24,r28
 1530 06b8 0696      		adiw r24,6
 1531 06ba 0E94 0000 		call _ZN3DelD1Ev
 1532               	.LBE45:
 340:main.cpp      ****     
 341:main.cpp      ****     
 342:main.cpp      ****     
 343:main.cpp      **** }
 1533               		.stabn	68,0,343,.LM223-.LFBB4
 1534               	.LM223:
 1535 06be 80E0      		ldi r24,0
 1536 06c0 90E0      		ldi r25,0
 1537               	/* epilogue start */
 1538 06c2 2696      		adiw r28,6
 1539 06c4 0FB6      		in __tmp_reg__,__SREG__
GAS LISTING /tmp/ccooBDg7.s 			page 38


 1540 06c6 F894      		cli
 1541 06c8 DEBF      		out __SP_H__,r29
 1542 06ca 0FBE      		out __SREG__,__tmp_reg__
 1543 06cc CDBF      		out __SP_L__,r28
 1544 06ce DF91      		pop r29
 1545 06d0 CF91      		pop r28
 1546 06d2 1F91      		pop r17
 1547 06d4 0F91      		pop r16
 1548 06d6 FF90      		pop r15
 1549 06d8 EF90      		pop r14
 1550 06da DF90      		pop r13
 1551 06dc CF90      		pop r12
 1552 06de 0895      		ret
 1553               		.size	main, .-main
 1554               		.stabs	"del:(0,98)",128,0,69,6
 1555               		.stabs	"moteur:(0,123)",128,0,70,5
 1556               		.stabs	"intensite:(0,105)",128,0,71,4
 1557               		.stabs	"rapport:r(0,59)",64,0,72,13
 1558               		.stabs	"passeDansLeTunel:r(0,54)",64,0,75,15
 1559               		.stabs	"estSortiDuTunel:r(0,54)",64,0,76,17
 1560               		.stabs	"directions:(0,127)=ar(0,128)=r(0,128);0;0177777;;0;2;(0,17)",128,0,80,1
 1561               		.stabs	"enfonceDroit:r(0,54)",64,0,82,25
 1562               		.stabs	"enfonceGauche:r(0,54)",64,0,83,18
 1563               		.stabn	192,0,0,.LBB45-.LFBB4
 1564               		.stabn	224,0,0,.LBE45-.LFBB4
 1565               	.Lscope4:
 1566               		.stabs	"",36,0,0,.Lscope4-.LFBB4
 1567               		.stabd	78,0,0
 1568               	.global	bit5
 1569               		.section .bss
 1570               		.type	bit5, @object
 1571               		.size	bit5, 1
 1572               	bit5:
 1573 0000 00        		.zero	1
 1574               	.global	bit4
 1575               		.type	bit4, @object
 1576               		.size	bit4, 1
 1577               	bit4:
 1578 0001 00        		.zero	1
 1579               	.global	bit3
 1580               		.type	bit3, @object
 1581               		.size	bit3, 1
 1582               	bit3:
 1583 0002 00        		.zero	1
 1584               	.global	bit2
 1585               		.type	bit2, @object
 1586               		.size	bit2, 1
 1587               	bit2:
 1588 0003 00        		.zero	1
 1589               	.global	bit1
 1590               		.type	bit1, @object
 1591               		.size	bit1, 1
 1592               	bit1:
 1593 0004 00        		.zero	1
 1594               		.stabs	"bit1:G(0,129)=B(0,54)",32,0,14,0
 1595               		.stabs	"bit2:G(0,129)",32,0,14,0
 1596               		.stabs	"bit3:G(0,129)",32,0,14,0
GAS LISTING /tmp/ccooBDg7.s 			page 39


 1597               		.stabs	"bit4:G(0,129)",32,0,14,0
 1598               		.stabs	"bit5:G(0,129)",32,0,14,0
 1599               		.text
 1600               		.stabs	"",100,0,0,.Letext0
 1601               	.Letext0:
 1602               		.ident	"GCC: (Fedora 4.9.2-1.fc22) 4.9.2"
 1603               	.global __do_clear_bss
GAS LISTING /tmp/ccooBDg7.s 			page 40


DEFINED SYMBOLS
                            *ABS*:0000000000000000 main.cpp
     /tmp/ccooBDg7.s:2      *ABS*:000000000000003e __SP_H__
     /tmp/ccooBDg7.s:3      *ABS*:000000000000003d __SP_L__
     /tmp/ccooBDg7.s:4      *ABS*:000000000000003f __SREG__
     /tmp/ccooBDg7.s:5      *ABS*:0000000000000000 __tmp_reg__
     /tmp/ccooBDg7.s:6      *ABS*:0000000000000001 __zero_reg__
     /tmp/ccooBDg7.s:114    .text:0000000000000000 _Z18initialisationUARTv
     /tmp/ccooBDg7.s:151    .text:000000000000001e _Z22transmissionUARTVersPch
     /tmp/ccooBDg7.s:177    .text:000000000000002c _Z13lireDirectionv
     /tmp/ccooBDg7.s:1592   .bss:0000000000000004 bit1
     /tmp/ccooBDg7.s:1587   .bss:0000000000000003 bit2
     /tmp/ccooBDg7.s:1582   .bss:0000000000000002 bit3
     /tmp/ccooBDg7.s:1577   .bss:0000000000000001 bit4
     /tmp/ccooBDg7.s:1572   .bss:0000000000000000 bit5
     /tmp/ccooBDg7.s:226    .text.startup:0000000000000000 main

UNDEFINED SYMBOLS
_ZN3DelC1Ev
_ZN3PwmC1Ev
_ZN3canC1Ev
_ZN3can7lectureEh
_ZN3Pwm10pivotDroitEj
_ZN3Pwm14Tourner_GaucheEj
_ZN3Pwm11pivotGaucheEj
_ZN3Pwm14Tourner_DroiteEj
_ZN3Pwm6AvanceEj
_ZN3canD1Ev
_ZN3PwmD1Ev
_ZN3DelD1Ev
__do_clear_bss
