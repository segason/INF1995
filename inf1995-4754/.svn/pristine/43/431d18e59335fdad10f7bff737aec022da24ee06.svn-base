GAS LISTING /tmp/ccQaABxv.s 			page 1


   1               		.file	"main.cpp"
   2               	__SP_H__ = 0x3e
   3               	__SP_L__ = 0x3d
   4               	__SREG__ = 0x3f
   5               	__tmp_reg__ = 0
   6               	__zero_reg__ = 1
   7               		.stabs	"/home/olstob/Documents/inf1995-4754/projet/",100,0,4,.Ltext0
   8               		.stabs	"main.cpp",100,0,4,.Ltext0
   9               		.text
  10               	.Ltext0:
  11               		.stabs	"gcc2_compiled.",60,0,0,0
  12               		.stabs	"__uint24:t(0,1)=@s24;r(0,1);0;077777777;",128,0,0,0
  13               		.stabs	"__int24:t(0,2)=@s24;r(0,2);040000000;037777777;",128,0,0,0
  14               		.stabs	"__builtin_va_list:t(0,3)=*(0,4)=(0,4)",128,0,0,0
  15               		.stabs	"complex long double:t(0,5)=R3;8;0;",128,0,0,0
  16               		.stabs	"complex double:t(0,6)=R3;8;0;",128,0,0,0
  17               		.stabs	"complex float:t(0,7)=R3;8;0;",128,0,0,0
  18               		.stabs	"complex int:t(0,8)=s4real:(0,9)=r(0,9);-32768;32767;,0,16;imag:(0,9),16,16;;",128,0,0,0
  19               		.stabs	"long long unsigned int:t(0,10)=@s64;r(0,10);0;01777777777777777777777;",128,0,0,0
  20               		.stabs	"long unsigned int:t(0,11)=@s32;r(0,11);0;037777777777;",128,0,0,0
  21               		.stabs	"unsigned int:t(0,12)=r(0,12);0;0177777;",128,0,0,0
  22               		.stabs	"unsigned char:t(0,13)=@s8;r(0,13);0;255;",128,0,0,0
  23               		.stabs	"long long int:t(0,14)=@s64;r(0,14);01000000000000000000000;0777777777777777777777;",128,0,
  24               		.stabs	"long int:t(0,15)=@s32;r(0,15);020000000000;017777777777;",128,0,0,0
  25               		.stabs	"int:t(0,9)",128,0,0,0
  26               		.stabs	"signed char:t(0,16)=@s8;r(0,16);-128;127;",128,0,0,0
  27               		.stabs	"char:t(0,17)=@s8;r(0,17);0;255;",128,0,0,0
  28               		.stabs	"signed:t(0,9)",128,0,0,0
  29               		.stabs	"unsigned long:t(0,11)",128,0,0,0
  30               		.stabs	"long long unsigned:t(0,10)",128,0,0,0
  31               		.stabs	"short int:t(0,18)=r(0,18);-32768;32767;",128,0,0,0
  32               		.stabs	"short unsigned int:t(0,19)=r(0,19);0;0177777;",128,0,0,0
  33               		.stabs	"unsigned short:t(0,19)",128,0,0,0
  34               		.stabs	"float:t(0,20)=r(0,9);4;0;",128,0,0,0
  35               		.stabs	"double:t(0,21)=r(0,9);4;0;",128,0,0,0
  36               		.stabs	"long double:t(0,22)=r(0,9);4;0;",128,0,0,0
  37               		.stabs	"short _Fract:t(0,23)=r(0,9);1;0;",128,0,0,0
  38               		.stabs	"long _Fract:t(0,24)=r(0,9);4;0;",128,0,0,0
  39               		.stabs	"long long _Fract:t(0,25)=r(0,9);8;0;",128,0,0,0
  40               		.stabs	"unsigned short _Fract:t(0,26)=r(0,9);1;0;",128,0,0,0
  41               		.stabs	"unsigned _Fract:t(0,27)=r(0,9);2;0;",128,0,0,0
  42               		.stabs	"unsigned long _Fract:t(0,28)=r(0,9);4;0;",128,0,0,0
  43               		.stabs	"unsigned long long _Fract:t(0,29)=r(0,9);8;0;",128,0,0,0
  44               		.stabs	"_Sat short _Fract:t(0,30)=r(0,9);1;0;",128,0,0,0
  45               		.stabs	"_Sat _Fract:t(0,31)=r(0,9);2;0;",128,0,0,0
  46               		.stabs	"_Sat long _Fract:t(0,32)=r(0,9);4;0;",128,0,0,0
  47               		.stabs	"_Sat long long _Fract:t(0,33)=r(0,9);8;0;",128,0,0,0
  48               		.stabs	"_Sat unsigned short _Fract:t(0,34)=r(0,9);1;0;",128,0,0,0
  49               		.stabs	"_Sat unsigned _Fract:t(0,35)=r(0,9);2;0;",128,0,0,0
  50               		.stabs	"_Sat unsigned long _Fract:t(0,36)=r(0,9);4;0;",128,0,0,0
  51               		.stabs	"_Sat unsigned long long _Fract:t(0,37)=r(0,9);8;0;",128,0,0,0
  52               		.stabs	"short _Accum:t(0,38)=r(0,9);2;0;",128,0,0,0
  53               		.stabs	"long _Accum:t(0,39)=r(0,9);8;0;",128,0,0,0
  54               		.stabs	"long long _Accum:t(0,40)=r(0,9);8;0;",128,0,0,0
  55               		.stabs	"unsigned short _Accum:t(0,41)=r(0,9);2;0;",128,0,0,0
  56               		.stabs	"unsigned _Accum:t(0,42)=r(0,9);4;0;",128,0,0,0
  57               		.stabs	"unsigned long _Accum:t(0,43)=r(0,9);8;0;",128,0,0,0
GAS LISTING /tmp/ccQaABxv.s 			page 2


  58               		.stabs	"unsigned long long _Accum:t(0,44)=r(0,9);8;0;",128,0,0,0
  59               		.stabs	"_Sat short _Accum:t(0,45)=r(0,9);2;0;",128,0,0,0
  60               		.stabs	"_Sat _Accum:t(0,46)=r(0,9);4;0;",128,0,0,0
  61               		.stabs	"_Sat long _Accum:t(0,47)=r(0,9);8;0;",128,0,0,0
  62               		.stabs	"_Sat long long _Accum:t(0,48)=r(0,9);8;0;",128,0,0,0
  63               		.stabs	"_Sat unsigned short _Accum:t(0,49)=r(0,9);2;0;",128,0,0,0
  64               		.stabs	"_Sat unsigned _Accum:t(0,50)=r(0,9);4;0;",128,0,0,0
  65               		.stabs	"_Sat unsigned long _Accum:t(0,51)=r(0,9);8;0;",128,0,0,0
  66               		.stabs	"_Sat unsigned long long _Accum:t(0,52)=r(0,9);8;0;",128,0,0,0
  67               		.stabs	"void:t(0,4)",128,0,0,0
  68               		.stabs	"wchar_t:t(0,53)=r(0,53);-32768;32767;",128,0,0,0
  69               		.stabs	"bool:t(0,54)=@s8;-16;",128,0,0,0
  70               		.stabs	"__vtbl_ptr_type:t(0,55)=*(0,56)=f(0,9)",128,0,0,0
  71               		.stabs	"decltype(nullptr):t(0,57)=(0,57)",128,0,0,0
  72               		.stabs	"int8_t:t(0,58)=(0,16)",128,0,121,0
  73               		.stabs	"uint8_t:t(0,59)=(0,13)",128,0,122,0
  74               		.stabs	"int16_t:t(0,60)=(0,9)",128,0,123,0
  75               		.stabs	"uint16_t:t(0,61)=(0,12)",128,0,124,0
  76               		.stabs	"int32_t:t(0,62)=(0,15)",128,0,125,0
  77               		.stabs	"uint32_t:t(0,63)=(0,11)",128,0,126,0
  78               		.stabs	"int64_t:t(0,64)=(0,14)",128,0,128,0
  79               		.stabs	"uint64_t:t(0,65)=(0,10)",128,0,129,0
  80               		.stabs	"intptr_t:t(0,66)=(0,60)",128,0,142,0
  81               		.stabs	"uintptr_t:t(0,67)=(0,61)",128,0,147,0
  82               		.stabs	"int_least8_t:t(0,68)=(0,58)",128,0,159,0
  83               		.stabs	"uint_least8_t:t(0,69)=(0,59)",128,0,164,0
  84               		.stabs	"int_least16_t:t(0,70)=(0,60)",128,0,169,0
  85               		.stabs	"uint_least16_t:t(0,71)=(0,61)",128,0,174,0
  86               		.stabs	"int_least32_t:t(0,72)=(0,62)",128,0,179,0
  87               		.stabs	"uint_least32_t:t(0,73)=(0,63)",128,0,184,0
  88               		.stabs	"int_least64_t:t(0,74)=(0,64)",128,0,192,0
  89               		.stabs	"uint_least64_t:t(0,75)=(0,65)",128,0,199,0
  90               		.stabs	"int_fast8_t:t(0,76)=(0,58)",128,0,213,0
  91               		.stabs	"uint_fast8_t:t(0,77)=(0,59)",128,0,218,0
  92               		.stabs	"int_fast16_t:t(0,78)=(0,60)",128,0,223,0
  93               		.stabs	"uint_fast16_t:t(0,79)=(0,61)",128,0,228,0
  94               		.stabs	"int_fast32_t:t(0,80)=(0,62)",128,0,233,0
  95               		.stabs	"uint_fast32_t:t(0,81)=(0,63)",128,0,238,0
  96               		.stabs	"int_fast64_t:t(0,82)=(0,64)",128,0,246,0
  97               		.stabs	"uint_fast64_t:t(0,83)=(0,65)",128,0,253,0
  98               		.stabs	"intmax_t:t(0,84)=(0,64)",128,0,273,0
  99               		.stabs	"uintmax_t:t(0,85)=(0,65)",128,0,278,0
 100               		.stabs	"int_farptr_t:t(0,86)=(0,62)",128,0,77,0
 101               		.stabs	"uint_farptr_t:t(0,87)=(0,63)",128,0,81,0
 102               		.stabs	"._0:Tt(0,88)=s3low:(0,13),0,8;high:(0,13),8,8;extended:(0,13),16,8;;",128,0,240,0
 103               		.stabs	"__fuse_t:t(0,88)",128,0,244,0
 104               		.stabs	"Memoire24CXXX:Tt(0,89)=s1m_adresse_peripherique:/0(0,59):_ZN13Memoire24CXXX22m_adresse_per
 105               		.stabs	"Del:Tt(0,98)=s1__base_ctor ::(0,99)=#(0,98),(0,4),(0,100)=*(0,98),(0,4);:_ZN3DelC2Ev;2A.;_
 106               		.stabs	"Moteur:Tt(0,102)=s1__base_ctor ::(0,103)=#(0,102),(0,4),(0,104)=*(0,102),(0,4);:_ZN6Moteur
 107               		.stabs	"can:Tt(0,105)=s1__base_ctor ::(0,106)=#(0,105),(0,4),(0,107)=*(0,105),(0,4);:_ZN3canC2Ev;2
 108               		.stabs	"Minuterie:Tt(0,109)=s4minuterieExpiree_:/0(0,110)=B(0,59),0,8;duree_:/0(0,61),8,16;boutonP
 109               		.stabs	"PwmSon:Tt(0,119)=s1__base_ctor ::(0,120)=#(0,119),(0,4),(0,121)=*(0,119),(0,4);:_ZN6PwmSon
 110               		.stabs	"Pwm:Tt(0,123)=s1__base_ctor ::(0,124)=#(0,123),(0,4),(0,125)=*(0,123),(0,4);:_ZN3PwmC2Ev;2
 111               	.global	__floatunsisf
 112               	.global	__divsf3
 113               	.global	__mulsf3
 114               	.global	__fixunssfsi
GAS LISTING /tmp/ccQaABxv.s 			page 3


 115               		.stabs	"_Z8faireSonj.part.1:f(0,4)",36,0,46,_Z8faireSonj.part.1
 116               		.stabs	"pwm:P(0,12)",64,0,46,24
 117               		.type	_Z8faireSonj.part.1, @function
 118               	_Z8faireSonj.part.1:
 119               		.stabd	46,0,0
   1:main.cpp      **** #include "Memoire24CXXX.h"
   2:main.cpp      **** #include "delControl.h" 
   3:main.cpp      **** #include "Moteur.h" 
   4:main.cpp      **** #include "can.h"
   5:main.cpp      **** #include "minuterie.h" 
   6:main.cpp      **** #include "Memoire24CXXX.h" 
   7:main.cpp      **** #include "PwmSon.h"
   8:main.cpp      **** #include "PWM.h"
   9:main.cpp      **** #include <avr/io.h>
  10:main.cpp      **** #include <avr/interrupt.h> 
  11:main.cpp      **** #define F_CPU 8000000
  12:main.cpp      **** #include <util/delay.h>
  13:main.cpp      **** using namespace std;
  14:main.cpp      ****     
  15:main.cpp      **** bool bit1 = false, bit2 = false, bit3 = false, bit4 = false, bit5 = false, enfonceGauche = false, e
  16:main.cpp      **** bool aFaitTriangle = false, devraitFinir = false;
  17:main.cpp      **** uint8_t compteur = 0, petitSkip = 0, rapport = 0, nbCarre =0;
  18:main.cpp      **** char directions[3] = {};
  19:main.cpp      **** Del del;
  20:main.cpp      **** Pwm moteur;
  21:main.cpp      **** can intensite;
  22:main.cpp      **** 
  23:main.cpp      **** void verifierLuminosite()
  24:main.cpp      **** {
  25:main.cpp      ****     rapport = intensite.lecture(6) >> 2; 
  26:main.cpp      ****     if(rapport < 80 )
  27:main.cpp      ****     {
  28:main.cpp      ****         PORTA = 0b1100;
  29:main.cpp      ****     }
  30:main.cpp      ****     else
  31:main.cpp      ****     {
  32:main.cpp      ****       PORTA = 0x00;
  33:main.cpp      ****     }
  34:main.cpp      **** }
  35:main.cpp      **** char transmissionPcVersUart ( ) {
  36:main.cpp      **** 
  37:main.cpp      **** 	while (!( UCSR0A & (1<<RXC0)) && !(PIND & 0x04)) //
  38:main.cpp      **** 	{
  39:main.cpp      **** 	}
  40:main.cpp      ****                
  41:main.cpp      ****     	return UDR0;//Retourne le data recu par lwe buffer
  42:main.cpp      **** 
  43:main.cpp      **** }
  44:main.cpp      **** 
  45:main.cpp      **** 
  46:main.cpp      **** void faireSon(unsigned int pwm)
 120               		.stabn	68,0,46,.LM0-.LFBB1
 121               	.LM0:
 122               	.LFBB1:
 123               	/* prologue: function */
 124               	/* frame size = 0 */
 125               	/* stack size = 0 */
GAS LISTING /tmp/ccQaABxv.s 			page 4


 126               	.L__stack_usage = 0
  47:main.cpp      **** {
  48:main.cpp      ****        if(pwm > 45)
  49:main.cpp      ****        {
  50:main.cpp      ****         TCCR0A = (1 << WGM01) | (1 << COM0A0);
 127               		.stabn	68,0,50,.LM1-.LFBB1
 128               	.LM1:
 129 0000 22E4      		ldi r18,lo8(66)
 130 0002 24BD      		out 0x24,r18
  51:main.cpp      **** 	
  52:main.cpp      **** 		TCCR0B = 0x04 ;
 131               		.stabn	68,0,52,.LM2-.LFBB1
 132               	.LM2:
 133 0004 24E0      		ldi r18,lo8(4)
 134 0006 25BD      		out 0x25,r18
  53:main.cpp      **** 		
  54:main.cpp      **** 		OCR0A = 15625.0/(110.0 * pow(2, (pwm-45)/12.0));
 135               		.stabn	68,0,54,.LM3-.LFBB1
 136               	.LM3:
 137 0008 8D97      		sbiw r24,45
 138 000a BC01      		movw r22,r24
 139 000c 80E0      		ldi r24,0
 140 000e 90E0      		ldi r25,0
 141 0010 0E94 0000 		call __floatunsisf
 142 0014 20E0      		ldi r18,0
 143 0016 30E0      		ldi r19,0
 144 0018 40E4      		ldi r20,lo8(64)
 145 001a 51E4      		ldi r21,lo8(65)
 146 001c 0E94 0000 		call __divsf3
 147 0020 9B01      		movw r18,r22
 148 0022 AC01      		movw r20,r24
 149 0024 60E0      		ldi r22,0
 150 0026 70E0      		ldi r23,0
 151 0028 80E0      		ldi r24,0
 152 002a 90E4      		ldi r25,lo8(64)
 153 002c 0E94 0000 		call pow
 154 0030 20E0      		ldi r18,0
 155 0032 30E0      		ldi r19,0
 156 0034 4CED      		ldi r20,lo8(-36)
 157 0036 52E4      		ldi r21,lo8(66)
 158 0038 0E94 0000 		call __mulsf3
 159 003c 9B01      		movw r18,r22
 160 003e AC01      		movw r20,r24
 161 0040 60E0      		ldi r22,0
 162 0042 74E2      		ldi r23,lo8(36)
 163 0044 84E7      		ldi r24,lo8(116)
 164 0046 96E4      		ldi r25,lo8(70)
 165 0048 0E94 0000 		call __divsf3
 166 004c 0E94 0000 		call __fixunssfsi
 167 0050 67BD      		out 0x27,r22
 168 0052 0895      		ret
 169               		.size	_Z8faireSonj.part.1, .-_Z8faireSonj.part.1
 170               	.Lscope1:
 171               		.stabs	"",36,0,0,.Lscope1-.LFBB1
 172               		.stabd	78,0,0
 173               		.stabs	"_Z18verifierLuminositev:F(0,4)",36,0,23,_Z18verifierLuminositev
 174               	.global	_Z18verifierLuminositev
GAS LISTING /tmp/ccQaABxv.s 			page 5


 175               		.type	_Z18verifierLuminositev, @function
 176               	_Z18verifierLuminositev:
 177               		.stabd	46,0,0
  24:main.cpp      ****     rapport = intensite.lecture(6) >> 2; 
 178               		.stabn	68,0,24,.LM4-.LFBB2
 179               	.LM4:
 180               	.LFBB2:
 181               	/* prologue: function */
 182               	/* frame size = 0 */
 183               	/* stack size = 0 */
 184               	.L__stack_usage = 0
  25:main.cpp      ****     if(rapport < 80 )
 185               		.stabn	68,0,25,.LM5-.LFBB2
 186               	.LM5:
 187 0054 66E0      		ldi r22,lo8(6)
 188 0056 80E0      		ldi r24,lo8(intensite)
 189 0058 90E0      		ldi r25,hi8(intensite)
 190 005a 0E94 0000 		call _ZN3can7lectureEh
 191 005e 9695      		lsr r25
 192 0060 8795      		ror r24
 193 0062 9695      		lsr r25
 194 0064 8795      		ror r24
 195 0066 8093 0000 		sts rapport,r24
  26:main.cpp      ****     {
 196               		.stabn	68,0,26,.LM6-.LFBB2
 197               	.LM6:
 198 006a 8035      		cpi r24,lo8(80)
 199 006c 00F4      		brsh .L3
  28:main.cpp      ****     }
 200               		.stabn	68,0,28,.LM7-.LFBB2
 201               	.LM7:
 202 006e 8CE0      		ldi r24,lo8(12)
 203 0070 82B9      		out 0x2,r24
 204 0072 0895      		ret
 205               	.L3:
  32:main.cpp      ****     }
 206               		.stabn	68,0,32,.LM8-.LFBB2
 207               	.LM8:
 208 0074 12B8      		out 0x2,__zero_reg__
 209 0076 0895      		ret
 210               		.size	_Z18verifierLuminositev, .-_Z18verifierLuminositev
 211               	.Lscope2:
 212               		.stabs	"",36,0,0,.Lscope2-.LFBB2
 213               		.stabd	78,0,0
 214               		.stabs	"_Z22transmissionPcVersUartv:F(0,17)",36,0,35,_Z22transmissionPcVersUartv
 215               	.global	_Z22transmissionPcVersUartv
 216               		.type	_Z22transmissionPcVersUartv, @function
 217               	_Z22transmissionPcVersUartv:
 218               		.stabd	46,0,0
  35:main.cpp      **** 
 219               		.stabn	68,0,35,.LM9-.LFBB3
 220               	.LM9:
 221               	.LFBB3:
 222               	/* prologue: function */
 223               	/* frame size = 0 */
 224               	/* stack size = 0 */
 225               	.L__stack_usage = 0
GAS LISTING /tmp/ccQaABxv.s 			page 6


 226               	.L8:
  37:main.cpp      **** 	{
 227               		.stabn	68,0,37,.LM10-.LFBB3
 228               	.LM10:
 229 0078 8091 C000 		lds r24,192
 230 007c 87FD      		sbrc r24,7
 231 007e 00C0      		rjmp .L7
  37:main.cpp      **** 	{
 232               		.stabn	68,0,37,.LM11-.LFBB3
 233               	.LM11:
 234 0080 4A9B      		sbis 0x9,2
 235 0082 00C0      		rjmp .L8
 236               	.L7:
  41:main.cpp      **** 
 237               		.stabn	68,0,41,.LM12-.LFBB3
 238               	.LM12:
 239 0084 8091 C600 		lds r24,198
  43:main.cpp      **** 
 240               		.stabn	68,0,43,.LM13-.LFBB3
 241               	.LM13:
 242 0088 0895      		ret
 243               		.size	_Z22transmissionPcVersUartv, .-_Z22transmissionPcVersUartv
 244               	.Lscope3:
 245               		.stabs	"",36,0,0,.Lscope3-.LFBB3
 246               		.stabd	78,0,0
 247               		.stabs	"_Z8faireSonj:F(0,4)",36,0,46,_Z8faireSonj
 248               		.stabs	"pwm:P(0,12)",64,0,46,24
 249               	.global	_Z8faireSonj
 250               		.type	_Z8faireSonj, @function
 251               	_Z8faireSonj:
 252               		.stabd	46,0,0
  47:main.cpp      ****        if(pwm > 45)
 253               		.stabn	68,0,47,.LM14-.LFBB4
 254               	.LM14:
 255               	.LFBB4:
 256               	/* prologue: function */
 257               	/* frame size = 0 */
 258               	/* stack size = 0 */
 259               	.L__stack_usage = 0
  48:main.cpp      ****        {
 260               		.stabn	68,0,48,.LM15-.LFBB4
 261               	.LM15:
 262 008a 8E32      		cpi r24,46
 263 008c 9105      		cpc r25,__zero_reg__
 264 008e 00F0      		brlo .L12
 265 0090 0C94 0000 		jmp _Z8faireSonj.part.1
 266               	.L12:
  55:main.cpp      ****        }
  56:main.cpp      ****        else
  57:main.cpp      ****         {
  58:main.cpp      **** 			TCCR0B &= 0x00;
 267               		.stabn	68,0,58,.LM16-.LFBB4
 268               	.LM16:
 269 0094 85B5      		in r24,0x25
 270 0096 15BC      		out 0x25,__zero_reg__
 271 0098 0895      		ret
 272               		.size	_Z8faireSonj, .-_Z8faireSonj
GAS LISTING /tmp/ccQaABxv.s 			page 7


 273               	.Lscope4:
 274               		.stabs	"",36,0,0,.Lscope4-.LFBB4
 275               		.stabd	78,0,0
 276               		.stabs	"_Z18initialisationUARTv:F(0,4)",36,0,62,_Z18initialisationUARTv
 277               	.global	_Z18initialisationUARTv
 278               		.type	_Z18initialisationUARTv, @function
 279               	_Z18initialisationUARTv:
 280               		.stabd	46,0,0
  59:main.cpp      ****        }
  60:main.cpp      **** }
  61:main.cpp      **** 
  62:main.cpp      **** void initialisationUART ( void ) {
 281               		.stabn	68,0,62,.LM17-.LFBB5
 282               	.LM17:
 283               	.LFBB5:
 284               	/* prologue: function */
 285               	/* frame size = 0 */
 286               	/* stack size = 0 */
 287               	.L__stack_usage = 0
  63:main.cpp      **** 
  64:main.cpp      **** // 2400 bauds. Nous vous donnons la valeur des deux
  65:main.cpp      **** 
  66:main.cpp      **** // premier registres pour vous éviter des complications
  67:main.cpp      **** 
  68:main.cpp      **** UBRR0H = 0;
 288               		.stabn	68,0,68,.LM18-.LFBB5
 289               	.LM18:
 290 009a 1092 C500 		sts 197,__zero_reg__
  69:main.cpp      **** 
  70:main.cpp      **** UBRR0L = 0xCF;
 291               		.stabn	68,0,70,.LM19-.LFBB5
 292               	.LM19:
 293 009e 8FEC      		ldi r24,lo8(-49)
 294 00a0 8093 C400 		sts 196,r24
  71:main.cpp      **** 
  72:main.cpp      **** // permettre la reception et la transmission par le UART0
  73:main.cpp      **** 
  74:main.cpp      **** UCSR0A = (1 << TXC0) | (1 << RXC0) ;
 295               		.stabn	68,0,74,.LM20-.LFBB5
 296               	.LM20:
 297 00a4 80EC      		ldi r24,lo8(-64)
 298 00a6 8093 C000 		sts 192,r24
  75:main.cpp      **** 
  76:main.cpp      **** UCSR0B =  (1 << RXEN0) | (1 << TXEN0) ; // L'émetteur USART est activé en réglant TXEN dans UCSR
 299               		.stabn	68,0,76,.LM21-.LFBB5
 300               	.LM21:
 301 00aa 88E1      		ldi r24,lo8(24)
 302 00ac 8093 C100 		sts 193,r24
  77:main.cpp      **** 
  78:main.cpp      **** // Format des trames: 8 bits, 1 stop bits, none parity
  79:main.cpp      **** 
  80:main.cpp      **** UCSR0C = (1 << UCSZ00) | (1 << UCSZ01);
 303               		.stabn	68,0,80,.LM22-.LFBB5
 304               	.LM22:
 305 00b0 86E0      		ldi r24,lo8(6)
 306 00b2 8093 C200 		sts 194,r24
 307 00b6 0895      		ret
GAS LISTING /tmp/ccQaABxv.s 			page 8


 308               		.size	_Z18initialisationUARTv, .-_Z18initialisationUARTv
 309               	.Lscope5:
 310               		.stabs	"",36,0,0,.Lscope5-.LFBB5
 311               		.stabd	78,0,0
 312               		.stabs	"_Z22transmissionUARTVersPch:F(0,4)",36,0,84,_Z22transmissionUARTVersPch
 313               		.stabs	"donnee:P(0,59)",64,0,84,24
 314               	.global	_Z22transmissionUARTVersPch
 315               		.type	_Z22transmissionUARTVersPch, @function
 316               	_Z22transmissionUARTVersPch:
 317               		.stabd	46,0,0
  81:main.cpp      **** 
  82:main.cpp      **** }
  83:main.cpp      **** 
  84:main.cpp      **** void transmissionUARTVersPc ( uint8_t donnee ) {
 318               		.stabn	68,0,84,.LM23-.LFBB6
 319               	.LM23:
 320               	.LFBB6:
 321               	/* prologue: function */
 322               	/* frame size = 0 */
 323               	/* stack size = 0 */
 324               	.L__stack_usage = 0
 325               	.L15:
  85:main.cpp      **** 
  86:main.cpp      **** 	while (!( UCSR0A & (1<<UDRE0))) //Attendre que le tampon soient libre. 
 326               		.stabn	68,0,86,.LM24-.LFBB6
 327               	.LM24:
 328 00b8 9091 C000 		lds r25,192
 329 00bc 95FF      		sbrs r25,5
 330 00be 00C0      		rjmp .L15
  87:main.cpp      **** 	{
  88:main.cpp      **** 	}
  89:main.cpp      ****                
  90:main.cpp      ****     	UDR0 = donnee; 
 331               		.stabn	68,0,90,.LM25-.LFBB6
 332               	.LM25:
 333 00c0 8093 C600 		sts 198,r24
 334 00c4 0895      		ret
 335               		.size	_Z22transmissionUARTVersPch, .-_Z22transmissionUARTVersPch
 336               	.Lscope6:
 337               		.stabs	"",36,0,0,.Lscope6-.LFBB6
 338               		.stabd	78,0,0
 339               		.stabs	"_Z13lireDirectionv:F(0,4)",36,0,93,_Z13lireDirectionv
 340               	.global	_Z13lireDirectionv
 341               		.type	_Z13lireDirectionv, @function
 342               	_Z13lireDirectionv:
 343               		.stabd	46,0,0
  91:main.cpp      **** }
  92:main.cpp      **** 
  93:main.cpp      **** void lireDirection()
  94:main.cpp      **** {
 344               		.stabn	68,0,94,.LM26-.LFBB7
 345               	.LM26:
 346               	.LFBB7:
 347               	/* prologue: function */
 348               	/* frame size = 0 */
 349               	/* stack size = 0 */
 350               	.L__stack_usage = 0
GAS LISTING /tmp/ccQaABxv.s 			page 9


  95:main.cpp      ****         bit1 = PINC & 0b00000001; // capteur_gauche
 351               		.stabn	68,0,95,.LM27-.LFBB7
 352               	.LM27:
 353 00c6 86B1      		in r24,0x6
 354 00c8 8170      		andi r24,lo8(1)
 355 00ca 8093 0000 		sts bit1,r24
  96:main.cpp      ****         bit2 = PINC & 0b00000010; // centre centre gauche
 356               		.stabn	68,0,96,.LM28-.LFBB7
 357               	.LM28:
 358 00ce 86B1      		in r24,0x6
 359 00d0 8695      		lsr r24
 360 00d2 8170      		andi r24,1
 361 00d4 8093 0000 		sts bit2,r24
  97:main.cpp      ****         bit3 = PINC & 0b00000100; // centre 
 362               		.stabn	68,0,97,.LM29-.LFBB7
 363               	.LM29:
 364 00d8 86B1      		in r24,0x6
 365 00da 82FB      		bst r24,2
 366 00dc 8827      		clr r24
 367 00de 80F9      		bld r24,0
 368 00e0 8093 0000 		sts bit3,r24
  98:main.cpp      ****         bit4 = PINC & 0b00001000; // centre centre droit 
 369               		.stabn	68,0,98,.LM30-.LFBB7
 370               	.LM30:
 371 00e4 86B1      		in r24,0x6
 372 00e6 83FB      		bst r24,3
 373 00e8 8827      		clr r24
 374 00ea 80F9      		bld r24,0
 375 00ec 8093 0000 		sts bit4,r24
  99:main.cpp      ****         bit5 = PINC & 0b00010000; // capteur_droit
 376               		.stabn	68,0,99,.LM31-.LFBB7
 377               	.LM31:
 378 00f0 86B1      		in r24,0x6
 379 00f2 8295      		swap r24
 380 00f4 8170      		andi r24,1
 381 00f6 8093 0000 		sts bit5,r24
 382 00fa 0895      		ret
 383               		.size	_Z13lireDirectionv, .-_Z13lireDirectionv
 384               	.Lscope7:
 385               		.stabs	"",36,0,0,.Lscope7-.LFBB7
 386               		.stabd	78,0,0
 387               		.stabs	"_Z15fairePointillesv:F(0,4)",36,0,103,_Z15fairePointillesv
 388               	.global	_Z15fairePointillesv
 389               		.type	_Z15fairePointillesv, @function
 390               	_Z15fairePointillesv:
 391               		.stabd	46,0,0
 100:main.cpp      **** }
 101:main.cpp      **** 
 102:main.cpp      **** 
 103:main.cpp      **** void fairePointilles()
 104:main.cpp      **** {
 392               		.stabn	68,0,104,.LM32-.LFBB8
 393               	.LM32:
 394               	.LFBB8:
 395               	/* prologue: function */
 396               	/* frame size = 0 */
 397               	/* stack size = 0 */
GAS LISTING /tmp/ccQaABxv.s 			page 10


 398               	.L__stack_usage = 0
 105:main.cpp      **** 	del.allumerRouge(0);
 399               		.stabn	68,0,105,.LM33-.LFBB8
 400               	.LM33:
 401 00fc 60E0      		ldi r22,0
 402 00fe 80E0      		ldi r24,lo8(del)
 403 0100 90E0      		ldi r25,hi8(del)
 404 0102 0E94 0000 		call _ZN3Del12allumerRougeEh
 405               	.L20:
 106:main.cpp      **** 	while(true)
 107:main.cpp      **** 	{
 108:main.cpp      **** 		while(bit1 || bit2 || bit3 || bit4 || bit5)	
 406               		.stabn	68,0,108,.LM34-.LFBB8
 407               	.LM34:
 408 0106 8091 0000 		lds r24,bit1
 409 010a 8823      		tst r24
 410 010c 01F4      		brne .+2
 411 010e 00C0      		rjmp .L78
 412               	.L32:
 109:main.cpp      **** 		{
 110:main.cpp      **** 			lireDirection();
 413               		.stabn	68,0,110,.LM35-.LFBB8
 414               	.LM35:
 415 0110 0E94 0000 		call _Z13lireDirectionv
 111:main.cpp      **** 			if(bit1 && bit2 && !bit3 && !bit4 && !bit5) // 1 1 0 0 0
 416               		.stabn	68,0,111,.LM36-.LFBB8
 417               	.LM36:
 418 0114 2091 0000 		lds r18,bit1
 419 0118 9091 0000 		lds r25,bit2
 420 011c 8091 0000 		lds r24,bit3
 421 0120 2223      		tst r18
 422 0122 01F0      		breq .L21
 423               		.stabn	68,0,111,.LM37-.LFBB8
 424               	.LM37:
 425 0124 9923      		tst r25
 426 0126 01F0      		breq .L22
 427               		.stabn	68,0,111,.LM38-.LFBB8
 428               	.LM38:
 429 0128 8111      		cpse r24,__zero_reg__
 430 012a 00C0      		rjmp .L20
 431               		.stabn	68,0,111,.LM39-.LFBB8
 432               	.LM39:
 433 012c 8091 0000 		lds r24,bit4
 434 0130 8111      		cpse r24,__zero_reg__
 435 0132 00C0      		rjmp .L20
 436               	.L77:
 437               		.stabn	68,0,111,.LM40-.LFBB8
 438               	.LM40:
 439 0134 8091 0000 		lds r24,bit5
 440 0138 8111      		cpse r24,__zero_reg__
 441 013a 00C0      		rjmp .L20
 442               	.L25:
 112:main.cpp      **** 				moteur.Tourner_Gauche(95);
 443               		.stabn	68,0,112,.LM41-.LFBB8
 444               	.LM41:
 445 013c 6FE5      		ldi r22,lo8(95)
 446 013e 70E0      		ldi r23,0
GAS LISTING /tmp/ccQaABxv.s 			page 11


 447 0140 80E0      		ldi r24,lo8(moteur)
 448 0142 90E0      		ldi r25,hi8(moteur)
 449 0144 0E94 0000 		call _ZN3Pwm14Tourner_GaucheEj
 450 0148 00C0      		rjmp .L20
 451               	.L22:
 113:main.cpp      ****         
 114:main.cpp      **** 			else if(bit1 && !bit2 && !bit3 && !bit4 && !bit5) //1 0 0 0 0
 452               		.stabn	68,0,114,.LM42-.LFBB8
 453               	.LM42:
 454 014a 8111      		cpse r24,__zero_reg__
 455 014c 00C0      		rjmp .L20
 456               		.stabn	68,0,114,.LM43-.LFBB8
 457               	.LM43:
 458 014e 8091 0000 		lds r24,bit4
 459 0152 8111      		cpse r24,__zero_reg__
 460 0154 00C0      		rjmp .L20
 461               		.stabn	68,0,114,.LM44-.LFBB8
 462               	.LM44:
 463 0156 8091 0000 		lds r24,bit5
 464 015a 8111      		cpse r24,__zero_reg__
 465 015c 00C0      		rjmp .L20
 115:main.cpp      ****             moteur.pivotGauche(95);
 466               		.stabn	68,0,115,.LM45-.LFBB8
 467               	.LM45:
 468 015e 6FE5      		ldi r22,lo8(95)
 469 0160 70E0      		ldi r23,0
 470 0162 80E0      		ldi r24,lo8(moteur)
 471 0164 90E0      		ldi r25,hi8(moteur)
 472 0166 0E94 0000 		call _ZN3Pwm11pivotGaucheEj
 473 016a 00C0      		rjmp .L20
 474               	.L21:
 116:main.cpp      ****       
 117:main.cpp      **** 			else if(!bit1 && bit2 && !bit3 && !bit4 && !bit5) // 0 1 0 0 0
 475               		.stabn	68,0,117,.LM46-.LFBB8
 476               	.LM46:
 477 016c 9923      		tst r25
 478 016e 01F0      		breq .L24
 479               		.stabn	68,0,117,.LM47-.LFBB8
 480               	.LM47:
 481 0170 8111      		cpse r24,__zero_reg__
 482 0172 00C0      		rjmp .L24
 483               		.stabn	68,0,117,.LM48-.LFBB8
 484               	.LM48:
 485 0174 8091 0000 		lds r24,bit4
 486 0178 8111      		cpse r24,__zero_reg__
 487 017a 00C0      		rjmp .L26
 488               		.stabn	68,0,117,.LM49-.LFBB8
 489               	.LM49:
 490 017c 8091 0000 		lds r24,bit5
 491 0180 8111      		cpse r24,__zero_reg__
 492 0182 00C0      		rjmp .L26
 493 0184 00C0      		rjmp .L25
 494               	.L24:
 118:main.cpp      **** 				moteur.Tourner_Gauche(95);
 119:main.cpp      **** 			
 120:main.cpp      **** 				
 121:main.cpp      ****             else if((!bit1 && !bit2 && bit3 && bit4 && bit5) || ( !bit1 && bit2 && bit3 && bit4 && 
GAS LISTING /tmp/ccQaABxv.s 			page 12


 495               		.stabn	68,0,121,.LM50-.LFBB8
 496               	.LM50:
 497 0186 8823      		tst r24
 498 0188 01F4      		brne .+2
 499 018a 00C0      		rjmp .L26
 500               		.stabn	68,0,121,.LM51-.LFBB8
 501               	.LM51:
 502 018c 2091 0000 		lds r18,bit4
 503 0190 2223      		tst r18
 504 0192 01F4      		brne .+2
 505 0194 00C0      		rjmp .L27
 506               		.stabn	68,0,121,.LM52-.LFBB8
 507               	.LM52:
 508 0196 3091 0000 		lds r19,bit5
 509 019a 3323      		tst r19
 510 019c 01F4      		brne .+2
 511 019e 00C0      		rjmp .L27
 512               	.LBB63:
 513               	.LBB64:
  58:main.cpp      ****        }
 514               		.stabn	68,0,58,.LM53-.LFBB8
 515               	.LM53:
 516 01a0 85B5      		in r24,0x25
 517 01a2 15BC      		out 0x25,__zero_reg__
 518               	.LBE64:
 519               	.LBE63:
 122:main.cpp      ****             {
 123:main.cpp      **** 				faireSon(0);
 124:main.cpp      **** 				aFaitTriangle = false;
 520               		.stabn	68,0,124,.LM54-.LFBB8
 521               	.LM54:
 522 01a4 1092 0000 		sts aFaitTriangle,__zero_reg__
 125:main.cpp      **** 				del.eteindreDel();
 523               		.stabn	68,0,125,.LM55-.LFBB8
 524               	.LM55:
 525 01a8 80E0      		ldi r24,lo8(del)
 526 01aa 90E0      		ldi r25,hi8(del)
 527 01ac 0C94 0000 		jmp _ZN3Del11eteindreDelEv
 528               	.L78:
 108:main.cpp      **** 		{
 529               		.stabn	68,0,108,.LM56-.LFBB8
 530               	.LM56:
 531 01b0 8091 0000 		lds r24,bit2
 532 01b4 8111      		cpse r24,__zero_reg__
 533 01b6 00C0      		rjmp .L32
 108:main.cpp      **** 		{
 534               		.stabn	68,0,108,.LM57-.LFBB8
 535               	.LM57:
 536 01b8 8091 0000 		lds r24,bit3
 537 01bc 8111      		cpse r24,__zero_reg__
 538 01be 00C0      		rjmp .L32
 108:main.cpp      **** 		{
 539               		.stabn	68,0,108,.LM58-.LFBB8
 540               	.LM58:
 541 01c0 8091 0000 		lds r24,bit4
 542 01c4 8111      		cpse r24,__zero_reg__
 543 01c6 00C0      		rjmp .L32
GAS LISTING /tmp/ccQaABxv.s 			page 13


 108:main.cpp      **** 		{
 544               		.stabn	68,0,108,.LM59-.LFBB8
 545               	.LM59:
 546 01c8 8091 0000 		lds r24,bit5
 547 01cc 8111      		cpse r24,__zero_reg__
 548 01ce 00C0      		rjmp .L32
 126:main.cpp      ****                 return;
 127:main.cpp      **** 			}
 128:main.cpp      **** 			
 129:main.cpp      **** 			else if (!bit1 && !bit2 && !bit3 && !bit4 && bit5) //0 0 0 0 1
 130:main.cpp      **** 				moteur.pivotDroit(95);
 131:main.cpp      ****        
 132:main.cpp      **** 			else if (!bit1 && !bit2 && !bit3 && bit4 && bit5) //0 0 0 1 1
 133:main.cpp      **** 				moteur.Tourner_Droite(95);
 134:main.cpp      ****   
 135:main.cpp      **** 			else if (!bit1 && !bit2 && !bit3 && bit4 && !(bit5)) // 0 0 0 1 0
 136:main.cpp      **** 				moteur.Tourner_Droite(95);
 137:main.cpp      ****         
 138:main.cpp      **** 			else if (!(bit1) && !(bit2) && bit3 && !bit4 && !bit5) // 0 0 1 0 0
 139:main.cpp      **** 				moteur.Avance(95);
 140:main.cpp      **** 
 141:main.cpp      **** 			else if (!bit1 && bit2 && bit3 && !bit4 && !bit5) //0 1 1 0 0
 142:main.cpp      **** 				moteur.Tourner_Gauche(95);
 143:main.cpp      **** 	
 144:main.cpp      **** 			else if (!bit1 && !bit2 && bit3 && bit4 && !bit5) // 0 0 1 1 0
 145:main.cpp      **** 				moteur.Tourner_Droite(95);
 146:main.cpp      **** 
 147:main.cpp      **** 		}
 148:main.cpp      **** 						
 149:main.cpp      **** 		if(petitSkip > 2) 	
 549               		.stabn	68,0,149,.LM60-.LFBB8
 550               	.LM60:
 551 01d0 8091 0000 		lds r24,petitSkip
 552 01d4 8330      		cpi r24,lo8(3)
 553 01d6 00F0      		brlo .L34
 554               	.LBB65:
 555               	.LBB66:
 556 01d8 86E4      		ldi r24,lo8(70)
 557 01da 90E0      		ldi r25,0
 558 01dc 0E94 0000 		call _Z8faireSonj.part.1
 559 01e0 00C0      		rjmp .L34
 560               	.L79:
 561               	.LBE66:
 562               	.LBE65:
 150:main.cpp      **** 			faireSon(70);
 151:main.cpp      **** 							
 152:main.cpp      **** 		while (!bit1 && !bit2 && !bit3 && !bit4 && !bit5)	
 563               		.stabn	68,0,152,.LM61-.LFBB8
 564               	.LM61:
 565 01e2 8091 0000 		lds r24,bit2
 566 01e6 8111      		cpse r24,__zero_reg__
 567 01e8 00C0      		rjmp .L35
 568               		.stabn	68,0,152,.LM62-.LFBB8
 569               	.LM62:
 570 01ea 8091 0000 		lds r24,bit3
 571 01ee 8111      		cpse r24,__zero_reg__
 572 01f0 00C0      		rjmp .L35
GAS LISTING /tmp/ccQaABxv.s 			page 14


 573               		.stabn	68,0,152,.LM63-.LFBB8
 574               	.LM63:
 575 01f2 8091 0000 		lds r24,bit4
 576 01f6 8111      		cpse r24,__zero_reg__
 577 01f8 00C0      		rjmp .L35
 578               		.stabn	68,0,152,.LM64-.LFBB8
 579               	.LM64:
 580 01fa 8091 0000 		lds r24,bit5
 581 01fe 8111      		cpse r24,__zero_reg__
 582 0200 00C0      		rjmp .L35
 153:main.cpp      **** 		{	
 154:main.cpp      ****             lireDirection();
 583               		.stabn	68,0,154,.LM65-.LFBB8
 584               	.LM65:
 585 0202 0E94 0000 		call _Z13lireDirectionv
 155:main.cpp      **** 			moteur.Avance(95);
 586               		.stabn	68,0,155,.LM66-.LFBB8
 587               	.LM66:
 588 0206 6FE5      		ldi r22,lo8(95)
 589 0208 70E0      		ldi r23,0
 590 020a 80E0      		ldi r24,lo8(moteur)
 591 020c 90E0      		ldi r25,hi8(moteur)
 592 020e 0E94 0000 		call _ZN3Pwm6AvanceEj
 593               	.L34:
 152:main.cpp      **** 		{	
 594               		.stabn	68,0,152,.LM67-.LFBB8
 595               	.LM67:
 596 0212 8091 0000 		lds r24,bit1
 597 0216 8823      		tst r24
 598 0218 01F0      		breq .L79
 599               	.L35:
 156:main.cpp      **** 		}
 157:main.cpp      **** 		petitSkip++;			
 600               		.stabn	68,0,157,.LM68-.LFBB8
 601               	.LM68:
 602 021a 8091 0000 		lds r24,petitSkip
 603 021e 8F5F      		subi r24,lo8(-(1))
 604 0220 8093 0000 		sts petitSkip,r24
 103:main.cpp      **** {
 605               		.stabn	68,0,103,.LM69-.LFBB8
 606               	.LM69:
 607 0224 00C0      		rjmp .L20
 608               	.L26:
 129:main.cpp      **** 				moteur.pivotDroit(95);
 609               		.stabn	68,0,129,.LM70-.LFBB8
 610               	.LM70:
 611 0226 9111      		cpse r25,__zero_reg__
 612 0228 00C0      		rjmp .L20
 129:main.cpp      **** 				moteur.pivotDroit(95);
 613               		.stabn	68,0,129,.LM71-.LFBB8
 614               	.LM71:
 615 022a 8091 0000 		lds r24,bit4
 616 022e 8111      		cpse r24,__zero_reg__
 617 0230 00C0      		rjmp .L30
 129:main.cpp      **** 				moteur.pivotDroit(95);
 618               		.stabn	68,0,129,.LM72-.LFBB8
 619               	.LM72:
GAS LISTING /tmp/ccQaABxv.s 			page 15


 620 0232 8091 0000 		lds r24,bit5
 621 0236 8823      		tst r24
 622 0238 01F4      		brne .+2
 623 023a 00C0      		rjmp .L20
 130:main.cpp      ****        
 624               		.stabn	68,0,130,.LM73-.LFBB8
 625               	.LM73:
 626 023c 6FE5      		ldi r22,lo8(95)
 627 023e 70E0      		ldi r23,0
 628 0240 80E0      		ldi r24,lo8(moteur)
 629 0242 90E0      		ldi r25,hi8(moteur)
 630 0244 0E94 0000 		call _ZN3Pwm10pivotDroitEj
 631 0248 00C0      		rjmp .L20
 632               	.L27:
 129:main.cpp      **** 				moteur.pivotDroit(95);
 633               		.stabn	68,0,129,.LM74-.LFBB8
 634               	.LM74:
 635 024a 9111      		cpse r25,__zero_reg__
 636 024c 00C0      		rjmp .L38
 138:main.cpp      **** 				moteur.Avance(95);
 637               		.stabn	68,0,138,.LM75-.LFBB8
 638               	.LM75:
 639 024e 8091 0000 		lds r24,bit5
 640 0252 2223      		tst r18
 641 0254 01F0      		breq .L80
 144:main.cpp      **** 				moteur.Tourner_Droite(95);
 642               		.stabn	68,0,144,.LM76-.LFBB8
 643               	.LM76:
 644 0256 8111      		cpse r24,__zero_reg__
 645 0258 00C0      		rjmp .L20
 646               	.L30:
 133:main.cpp      ****   
 647               		.stabn	68,0,133,.LM77-.LFBB8
 648               	.LM77:
 649 025a 6FE5      		ldi r22,lo8(95)
 650 025c 70E0      		ldi r23,0
 651 025e 80E0      		ldi r24,lo8(moteur)
 652 0260 90E0      		ldi r25,hi8(moteur)
 653 0262 0E94 0000 		call _ZN3Pwm14Tourner_DroiteEj
 654 0266 00C0      		rjmp .L20
 655               	.L80:
 138:main.cpp      **** 				moteur.Avance(95);
 656               		.stabn	68,0,138,.LM78-.LFBB8
 657               	.LM78:
 658 0268 8111      		cpse r24,__zero_reg__
 659 026a 00C0      		rjmp .L20
 139:main.cpp      **** 
 660               		.stabn	68,0,139,.LM79-.LFBB8
 661               	.LM79:
 662 026c 6FE5      		ldi r22,lo8(95)
 663 026e 70E0      		ldi r23,0
 664 0270 80E0      		ldi r24,lo8(moteur)
 665 0272 90E0      		ldi r25,hi8(moteur)
 666 0274 0E94 0000 		call _ZN3Pwm6AvanceEj
 667 0278 00C0      		rjmp .L20
 668               	.L38:
 141:main.cpp      **** 				moteur.Tourner_Gauche(95);
GAS LISTING /tmp/ccQaABxv.s 			page 16


 669               		.stabn	68,0,141,.LM80-.LFBB8
 670               	.LM80:
 671 027a 8823      		tst r24
 672 027c 01F4      		brne .+2
 673 027e 00C0      		rjmp .L20
 141:main.cpp      **** 				moteur.Tourner_Gauche(95);
 674               		.stabn	68,0,141,.LM81-.LFBB8
 675               	.LM81:
 676 0280 2111      		cpse r18,__zero_reg__
 677 0282 00C0      		rjmp .L20
 678 0284 00C0      		rjmp .L77
 679               		.size	_Z15fairePointillesv, .-_Z15fairePointillesv
 680               	.Lscope8:
 681               		.stabs	"",36,0,0,.Lscope8-.LFBB8
 682               		.stabd	78,0,0
 683               		.stabs	"_Z17faireIntersectionv:F(0,4)",36,0,164,_Z17faireIntersectionv
 684               	.global	_Z17faireIntersectionv
 685               		.type	_Z17faireIntersectionv, @function
 686               	_Z17faireIntersectionv:
 687               		.stabd	46,0,0
 158:main.cpp      **** 	}
 159:main.cpp      **** 	faireSon(0);
 160:main.cpp      **** 	aFaitTriangle = false;
 161:main.cpp      **** 	del.eteindreDel();
 162:main.cpp      **** }
 163:main.cpp      **** 
 164:main.cpp      **** void faireIntersection()
 165:main.cpp      **** {
 688               		.stabn	68,0,165,.LM82-.LFBB9
 689               	.LM82:
 690               	.LFBB9:
 691               	/* prologue: function */
 692               	/* frame size = 0 */
 693               	/* stack size = 0 */
 694               	.L__stack_usage = 0
 166:main.cpp      ****     if (directions[compteur] == 'd')
 695               		.stabn	68,0,166,.LM83-.LFBB9
 696               	.LM83:
 697 0286 E091 0000 		lds r30,compteur
 698 028a F0E0      		ldi r31,0
 699 028c E050      		subi r30,lo8(-(directions))
 700 028e F040      		sbci r31,hi8(-(directions))
 701 0290 8081      		ld r24,Z
 702 0292 8436      		cpi r24,lo8(100)
 703 0294 01F0      		breq .+2
 704 0296 00C0      		rjmp .L82
 167:main.cpp      ****     {
 168:main.cpp      **** 		moteur.pivotDroit(95);
 705               		.stabn	68,0,168,.LM84-.LFBB9
 706               	.LM84:
 707 0298 6FE5      		ldi r22,lo8(95)
 708 029a 70E0      		ldi r23,0
 709 029c 80E0      		ldi r24,lo8(moteur)
 710 029e 90E0      		ldi r25,hi8(moteur)
 711 02a0 0E94 0000 		call _ZN3Pwm10pivotDroitEj
 712               	.LBB67:
 713               	.LBB68:
GAS LISTING /tmp/ccQaABxv.s 			page 17


 714               		.stabs	"/usr/avr/include/util/delay.h",132,0,0,.Ltext1
 715               	.Ltext1:
   1:/usr/avr/include/util/delay.h **** /* Copyright (c) 2002, Marek Michalkiewicz
   2:/usr/avr/include/util/delay.h ****    Copyright (c) 2004,2005,2007 Joerg Wunsch
   3:/usr/avr/include/util/delay.h ****    Copyright (c) 2007  Florin-Viorel Petrov
   4:/usr/avr/include/util/delay.h ****    All rights reserved.
   5:/usr/avr/include/util/delay.h **** 
   6:/usr/avr/include/util/delay.h ****    Redistribution and use in source and binary forms, with or without
   7:/usr/avr/include/util/delay.h ****    modification, are permitted provided that the following conditions are met:
   8:/usr/avr/include/util/delay.h **** 
   9:/usr/avr/include/util/delay.h ****    * Redistributions of source code must retain the above copyright
  10:/usr/avr/include/util/delay.h ****      notice, this list of conditions and the following disclaimer.
  11:/usr/avr/include/util/delay.h **** 
  12:/usr/avr/include/util/delay.h ****    * Redistributions in binary form must reproduce the above copyright
  13:/usr/avr/include/util/delay.h ****      notice, this list of conditions and the following disclaimer in
  14:/usr/avr/include/util/delay.h ****      the documentation and/or other materials provided with the
  15:/usr/avr/include/util/delay.h ****      distribution.
  16:/usr/avr/include/util/delay.h **** 
  17:/usr/avr/include/util/delay.h ****    * Neither the name of the copyright holders nor the names of
  18:/usr/avr/include/util/delay.h ****      contributors may be used to endorse or promote products derived
  19:/usr/avr/include/util/delay.h ****      from this software without specific prior written permission.
  20:/usr/avr/include/util/delay.h **** 
  21:/usr/avr/include/util/delay.h ****   THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS "AS IS"
  22:/usr/avr/include/util/delay.h ****   AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE
  23:/usr/avr/include/util/delay.h ****   IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE
  24:/usr/avr/include/util/delay.h ****   ARE DISCLAIMED. IN NO EVENT SHALL THE COPYRIGHT OWNER OR CONTRIBUTORS BE
  25:/usr/avr/include/util/delay.h ****   LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR
  26:/usr/avr/include/util/delay.h ****   CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF
  27:/usr/avr/include/util/delay.h ****   SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS
  28:/usr/avr/include/util/delay.h ****   INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN
  29:/usr/avr/include/util/delay.h ****   CONTRACT, STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)
  30:/usr/avr/include/util/delay.h ****   ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE
  31:/usr/avr/include/util/delay.h ****   POSSIBILITY OF SUCH DAMAGE. */
  32:/usr/avr/include/util/delay.h **** 
  33:/usr/avr/include/util/delay.h **** /* $Id: delay.h.in 2251 2011-09-14 08:20:33Z joerg_wunsch $ */
  34:/usr/avr/include/util/delay.h **** 
  35:/usr/avr/include/util/delay.h **** #ifndef _UTIL_DELAY_H_
  36:/usr/avr/include/util/delay.h **** #define _UTIL_DELAY_H_ 1
  37:/usr/avr/include/util/delay.h **** 
  38:/usr/avr/include/util/delay.h **** #ifndef __HAS_DELAY_CYCLES
  39:/usr/avr/include/util/delay.h **** #define __HAS_DELAY_CYCLES 1
  40:/usr/avr/include/util/delay.h **** #endif
  41:/usr/avr/include/util/delay.h **** 
  42:/usr/avr/include/util/delay.h **** #include <inttypes.h>
  43:/usr/avr/include/util/delay.h **** #include <util/delay_basic.h>
  44:/usr/avr/include/util/delay.h **** #include <math.h>
  45:/usr/avr/include/util/delay.h **** 
  46:/usr/avr/include/util/delay.h **** /** \file */
  47:/usr/avr/include/util/delay.h **** /** \defgroup util_delay <util/delay.h>: Convenience functions for busy-wait delay loops
  48:/usr/avr/include/util/delay.h ****     \code
  49:/usr/avr/include/util/delay.h ****     #define F_CPU 1000000UL  // 1 MHz
  50:/usr/avr/include/util/delay.h ****     //#define F_CPU 14.7456E6
  51:/usr/avr/include/util/delay.h ****     #include <util/delay.h>
  52:/usr/avr/include/util/delay.h ****     \endcode
  53:/usr/avr/include/util/delay.h **** 
  54:/usr/avr/include/util/delay.h ****     \note As an alternative method, it is possible to pass the
  55:/usr/avr/include/util/delay.h ****     F_CPU macro down to the compiler from the Makefile.
GAS LISTING /tmp/ccQaABxv.s 			page 18


  56:/usr/avr/include/util/delay.h ****     Obviously, in that case, no \c \#define statement should be
  57:/usr/avr/include/util/delay.h ****     used.
  58:/usr/avr/include/util/delay.h **** 
  59:/usr/avr/include/util/delay.h ****     The functions in this header file are wrappers around the basic
  60:/usr/avr/include/util/delay.h ****     busy-wait functions from <util/delay_basic.h>.  They are meant as
  61:/usr/avr/include/util/delay.h ****     convenience functions where actual time values can be specified
  62:/usr/avr/include/util/delay.h ****     rather than a number of cycles to wait for.  The idea behind is
  63:/usr/avr/include/util/delay.h ****     that compile-time constant expressions will be eliminated by
  64:/usr/avr/include/util/delay.h ****     compiler optimization so floating-point expressions can be used
  65:/usr/avr/include/util/delay.h ****     to calculate the number of delay cycles needed based on the CPU
  66:/usr/avr/include/util/delay.h ****     frequency passed by the macro F_CPU.
  67:/usr/avr/include/util/delay.h **** 
  68:/usr/avr/include/util/delay.h ****     \note In order for these functions to work as intended, compiler
  69:/usr/avr/include/util/delay.h ****     optimizations <em>must</em> be enabled, and the delay time
  70:/usr/avr/include/util/delay.h ****     <em>must</em> be an expression that is a known constant at
  71:/usr/avr/include/util/delay.h ****     compile-time.  If these requirements are not met, the resulting
  72:/usr/avr/include/util/delay.h ****     delay will be much longer (and basically unpredictable), and
  73:/usr/avr/include/util/delay.h ****     applications that otherwise do not use floating-point calculations
  74:/usr/avr/include/util/delay.h ****     will experience severe code bloat by the floating-point library
  75:/usr/avr/include/util/delay.h ****     routines linked into the application.
  76:/usr/avr/include/util/delay.h **** 
  77:/usr/avr/include/util/delay.h ****     The functions available allow the specification of microsecond, and
  78:/usr/avr/include/util/delay.h ****     millisecond delays directly, using the application-supplied macro
  79:/usr/avr/include/util/delay.h ****     F_CPU as the CPU clock frequency (in Hertz).
  80:/usr/avr/include/util/delay.h **** 
  81:/usr/avr/include/util/delay.h **** */
  82:/usr/avr/include/util/delay.h **** 
  83:/usr/avr/include/util/delay.h **** #if !defined(__DOXYGEN__)
  84:/usr/avr/include/util/delay.h **** static inline void _delay_us(double __us) __attribute__((always_inline));
  85:/usr/avr/include/util/delay.h **** static inline void _delay_ms(double __ms) __attribute__((always_inline));
  86:/usr/avr/include/util/delay.h **** #endif
  87:/usr/avr/include/util/delay.h **** 
  88:/usr/avr/include/util/delay.h **** #ifndef F_CPU
  89:/usr/avr/include/util/delay.h **** /* prevent compiler error by supplying a default */
  90:/usr/avr/include/util/delay.h **** # warning "F_CPU not defined for <util/delay.h>"
  91:/usr/avr/include/util/delay.h **** # define F_CPU 1000000UL
  92:/usr/avr/include/util/delay.h **** #endif
  93:/usr/avr/include/util/delay.h **** 
  94:/usr/avr/include/util/delay.h **** #ifndef __OPTIMIZE__
  95:/usr/avr/include/util/delay.h **** # warning "Compiler optimizations disabled; functions from <util/delay.h> won't work as designed"
  96:/usr/avr/include/util/delay.h **** #endif
  97:/usr/avr/include/util/delay.h **** 
  98:/usr/avr/include/util/delay.h **** #if __HAS_DELAY_CYCLES && defined(__OPTIMIZE__) && \
  99:/usr/avr/include/util/delay.h ****   !defined(__DELAY_BACKWARD_COMPATIBLE__) &&	   \
 100:/usr/avr/include/util/delay.h ****   __STDC_HOSTED__
 101:/usr/avr/include/util/delay.h **** #  include <math.h>
 102:/usr/avr/include/util/delay.h **** #endif
 103:/usr/avr/include/util/delay.h **** 
 104:/usr/avr/include/util/delay.h **** /**
 105:/usr/avr/include/util/delay.h ****    \ingroup util_delay
 106:/usr/avr/include/util/delay.h **** 
 107:/usr/avr/include/util/delay.h ****    Perform a delay of \c __ms milliseconds, using _delay_loop_2().
 108:/usr/avr/include/util/delay.h **** 
 109:/usr/avr/include/util/delay.h ****    The macro F_CPU is supposed to be defined to a
 110:/usr/avr/include/util/delay.h ****    constant defining the CPU clock frequency (in Hertz).
 111:/usr/avr/include/util/delay.h **** 
 112:/usr/avr/include/util/delay.h ****    The maximal possible delay is 262.14 ms / F_CPU in MHz.
GAS LISTING /tmp/ccQaABxv.s 			page 19


 113:/usr/avr/include/util/delay.h **** 
 114:/usr/avr/include/util/delay.h ****    When the user request delay which exceed the maximum possible one,
 115:/usr/avr/include/util/delay.h ****    _delay_ms() provides a decreased resolution functionality. In this
 116:/usr/avr/include/util/delay.h ****    mode _delay_ms() will work with a resolution of 1/10 ms, providing
 117:/usr/avr/include/util/delay.h ****    delays up to 6.5535 seconds (independent from CPU frequency).  The
 118:/usr/avr/include/util/delay.h ****    user will not be informed about decreased resolution.
 119:/usr/avr/include/util/delay.h **** 
 120:/usr/avr/include/util/delay.h ****    If the avr-gcc toolchain has __builtin_avr_delay_cycles(unsigned long)
 121:/usr/avr/include/util/delay.h ****    support, maximal possible delay is 4294967.295 ms/ F_CPU in MHz. For
 122:/usr/avr/include/util/delay.h ****    values greater than the maximal possible delay, overflows results in
 123:/usr/avr/include/util/delay.h ****    no delay i.e., 0ms.
 124:/usr/avr/include/util/delay.h **** 
 125:/usr/avr/include/util/delay.h ****    Conversion of __us into clock cycles may not always result in integer.
 126:/usr/avr/include/util/delay.h ****    By default, the clock cycles rounded up to next integer. This ensures that
 127:/usr/avr/include/util/delay.h ****    the user gets atleast __us microseconds of delay.
 128:/usr/avr/include/util/delay.h **** 
 129:/usr/avr/include/util/delay.h ****    Alternatively, user can define __DELAY_ROUND_DOWN__ and __DELAY_ROUND_CLOSEST__
 130:/usr/avr/include/util/delay.h ****    to round down and round to closest integer.
 131:/usr/avr/include/util/delay.h **** 
 132:/usr/avr/include/util/delay.h ****    Note: The new implementation of _delay_ms(double __ms) with 
 133:/usr/avr/include/util/delay.h ****     __builtin_avr_delay_cycles(unsigned long) support is not backward compatible. 
 134:/usr/avr/include/util/delay.h ****    User can define __DELAY_BACKWARD_COMPATIBLE__ to get a backward compatible delay.
 135:/usr/avr/include/util/delay.h ****    Also, the backward compatible
 136:/usr/avr/include/util/delay.h ****    algorithm will be chosen if the code is compiled in a <em>freestanding
 137:/usr/avr/include/util/delay.h ****    environment</em> (GCC option \c -ffreestanding), as the math functions
 138:/usr/avr/include/util/delay.h ****    required for rounding are not available to the compiler then.
 139:/usr/avr/include/util/delay.h **** 
 140:/usr/avr/include/util/delay.h ****  */
 141:/usr/avr/include/util/delay.h **** void
 142:/usr/avr/include/util/delay.h **** _delay_ms(double __ms)
 143:/usr/avr/include/util/delay.h **** {
 144:/usr/avr/include/util/delay.h **** 	uint16_t __ticks;
 145:/usr/avr/include/util/delay.h **** 	double __tmp ; 
 146:/usr/avr/include/util/delay.h **** #if __HAS_DELAY_CYCLES && defined(__OPTIMIZE__) && \
 147:/usr/avr/include/util/delay.h ****   !defined(__DELAY_BACKWARD_COMPATIBLE__) &&	   \
 148:/usr/avr/include/util/delay.h ****   __STDC_HOSTED__
 149:/usr/avr/include/util/delay.h **** 	uint32_t __ticks_dc;
 150:/usr/avr/include/util/delay.h **** 	extern void __builtin_avr_delay_cycles(unsigned long);
 151:/usr/avr/include/util/delay.h **** 	__tmp = ((F_CPU) / 1e3) * __ms;
 152:/usr/avr/include/util/delay.h **** 
 153:/usr/avr/include/util/delay.h **** 	#if defined(__DELAY_ROUND_DOWN__)
 154:/usr/avr/include/util/delay.h **** 		__ticks_dc = (uint32_t)fabs(__tmp);
 155:/usr/avr/include/util/delay.h **** 
 156:/usr/avr/include/util/delay.h **** 	#elif defined(__DELAY_ROUND_CLOSEST__)
 157:/usr/avr/include/util/delay.h **** 		__ticks_dc = (uint32_t)(fabs(__tmp)+0.5);
 158:/usr/avr/include/util/delay.h **** 
 159:/usr/avr/include/util/delay.h **** 	#else
 160:/usr/avr/include/util/delay.h **** 		//round up by default
 161:/usr/avr/include/util/delay.h **** 		__ticks_dc = (uint32_t)(ceil(fabs(__tmp)));
 162:/usr/avr/include/util/delay.h **** 	#endif
 163:/usr/avr/include/util/delay.h **** 
 164:/usr/avr/include/util/delay.h **** 	__builtin_avr_delay_cycles(__ticks_dc);
 716               		.stabn	68,0,164,.LM85-.LFBB9
 717               	.LM85:
 718 02a4 2FEF      		ldi r18,lo8(799999)
 719 02a6 84E3      		ldi r24,hi8(799999)
 720 02a8 9CE0      		ldi r25,hlo8(799999)
GAS LISTING /tmp/ccQaABxv.s 			page 20


 721 02aa 2150      		1: subi r18,1
 722 02ac 8040      		sbci r24,0
 723 02ae 9040      		sbci r25,0
 724 02b0 01F4      		brne 1b
 725 02b2 00C0      		rjmp .
 726 02b4 0000      		nop
 727               	.LBE68:
 728               	.LBE67:
 729               		.stabs	"main.cpp",132,0,0,.Ltext2
 730               	.Ltext2:
 169:main.cpp      **** 		_delay_ms(500);
 170:main.cpp      **** 		moteur.Avance(95);
 731               		.stabn	68,0,170,.LM86-.LFBB9
 732               	.LM86:
 733 02b6 6FE5      		ldi r22,lo8(95)
 734 02b8 70E0      		ldi r23,0
 735 02ba 80E0      		ldi r24,lo8(moteur)
 736 02bc 90E0      		ldi r25,hi8(moteur)
 737 02be 0E94 0000 		call _ZN3Pwm6AvanceEj
 738               	.L83:
 171:main.cpp      **** 		while(!(bit1 || bit2 || bit3))
 739               		.stabn	68,0,171,.LM87-.LFBB9
 740               	.LM87:
 741 02c2 8091 0000 		lds r24,bit1
 742 02c6 8111      		cpse r24,__zero_reg__
 743 02c8 00C0      		rjmp .L107
 744               		.stabn	68,0,171,.LM88-.LFBB9
 745               	.LM88:
 746 02ca 8091 0000 		lds r24,bit2
 747 02ce 8111      		cpse r24,__zero_reg__
 748 02d0 00C0      		rjmp .L107
 749               		.stabn	68,0,171,.LM89-.LFBB9
 750               	.LM89:
 751 02d2 8091 0000 		lds r24,bit3
 752 02d6 8111      		cpse r24,__zero_reg__
 753 02d8 00C0      		rjmp .L107
 172:main.cpp      **** 				lireDirection();	
 754               		.stabn	68,0,172,.LM90-.LFBB9
 755               	.LM90:
 756 02da 0E94 0000 		call _Z13lireDirectionv
 757 02de 00C0      		rjmp .L83
 758               	.L92:
 173:main.cpp      ****     
 174:main.cpp      **** 		while(!bit5)
 175:main.cpp      **** 		{
 176:main.cpp      **** 			lireDirection();
 759               		.stabn	68,0,176,.LM91-.LFBB9
 760               	.LM91:
 761 02e0 0E94 0000 		call _Z13lireDirectionv
 177:main.cpp      **** 			if(!bit1 && bit2 && !bit3)	// 0 1 0 X X
 762               		.stabn	68,0,177,.LM92-.LFBB9
 763               	.LM92:
 764 02e4 9091 0000 		lds r25,bit1
 765 02e8 8091 0000 		lds r24,bit2
 766 02ec 9111      		cpse r25,__zero_reg__
 767 02ee 00C0      		rjmp .L86
 768               		.stabn	68,0,177,.LM93-.LFBB9
GAS LISTING /tmp/ccQaABxv.s 			page 21


 769               	.LM93:
 770 02f0 8823      		tst r24
 771 02f2 01F0      		breq .L87
 772               	.L89:
 178:main.cpp      **** 				moteur.Avance(95);
 773               		.stabn	68,0,178,.LM94-.LFBB9
 774               	.LM94:
 775 02f4 6FE5      		ldi r22,lo8(95)
 776 02f6 70E0      		ldi r23,0
 777 02f8 80E0      		ldi r24,lo8(moteur)
 778 02fa 90E0      		ldi r25,hi8(moteur)
 779 02fc 0E94 0000 		call _ZN3Pwm6AvanceEj
 780               	.L107:
 174:main.cpp      **** 		{
 781               		.stabn	68,0,174,.LM95-.LFBB9
 782               	.LM95:
 783 0300 8091 0000 		lds r24,bit5
 784 0304 8823      		tst r24
 785 0306 01F0      		breq .L92
 786 0308 00C0      		rjmp .L116
 787               	.L86:
 179:main.cpp      **** 
 180:main.cpp      **** 			else if (bit1 && !bit2 && !bit3) // 1 0 0 X X
 788               		.stabn	68,0,180,.LM96-.LFBB9
 789               	.LM96:
 790 030a 8111      		cpse r24,__zero_reg__
 791 030c 00C0      		rjmp .L89
 792               		.stabn	68,0,180,.LM97-.LFBB9
 793               	.LM97:
 794 030e 8091 0000 		lds r24,bit3
 795 0312 8111      		cpse r24,__zero_reg__
 796 0314 00C0      		rjmp .L89
 181:main.cpp      **** 				moteur.pivotGauche(95);
 797               		.stabn	68,0,181,.LM98-.LFBB9
 798               	.LM98:
 799 0316 6FE5      		ldi r22,lo8(95)
 800 0318 70E0      		ldi r23,0
 801 031a 80E0      		ldi r24,lo8(moteur)
 802 031c 90E0      		ldi r25,hi8(moteur)
 803 031e 0E94 0000 		call _ZN3Pwm11pivotGaucheEj
 804 0322 00C0      		rjmp .L107
 805               	.L87:
 182:main.cpp      **** 
 183:main.cpp      **** 			else if (!bit1 && !bit2 && bit3) // 0 0 1 X X
 806               		.stabn	68,0,183,.LM99-.LFBB9
 807               	.LM99:
 808 0324 8091 0000 		lds r24,bit3
 809 0328 8823      		tst r24
 810 032a 01F0      		breq .L90
 811               	.L91:
 184:main.cpp      **** 				moteur.Tourner_Droite(95);
 812               		.stabn	68,0,184,.LM100-.LFBB9
 813               	.LM100:
 814 032c 6FE5      		ldi r22,lo8(95)
 815 032e 70E0      		ldi r23,0
 816 0330 80E0      		ldi r24,lo8(moteur)
 817 0332 90E0      		ldi r25,hi8(moteur)
GAS LISTING /tmp/ccQaABxv.s 			page 22


 818 0334 0E94 0000 		call _ZN3Pwm14Tourner_DroiteEj
 819 0338 00C0      		rjmp .L107
 820               	.L90:
 185:main.cpp      **** 
 186:main.cpp      **** 			else if (!bit1 && !bit2 && !bit3 && bit4)
 821               		.stabn	68,0,186,.LM101-.LFBB9
 822               	.LM101:
 823 033a 8091 0000 		lds r24,bit4
 824 033e 8823      		tst r24
 825 0340 01F0      		breq .L89
 826 0342 00C0      		rjmp .L91
 827               	.L116:
 187:main.cpp      **** 				moteur.Tourner_Droite(95);	// 0 0 0 1 X
 188:main.cpp      **** 		
 189:main.cpp      **** 			else
 190:main.cpp      **** 				moteur.Avance(95);
 191:main.cpp      **** 		}
 192:main.cpp      **** 		moteur.pivotDroit(95);
 828               		.stabn	68,0,192,.LM102-.LFBB9
 829               	.LM102:
 830 0344 6FE5      		ldi r22,lo8(95)
 831 0346 70E0      		ldi r23,0
 832 0348 80E0      		ldi r24,lo8(moteur)
 833 034a 90E0      		ldi r25,hi8(moteur)
 834 034c 0E94 0000 		call _ZN3Pwm10pivotDroitEj
 835 0350 00C0      		rjmp .L115
 836               	.L82:
 193:main.cpp      **** 		_delay_ms(100); 
 194:main.cpp      ****                 moteur.Avance(95);
 195:main.cpp      ****                 _delay_ms(100);
 196:main.cpp      ****     }
 197:main.cpp      ****     
 198:main.cpp      ****     else if (directions[compteur] == 'g')
 837               		.stabn	68,0,198,.LM103-.LFBB9
 838               	.LM103:
 839 0352 8736      		cpi r24,lo8(103)
 840 0354 01F0      		breq .+2
 841 0356 00C0      		rjmp .L93
 199:main.cpp      ****     {
 200:main.cpp      **** 		moteur.pivotGauche(95);
 842               		.stabn	68,0,200,.LM104-.LFBB9
 843               	.LM104:
 844 0358 6FE5      		ldi r22,lo8(95)
 845 035a 70E0      		ldi r23,0
 846 035c 80E0      		ldi r24,lo8(moteur)
 847 035e 90E0      		ldi r25,hi8(moteur)
 848 0360 0E94 0000 		call _ZN3Pwm11pivotGaucheEj
 849               	.LBB69:
 850               	.LBB70:
 851               		.stabs	"/usr/avr/include/util/delay.h",132,0,0,.Ltext3
 852               	.Ltext3:
 853               		.stabn	68,0,164,.LM105-.LFBB9
 854               	.LM105:
 855 0364 2FEF      		ldi r18,lo8(959999)
 856 0366 85EA      		ldi r24,hi8(959999)
 857 0368 9EE0      		ldi r25,hlo8(959999)
 858 036a 2150      		1: subi r18,1
GAS LISTING /tmp/ccQaABxv.s 			page 23


 859 036c 8040      		sbci r24,0
 860 036e 9040      		sbci r25,0
 861 0370 01F4      		brne 1b
 862 0372 00C0      		rjmp .
 863 0374 0000      		nop
 864               	.LBE70:
 865               	.LBE69:
 866               		.stabs	"main.cpp",132,0,0,.Ltext4
 867               	.Ltext4:
 201:main.cpp      **** 		_delay_ms(600);	
 202:main.cpp      **** 		moteur.Avance(95);
 868               		.stabn	68,0,202,.LM106-.LFBB9
 869               	.LM106:
 870 0376 6FE5      		ldi r22,lo8(95)
 871 0378 70E0      		ldi r23,0
 872 037a 80E0      		ldi r24,lo8(moteur)
 873 037c 90E0      		ldi r25,hi8(moteur)
 874 037e 0E94 0000 		call _ZN3Pwm6AvanceEj
 875               	.L94:
 203:main.cpp      **** 		while(!(bit3 || bit4 || bit5))
 876               		.stabn	68,0,203,.LM107-.LFBB9
 877               	.LM107:
 878 0382 8091 0000 		lds r24,bit3
 879 0386 8111      		cpse r24,__zero_reg__
 880 0388 00C0      		rjmp .L108
 881               		.stabn	68,0,203,.LM108-.LFBB9
 882               	.LM108:
 883 038a 8091 0000 		lds r24,bit4
 884 038e 8111      		cpse r24,__zero_reg__
 885 0390 00C0      		rjmp .L108
 886               		.stabn	68,0,203,.LM109-.LFBB9
 887               	.LM109:
 888 0392 8091 0000 		lds r24,bit5
 889 0396 8111      		cpse r24,__zero_reg__
 890 0398 00C0      		rjmp .L108
 204:main.cpp      **** 		{
 205:main.cpp      **** 				lireDirection();			
 891               		.stabn	68,0,205,.LM110-.LFBB9
 892               	.LM110:
 893 039a 0E94 0000 		call _Z13lireDirectionv
 894 039e 00C0      		rjmp .L94
 895               	.L102:
 206:main.cpp      **** 		}	
 207:main.cpp      **** 	
 208:main.cpp      **** 		while(!bit1)
 209:main.cpp      **** 		{
 210:main.cpp      **** 			lireDirection();
 896               		.stabn	68,0,210,.LM111-.LFBB9
 897               	.LM111:
 898 03a0 0E94 0000 		call _Z13lireDirectionv
 211:main.cpp      **** 			if(!bit3 && bit4 && !bit5)	// X X 0 1 0
 899               		.stabn	68,0,211,.LM112-.LFBB9
 900               	.LM112:
 901 03a4 9091 0000 		lds r25,bit3
 902 03a8 8091 0000 		lds r24,bit4
 903 03ac 9111      		cpse r25,__zero_reg__
 904 03ae 00C0      		rjmp .L97
GAS LISTING /tmp/ccQaABxv.s 			page 24


 905 03b0 2091 0000 		lds r18,bit5
 906               		.stabn	68,0,211,.LM113-.LFBB9
 907               	.LM113:
 908 03b4 8823      		tst r24
 909 03b6 01F0      		breq .L98
 910               	.L114:
 911               		.stabn	68,0,211,.LM114-.LFBB9
 912               	.LM114:
 913 03b8 2111      		cpse r18,__zero_reg__
 914 03ba 00C0      		rjmp .L99
 915               	.L101:
 212:main.cpp      **** 			moteur.Avance(95);
 916               		.stabn	68,0,212,.LM115-.LFBB9
 917               	.LM115:
 918 03bc 6FE5      		ldi r22,lo8(95)
 919 03be 70E0      		ldi r23,0
 920 03c0 80E0      		ldi r24,lo8(moteur)
 921 03c2 90E0      		ldi r25,hi8(moteur)
 922 03c4 0E94 0000 		call _ZN3Pwm6AvanceEj
 923               	.L108:
 208:main.cpp      **** 		{
 924               		.stabn	68,0,208,.LM116-.LFBB9
 925               	.LM116:
 926 03c8 8091 0000 		lds r24,bit1
 927 03cc 8823      		tst r24
 928 03ce 01F0      		breq .L102
 929 03d0 00C0      		rjmp .L117
 930               	.L97:
 213:main.cpp      **** 		
 214:main.cpp      ****                     else if (bit3 && !bit4 && !bit5) // X X 1 0 0
 931               		.stabn	68,0,214,.LM117-.LFBB9
 932               	.LM117:
 933 03d2 8111      		cpse r24,__zero_reg__
 934 03d4 00C0      		rjmp .L99
 935               		.stabn	68,0,214,.LM118-.LFBB9
 936               	.LM118:
 937 03d6 2091 0000 		lds r18,bit5
 938 03da 00C0      		rjmp .L114
 939               	.L98:
 215:main.cpp      **** 			moteur.Avance(95);
 216:main.cpp      **** 		
 217:main.cpp      ****                     else if (!bit3 && !bit4 && bit5) // X X 0 0 1
 940               		.stabn	68,0,217,.LM119-.LFBB9
 941               	.LM119:
 942 03dc 2223      		tst r18
 943 03de 01F0      		breq .L99
 218:main.cpp      **** 			moteur.pivotDroit(95);
 944               		.stabn	68,0,218,.LM120-.LFBB9
 945               	.LM120:
 946 03e0 6FE5      		ldi r22,lo8(95)
 947 03e2 70E0      		ldi r23,0
 948 03e4 80E0      		ldi r24,lo8(moteur)
 949 03e6 90E0      		ldi r25,hi8(moteur)
 950 03e8 0E94 0000 		call _ZN3Pwm10pivotDroitEj
 951 03ec 00C0      		rjmp .L108
 952               	.L99:
 219:main.cpp      **** 
GAS LISTING /tmp/ccQaABxv.s 			page 25


 220:main.cpp      ****                     else if (bit2 && !bit3 && !bit4 && !bit5)	// X 1 0 0 0
 953               		.stabn	68,0,220,.LM121-.LFBB9
 954               	.LM121:
 955 03ee 2091 0000 		lds r18,bit2
 956 03f2 2223      		tst r18
 957 03f4 01F0      		breq .L101
 958               		.stabn	68,0,220,.LM122-.LFBB9
 959               	.LM122:
 960 03f6 9111      		cpse r25,__zero_reg__
 961 03f8 00C0      		rjmp .L101
 962               		.stabn	68,0,220,.LM123-.LFBB9
 963               	.LM123:
 964 03fa 8111      		cpse r24,__zero_reg__
 965 03fc 00C0      		rjmp .L101
 966               		.stabn	68,0,220,.LM124-.LFBB9
 967               	.LM124:
 968 03fe 8091 0000 		lds r24,bit5
 969 0402 8111      		cpse r24,__zero_reg__
 970 0404 00C0      		rjmp .L101
 221:main.cpp      **** 			moteur.Tourner_Gauche(95);
 971               		.stabn	68,0,221,.LM125-.LFBB9
 972               	.LM125:
 973 0406 6FE5      		ldi r22,lo8(95)
 974 0408 70E0      		ldi r23,0
 975 040a 80E0      		ldi r24,lo8(moteur)
 976 040c 90E0      		ldi r25,hi8(moteur)
 977 040e 0E94 0000 		call _ZN3Pwm14Tourner_GaucheEj
 978 0412 00C0      		rjmp .L108
 979               	.L117:
 222:main.cpp      **** 		
 223:main.cpp      ****                     else
 224:main.cpp      **** 			moteur.Avance(95);
 225:main.cpp      **** 		}
 226:main.cpp      **** 		moteur.pivotGauche(95);
 980               		.stabn	68,0,226,.LM126-.LFBB9
 981               	.LM126:
 982 0414 6FE5      		ldi r22,lo8(95)
 983 0416 70E0      		ldi r23,0
 984 0418 80E0      		ldi r24,lo8(moteur)
 985 041a 90E0      		ldi r25,hi8(moteur)
 986 041c 0E94 0000 		call _ZN3Pwm11pivotGaucheEj
 987               	.L115:
 988               	.LBB71:
 989               	.LBB72:
 990               		.stabs	"/usr/avr/include/util/delay.h",132,0,0,.Ltext5
 991               	.Ltext5:
 992               		.stabn	68,0,164,.LM127-.LFBB9
 993               	.LM127:
 994 0420 2FEF      		ldi r18,lo8(159999)
 995 0422 80E7      		ldi r24,hi8(159999)
 996 0424 92E0      		ldi r25,hlo8(159999)
 997 0426 2150      		1: subi r18,1
 998 0428 8040      		sbci r24,0
 999 042a 9040      		sbci r25,0
 1000 042c 01F4      		brne 1b
 1001 042e 00C0      		rjmp .
 1002 0430 0000      		nop
GAS LISTING /tmp/ccQaABxv.s 			page 26


 1003               	.LBE72:
 1004               	.LBE71:
 1005               		.stabs	"main.cpp",132,0,0,.Ltext6
 1006               	.Ltext6:
 227:main.cpp      **** 		_delay_ms(100);
 228:main.cpp      ****                  moteur.Avance(95);
 1007               		.stabn	68,0,228,.LM128-.LFBB9
 1008               	.LM128:
 1009 0432 6FE5      		ldi r22,lo8(95)
 1010 0434 70E0      		ldi r23,0
 1011 0436 80E0      		ldi r24,lo8(moteur)
 1012 0438 90E0      		ldi r25,hi8(moteur)
 1013 043a 0E94 0000 		call _ZN3Pwm6AvanceEj
 1014               	.LBB73:
 1015               	.LBB74:
 1016               		.stabs	"/usr/avr/include/util/delay.h",132,0,0,.Ltext7
 1017               	.Ltext7:
 1018               		.stabn	68,0,164,.LM129-.LFBB9
 1019               	.LM129:
 1020 043e 2FEF      		ldi r18,lo8(159999)
 1021 0440 80E7      		ldi r24,hi8(159999)
 1022 0442 92E0      		ldi r25,hlo8(159999)
 1023 0444 2150      		1: subi r18,1
 1024 0446 8040      		sbci r24,0
 1025 0448 9040      		sbci r25,0
 1026 044a 01F4      		brne 1b
 1027 044c 00C0      		rjmp .
 1028 044e 0000      		nop
 1029               	.L93:
 1030               	.LBE74:
 1031               	.LBE73:
 1032               		.stabs	"main.cpp",132,0,0,.Ltext8
 1033               	.Ltext8:
 229:main.cpp      ****                 _delay_ms(100);
 230:main.cpp      **** 					
 231:main.cpp      ****     }
 232:main.cpp      ****     compteur++;
 1034               		.stabn	68,0,232,.LM130-.LFBB9
 1035               	.LM130:
 1036 0450 8091 0000 		lds r24,compteur
 1037 0454 8F5F      		subi r24,lo8(-(1))
 1038 0456 8093 0000 		sts compteur,r24
 1039 045a 0895      		ret
 1040               		.size	_Z17faireIntersectionv, .-_Z17faireIntersectionv
 1041               	.Lscope9:
 1042               		.stabs	"",36,0,0,.Lscope9-.LFBB9
 1043               		.stabd	78,0,0
 1044               		.stabs	"_Z25faireIntersectionTrianglev:F(0,4)",36,0,236,_Z25faireIntersectionTrianglev
 1045               	.global	_Z25faireIntersectionTrianglev
 1046               		.type	_Z25faireIntersectionTrianglev, @function
 1047               	_Z25faireIntersectionTrianglev:
 1048               		.stabd	46,0,0
 233:main.cpp      ****     
 234:main.cpp      **** }
 235:main.cpp      **** 
 236:main.cpp      **** void faireIntersectionTriangle()
 237:main.cpp      **** {
GAS LISTING /tmp/ccQaABxv.s 			page 27


 1049               		.stabn	68,0,237,.LM131-.LFBB10
 1050               	.LM131:
 1051               	.LFBB10:
 1052               	/* prologue: function */
 1053               	/* frame size = 0 */
 1054               	/* stack size = 0 */
 1055               	.L__stack_usage = 0
 238:main.cpp      ****     del.allumerVert(0);
 1056               		.stabn	68,0,238,.LM132-.LFBB10
 1057               	.LM132:
 1058 045c 60E0      		ldi r22,0
 1059 045e 80E0      		ldi r24,lo8(del)
 1060 0460 90E0      		ldi r25,hi8(del)
 1061 0462 0E94 0000 		call _ZN3Del11allumerVertEh
 239:main.cpp      ****     //faireSon(100);
 240:main.cpp      ****     if (directions[compteur] == 'd')
 1062               		.stabn	68,0,240,.LM133-.LFBB10
 1063               	.LM133:
 1064 0466 E091 0000 		lds r30,compteur
 1065 046a F0E0      		ldi r31,0
 1066 046c E050      		subi r30,lo8(-(directions))
 1067 046e F040      		sbci r31,hi8(-(directions))
 1068 0470 8081      		ld r24,Z
 1069 0472 8436      		cpi r24,lo8(100)
 1070 0474 01F0      		breq .+2
 1071 0476 00C0      		rjmp .L163
 1072               	.L119:
 241:main.cpp      ****     {
 242:main.cpp      ****        while(bit1 || bit2 || bit3 || bit4 || bit5)
 1073               		.stabn	68,0,242,.LM134-.LFBB10
 1074               	.LM134:
 1075 0478 8091 0000 		lds r24,bit1
 1076 047c 8823      		tst r24
 1077 047e 01F0      		breq .L167
 1078               	.L121:
 243:main.cpp      ****        {
 244:main.cpp      ****            moteur.pivotDroit(95);
 1079               		.stabn	68,0,244,.LM135-.LFBB10
 1080               	.LM135:
 1081 0480 6FE5      		ldi r22,lo8(95)
 1082 0482 70E0      		ldi r23,0
 1083 0484 80E0      		ldi r24,lo8(moteur)
 1084 0486 90E0      		ldi r25,hi8(moteur)
 1085 0488 0E94 0000 		call _ZN3Pwm10pivotDroitEj
 245:main.cpp      ****            lireDirection();
 1086               		.stabn	68,0,245,.LM136-.LFBB10
 1087               	.LM136:
 1088 048c 0E94 0000 		call _Z13lireDirectionv
 1089 0490 00C0      		rjmp .L119
 1090               	.L167:
 242:main.cpp      ****        {
 1091               		.stabn	68,0,242,.LM137-.LFBB10
 1092               	.LM137:
 1093 0492 8091 0000 		lds r24,bit2
 1094 0496 8111      		cpse r24,__zero_reg__
 1095 0498 00C0      		rjmp .L121
 242:main.cpp      ****        {
GAS LISTING /tmp/ccQaABxv.s 			page 28


 1096               		.stabn	68,0,242,.LM138-.LFBB10
 1097               	.LM138:
 1098 049a 8091 0000 		lds r24,bit3
 1099 049e 8111      		cpse r24,__zero_reg__
 1100 04a0 00C0      		rjmp .L121
 242:main.cpp      ****        {
 1101               		.stabn	68,0,242,.LM139-.LFBB10
 1102               	.LM139:
 1103 04a2 8091 0000 		lds r24,bit4
 1104 04a6 8111      		cpse r24,__zero_reg__
 1105 04a8 00C0      		rjmp .L121
 242:main.cpp      ****        {
 1106               		.stabn	68,0,242,.LM140-.LFBB10
 1107               	.LM140:
 1108 04aa 8091 0000 		lds r24,bit5
 1109 04ae 8111      		cpse r24,__zero_reg__
 1110 04b0 00C0      		rjmp .L121
 246:main.cpp      ****         }
 247:main.cpp      ****         moteur.Avance(95);
 1111               		.stabn	68,0,247,.LM141-.LFBB10
 1112               	.LM141:
 1113 04b2 6FE5      		ldi r22,lo8(95)
 1114 04b4 70E0      		ldi r23,0
 1115 04b6 80E0      		ldi r24,lo8(moteur)
 1116 04b8 90E0      		ldi r25,hi8(moteur)
 1117 04ba 0E94 0000 		call _ZN3Pwm6AvanceEj
 1118               	.LBB75:
 1119               	.LBB76:
 1120               		.stabs	"/usr/avr/include/util/delay.h",132,0,0,.Ltext9
 1121               	.Ltext9:
 1122               		.stabn	68,0,164,.LM142-.LFBB10
 1123               	.LM142:
 1124 04be 2FEF      		ldi r18,lo8(1599999)
 1125 04c0 89E6      		ldi r24,hi8(1599999)
 1126 04c2 98E1      		ldi r25,hlo8(1599999)
 1127 04c4 2150      		1: subi r18,1
 1128 04c6 8040      		sbci r24,0
 1129 04c8 9040      		sbci r25,0
 1130 04ca 01F4      		brne 1b
 1131 04cc 00C0      		rjmp .
 1132 04ce 0000      		nop
 1133               	.L122:
 1134               	.LBE76:
 1135               	.LBE75:
 1136               		.stabs	"main.cpp",132,0,0,.Ltext10
 1137               	.Ltext10:
 248:main.cpp      ****         _delay_ms(1000);
 249:main.cpp      ****         while(!bit2)
 1138               		.stabn	68,0,249,.LM143-.LFBB10
 1139               	.LM143:
 1140 04d0 8091 0000 		lds r24,bit2
 1141 04d4 8111      		cpse r24,__zero_reg__
 1142 04d6 00C0      		rjmp .L155
 250:main.cpp      ****         {
 251:main.cpp      ****             lireDirection();
 1143               		.stabn	68,0,251,.LM144-.LFBB10
 1144               	.LM144:
GAS LISTING /tmp/ccQaABxv.s 			page 29


 1145 04d8 0E94 0000 		call _Z13lireDirectionv
 252:main.cpp      ****             moteur.Tourner_Gauche(95);
 1146               		.stabn	68,0,252,.LM145-.LFBB10
 1147               	.LM145:
 1148 04dc 6FE5      		ldi r22,lo8(95)
 1149 04de 70E0      		ldi r23,0
 1150 04e0 80E0      		ldi r24,lo8(moteur)
 1151 04e2 90E0      		ldi r25,hi8(moteur)
 1152 04e4 0E94 0000 		call _ZN3Pwm14Tourner_GaucheEj
 1153 04e8 00C0      		rjmp .L122
 1154               	.L169:
 253:main.cpp      ****         }
 254:main.cpp      ****        
 255:main.cpp      ****          while(bit1 || bit2 || bit3 || bit4 || bit5)
 1155               		.stabn	68,0,255,.LM146-.LFBB10
 1156               	.LM146:
 1157 04ea 8091 0000 		lds r24,bit2
 1158 04ee 8823      		tst r24
 1159 04f0 01F4      		brne .+2
 1160 04f2 00C0      		rjmp .L168
 1161               	.L129:
 256:main.cpp      **** 		{
 257:main.cpp      **** 			del.allumerRouge(0);
 1162               		.stabn	68,0,257,.LM147-.LFBB10
 1163               	.LM147:
 1164 04f4 60E0      		ldi r22,0
 1165 04f6 80E0      		ldi r24,lo8(del)
 1166 04f8 90E0      		ldi r25,hi8(del)
 1167 04fa 0E94 0000 		call _ZN3Del12allumerRougeEh
 258:main.cpp      **** 			lireDirection();
 1168               		.stabn	68,0,258,.LM148-.LFBB10
 1169               	.LM148:
 1170 04fe 0E94 0000 		call _Z13lireDirectionv
 259:main.cpp      **** 			if(!bit1 && bit2 && !bit3)	// 0 1 0 X X
 1171               		.stabn	68,0,259,.LM149-.LFBB10
 1172               	.LM149:
 1173 0502 9091 0000 		lds r25,bit1
 1174 0506 8091 0000 		lds r24,bit2
 1175 050a 9111      		cpse r25,__zero_reg__
 1176 050c 00C0      		rjmp .L125
 1177               		.stabn	68,0,259,.LM150-.LFBB10
 1178               	.LM150:
 1179 050e 8823      		tst r24
 1180 0510 01F0      		breq .L126
 1181               		.stabn	68,0,259,.LM151-.LFBB10
 1182               	.LM151:
 1183 0512 2091 0000 		lds r18,bit3
 1184 0516 2111      		cpse r18,__zero_reg__
 1185 0518 00C0      		rjmp .L126
 260:main.cpp      **** 				moteur.Avance(95);
 1186               		.stabn	68,0,260,.LM152-.LFBB10
 1187               	.LM152:
 1188 051a 6FE5      		ldi r22,lo8(95)
 1189 051c 70E0      		ldi r23,0
 1190 051e 80E0      		ldi r24,lo8(moteur)
 1191 0520 90E0      		ldi r25,hi8(moteur)
 1192 0522 0E94 0000 		call _ZN3Pwm6AvanceEj
GAS LISTING /tmp/ccQaABxv.s 			page 30


 1193               	.L155:
 255:main.cpp      **** 		{
 1194               		.stabn	68,0,255,.LM153-.LFBB10
 1195               	.LM153:
 1196 0526 8091 0000 		lds r24,bit1
 1197 052a 8823      		tst r24
 1198 052c 01F0      		breq .L169
 1199 052e 00C0      		rjmp .L129
 1200               	.L125:
 261:main.cpp      **** 
 262:main.cpp      **** 			else if (bit1 && !bit2 && !bit3) // 1 0 0 X X
 1201               		.stabn	68,0,262,.LM154-.LFBB10
 1202               	.LM154:
 1203 0530 8111      		cpse r24,__zero_reg__
 1204 0532 00C0      		rjmp .L126
 1205               		.stabn	68,0,262,.LM155-.LFBB10
 1206               	.LM155:
 1207 0534 2091 0000 		lds r18,bit3
 1208 0538 2111      		cpse r18,__zero_reg__
 1209 053a 00C0      		rjmp .L126
 263:main.cpp      **** 				moteur.Tourner_Gauche(95);
 1210               		.stabn	68,0,263,.LM156-.LFBB10
 1211               	.LM156:
 1212 053c 6FE5      		ldi r22,lo8(95)
 1213 053e 70E0      		ldi r23,0
 1214 0540 80E0      		ldi r24,lo8(moteur)
 1215 0542 90E0      		ldi r25,hi8(moteur)
 1216 0544 0E94 0000 		call _ZN3Pwm14Tourner_GaucheEj
 1217 0548 00C0      		rjmp .L155
 1218               	.L126:
 264:main.cpp      **** 
 265:main.cpp      **** 			else if ((bit4) || (bit4 && bit1))	// X X X 1 X ou 1 X X 1 X
 1219               		.stabn	68,0,265,.LM157-.LFBB10
 1220               	.LM157:
 1221 054a 2091 0000 		lds r18,bit4
 1222 054e 2223      		tst r18
 1223 0550 01F0      		breq .L128
 266:main.cpp      **** 				moteur.pivotDroit(95);
 1224               		.stabn	68,0,266,.LM158-.LFBB10
 1225               	.LM158:
 1226 0552 6FE5      		ldi r22,lo8(95)
 1227 0554 70E0      		ldi r23,0
 1228 0556 80E0      		ldi r24,lo8(moteur)
 1229 0558 90E0      		ldi r25,hi8(moteur)
 1230 055a 0E94 0000 		call _ZN3Pwm10pivotDroitEj
 1231 055e 00C0      		rjmp .L155
 1232               	.L128:
 267:main.cpp      **** 
 268:main.cpp      **** 			else if (!bit1 && !bit2 && bit3) // 0 0 1 X X
 1233               		.stabn	68,0,268,.LM159-.LFBB10
 1234               	.LM159:
 1235 0560 9111      		cpse r25,__zero_reg__
 1236 0562 00C0      		rjmp .L155
 1237               		.stabn	68,0,268,.LM160-.LFBB10
 1238               	.LM160:
 1239 0564 8111      		cpse r24,__zero_reg__
 1240 0566 00C0      		rjmp .L155
GAS LISTING /tmp/ccQaABxv.s 			page 31


 1241               		.stabn	68,0,268,.LM161-.LFBB10
 1242               	.LM161:
 1243 0568 8091 0000 		lds r24,bit3
 1244 056c 8823      		tst r24
 1245 056e 01F0      		breq .L155
 269:main.cpp      **** 				moteur.Tourner_Droite(95);
 1246               		.stabn	68,0,269,.LM162-.LFBB10
 1247               	.LM162:
 1248 0570 6FE5      		ldi r22,lo8(95)
 1249 0572 70E0      		ldi r23,0
 1250 0574 80E0      		ldi r24,lo8(moteur)
 1251 0576 90E0      		ldi r25,hi8(moteur)
 1252 0578 0E94 0000 		call _ZN3Pwm14Tourner_DroiteEj
 1253 057c 00C0      		rjmp .L155
 1254               	.L168:
 255:main.cpp      **** 		{
 1255               		.stabn	68,0,255,.LM163-.LFBB10
 1256               	.LM163:
 1257 057e 8091 0000 		lds r24,bit3
 1258 0582 8111      		cpse r24,__zero_reg__
 1259 0584 00C0      		rjmp .L129
 255:main.cpp      **** 		{
 1260               		.stabn	68,0,255,.LM164-.LFBB10
 1261               	.LM164:
 1262 0586 8091 0000 		lds r24,bit4
 1263 058a 8111      		cpse r24,__zero_reg__
 1264 058c 00C0      		rjmp .L129
 255:main.cpp      **** 		{
 1265               		.stabn	68,0,255,.LM165-.LFBB10
 1266               	.LM165:
 1267 058e 8091 0000 		lds r24,bit5
 1268 0592 8111      		cpse r24,__zero_reg__
 1269 0594 00C0      		rjmp .L129
 270:main.cpp      **** 
 271:main.cpp      **** 
 272:main.cpp      **** 		}
 273:main.cpp      **** 		del.allumerVert(0);
 1270               		.stabn	68,0,273,.LM166-.LFBB10
 1271               	.LM166:
 1272 0596 60E0      		ldi r22,0
 1273 0598 80E0      		ldi r24,lo8(del)
 1274 059a 90E0      		ldi r25,hi8(del)
 1275 059c 0E94 0000 		call _ZN3Del11allumerVertEh
 274:main.cpp      **** 		moteur.Avance(95);
 1276               		.stabn	68,0,274,.LM167-.LFBB10
 1277               	.LM167:
 1278 05a0 6FE5      		ldi r22,lo8(95)
 1279 05a2 70E0      		ldi r23,0
 1280 05a4 80E0      		ldi r24,lo8(moteur)
 1281 05a6 90E0      		ldi r25,hi8(moteur)
 1282 05a8 0E94 0000 		call _ZN3Pwm6AvanceEj
 1283               	.LBB77:
 1284               	.LBB78:
 1285               		.stabs	"/usr/avr/include/util/delay.h",132,0,0,.Ltext11
 1286               	.Ltext11:
 1287               		.stabn	68,0,164,.LM168-.LFBB10
 1288               	.LM168:
GAS LISTING /tmp/ccQaABxv.s 			page 32


 1289 05ac 2FEF      		ldi r18,lo8(799999)
 1290 05ae 84E3      		ldi r24,hi8(799999)
 1291 05b0 9CE0      		ldi r25,hlo8(799999)
 1292 05b2 2150      		1: subi r18,1
 1293 05b4 8040      		sbci r24,0
 1294 05b6 9040      		sbci r25,0
 1295 05b8 01F4      		brne 1b
 1296 05ba 00C0      		rjmp .
 1297 05bc 0000      		nop
 1298               	.L130:
 1299               	.LBE78:
 1300               	.LBE77:
 1301               		.stabs	"main.cpp",132,0,0,.Ltext12
 1302               	.Ltext12:
 275:main.cpp      **** 		_delay_ms(500);
 276:main.cpp      **** 		
 277:main.cpp      ****         while(!bit3)
 1303               		.stabn	68,0,277,.LM169-.LFBB10
 1304               	.LM169:
 1305 05be 8091 0000 		lds r24,bit3
 1306 05c2 8111      		cpse r24,__zero_reg__
 1307 05c4 00C0      		rjmp .L133
 278:main.cpp      ****         {
 279:main.cpp      ****             lireDirection();
 1308               		.stabn	68,0,279,.LM170-.LFBB10
 1309               	.LM170:
 1310 05c6 0E94 0000 		call _Z13lireDirectionv
 280:main.cpp      ****             moteur.Tourner_Gauche(95);
 1311               		.stabn	68,0,280,.LM171-.LFBB10
 1312               	.LM171:
 1313 05ca 6FE5      		ldi r22,lo8(95)
 1314 05cc 70E0      		ldi r23,0
 1315 05ce 80E0      		ldi r24,lo8(moteur)
 1316 05d0 90E0      		ldi r25,hi8(moteur)
 1317 05d2 0E94 0000 		call _ZN3Pwm14Tourner_GaucheEj
 1318 05d6 00C0      		rjmp .L130
 1319               	.L163:
 281:main.cpp      ****         }
 282:main.cpp      ****         
 283:main.cpp      ****         
 284:main.cpp      ****                                             
 285:main.cpp      ****     }
 286:main.cpp      ****     else if (directions[compteur] == 'g')
 1320               		.stabn	68,0,286,.LM172-.LFBB10
 1321               	.LM172:
 1322 05d8 8736      		cpi r24,lo8(103)
 1323 05da 01F0      		breq .L132
 1324               	.L133:
 287:main.cpp      ****     {
 288:main.cpp      ****        while(bit1 || bit2 || bit3 || bit4 || bit5)
 289:main.cpp      ****        {
 290:main.cpp      ****            moteur.pivotGauche(95);
 291:main.cpp      ****            lireDirection();
 292:main.cpp      ****         }
 293:main.cpp      ****         moteur.Avance(95);
 294:main.cpp      ****         _delay_ms(1000);
 295:main.cpp      ****         while(!bit4)
GAS LISTING /tmp/ccQaABxv.s 			page 33


 296:main.cpp      ****         {
 297:main.cpp      ****             lireDirection();
 298:main.cpp      ****             moteur.Tourner_Droite(95);
 299:main.cpp      ****         }
 300:main.cpp      ****        
 301:main.cpp      ****          while(bit1 || bit2 || bit3 || bit4 || bit5)
 302:main.cpp      **** 		{
 303:main.cpp      **** 			del.allumerRouge(0);
 304:main.cpp      **** 			lireDirection();
 305:main.cpp      **** 			if(!bit3 && bit4 && !bit5)	// X X 0 1 0
 306:main.cpp      **** 				moteur.Avance(95);
 307:main.cpp      **** 
 308:main.cpp      **** 			else if (bit3 && !bit4 && !bit5) // X X 1 0 0 
 309:main.cpp      **** 				moteur.Tourner_Gauche(95);
 310:main.cpp      **** 
 311:main.cpp      **** 			else if ((bit2) || (bit2 && bit5))	// X 1 X X X ou X 1 X X 1
 312:main.cpp      **** 				moteur.pivotGauche(95);
 313:main.cpp      **** 
 314:main.cpp      **** 			else if (!bit3 && !bit4 && bit5) // X X 0 0 1
 315:main.cpp      **** 				moteur.Tourner_Droite(95);
 316:main.cpp      **** 
 317:main.cpp      **** 
 318:main.cpp      **** 		}
 319:main.cpp      **** 		del.allumerVert(0);
 320:main.cpp      **** 		moteur.Avance(95);
 321:main.cpp      **** 		_delay_ms(500);
 322:main.cpp      **** 		
 323:main.cpp      ****         while(!bit3)
 324:main.cpp      ****         {
 325:main.cpp      ****             lireDirection();
 326:main.cpp      ****             moteur.Tourner_Droite(95);
 327:main.cpp      ****         }
 328:main.cpp      ****    
 329:main.cpp      ****     }               
 330:main.cpp      ****     compteur++;
 1325               		.stabn	68,0,330,.LM173-.LFBB10
 1326               	.LM173:
 1327 05dc 8091 0000 		lds r24,compteur
 1328 05e0 8F5F      		subi r24,lo8(-(1))
 1329 05e2 8093 0000 		sts compteur,r24
 331:main.cpp      ****     aFaitTriangle = true;
 1330               		.stabn	68,0,331,.LM174-.LFBB10
 1331               	.LM174:
 1332 05e6 81E0      		ldi r24,lo8(1)
 1333 05e8 8093 0000 		sts aFaitTriangle,r24
 332:main.cpp      ****     del.eteindreDel();
 1334               		.stabn	68,0,332,.LM175-.LFBB10
 1335               	.LM175:
 1336 05ec 80E0      		ldi r24,lo8(del)
 1337 05ee 90E0      		ldi r25,hi8(del)
 1338 05f0 0C94 0000 		jmp _ZN3Del11eteindreDelEv
 1339               	.L171:
 288:main.cpp      ****        {
 1340               		.stabn	68,0,288,.LM176-.LFBB10
 1341               	.LM176:
 1342 05f4 8091 0000 		lds r24,bit2
 1343 05f8 8823      		tst r24
GAS LISTING /tmp/ccQaABxv.s 			page 34


 1344 05fa 01F0      		breq .L170
 1345               	.L134:
 290:main.cpp      ****            lireDirection();
 1346               		.stabn	68,0,290,.LM177-.LFBB10
 1347               	.LM177:
 1348 05fc 6FE5      		ldi r22,lo8(95)
 1349 05fe 70E0      		ldi r23,0
 1350 0600 80E0      		ldi r24,lo8(moteur)
 1351 0602 90E0      		ldi r25,hi8(moteur)
 1352 0604 0E94 0000 		call _ZN3Pwm11pivotGaucheEj
 291:main.cpp      ****         }
 1353               		.stabn	68,0,291,.LM178-.LFBB10
 1354               	.LM178:
 1355 0608 0E94 0000 		call _Z13lireDirectionv
 1356               	.L132:
 288:main.cpp      ****        {
 1357               		.stabn	68,0,288,.LM179-.LFBB10
 1358               	.LM179:
 1359 060c 8091 0000 		lds r24,bit1
 1360 0610 8823      		tst r24
 1361 0612 01F0      		breq .L171
 1362 0614 00C0      		rjmp .L134
 1363               	.L170:
 288:main.cpp      ****        {
 1364               		.stabn	68,0,288,.LM180-.LFBB10
 1365               	.LM180:
 1366 0616 8091 0000 		lds r24,bit3
 1367 061a 8111      		cpse r24,__zero_reg__
 1368 061c 00C0      		rjmp .L134
 288:main.cpp      ****        {
 1369               		.stabn	68,0,288,.LM181-.LFBB10
 1370               	.LM181:
 1371 061e 8091 0000 		lds r24,bit4
 1372 0622 8111      		cpse r24,__zero_reg__
 1373 0624 00C0      		rjmp .L134
 288:main.cpp      ****        {
 1374               		.stabn	68,0,288,.LM182-.LFBB10
 1375               	.LM182:
 1376 0626 8091 0000 		lds r24,bit5
 1377 062a 8111      		cpse r24,__zero_reg__
 1378 062c 00C0      		rjmp .L134
 293:main.cpp      ****         _delay_ms(1000);
 1379               		.stabn	68,0,293,.LM183-.LFBB10
 1380               	.LM183:
 1381 062e 6FE5      		ldi r22,lo8(95)
 1382 0630 70E0      		ldi r23,0
 1383 0632 80E0      		ldi r24,lo8(moteur)
 1384 0634 90E0      		ldi r25,hi8(moteur)
 1385 0636 0E94 0000 		call _ZN3Pwm6AvanceEj
 1386               	.LBB79:
 1387               	.LBB80:
 1388               		.stabs	"/usr/avr/include/util/delay.h",132,0,0,.Ltext13
 1389               	.Ltext13:
 1390               		.stabn	68,0,164,.LM184-.LFBB10
 1391               	.LM184:
 1392 063a 2FEF      		ldi r18,lo8(1599999)
 1393 063c 89E6      		ldi r24,hi8(1599999)
GAS LISTING /tmp/ccQaABxv.s 			page 35


 1394 063e 98E1      		ldi r25,hlo8(1599999)
 1395 0640 2150      		1: subi r18,1
 1396 0642 8040      		sbci r24,0
 1397 0644 9040      		sbci r25,0
 1398 0646 01F4      		brne 1b
 1399 0648 00C0      		rjmp .
 1400 064a 0000      		nop
 1401               	.L135:
 1402               	.LBE80:
 1403               	.LBE79:
 1404               		.stabs	"main.cpp",132,0,0,.Ltext14
 1405               	.Ltext14:
 295:main.cpp      ****         {
 1406               		.stabn	68,0,295,.LM185-.LFBB10
 1407               	.LM185:
 1408 064c 8091 0000 		lds r24,bit4
 1409 0650 8111      		cpse r24,__zero_reg__
 1410 0652 00C0      		rjmp .L156
 297:main.cpp      ****             moteur.Tourner_Droite(95);
 1411               		.stabn	68,0,297,.LM186-.LFBB10
 1412               	.LM186:
 1413 0654 0E94 0000 		call _Z13lireDirectionv
 298:main.cpp      ****         }
 1414               		.stabn	68,0,298,.LM187-.LFBB10
 1415               	.LM187:
 1416 0658 6FE5      		ldi r22,lo8(95)
 1417 065a 70E0      		ldi r23,0
 1418 065c 80E0      		ldi r24,lo8(moteur)
 1419 065e 90E0      		ldi r25,hi8(moteur)
 1420 0660 0E94 0000 		call _ZN3Pwm14Tourner_DroiteEj
 1421 0664 00C0      		rjmp .L135
 1422               	.L173:
 301:main.cpp      **** 		{
 1423               		.stabn	68,0,301,.LM188-.LFBB10
 1424               	.LM188:
 1425 0666 8091 0000 		lds r24,bit2
 1426 066a 8823      		tst r24
 1427 066c 01F4      		brne .+2
 1428 066e 00C0      		rjmp .L172
 1429               	.L142:
 303:main.cpp      **** 			lireDirection();
 1430               		.stabn	68,0,303,.LM189-.LFBB10
 1431               	.LM189:
 1432 0670 60E0      		ldi r22,0
 1433 0672 80E0      		ldi r24,lo8(del)
 1434 0674 90E0      		ldi r25,hi8(del)
 1435 0676 0E94 0000 		call _ZN3Del12allumerRougeEh
 304:main.cpp      **** 			if(!bit3 && bit4 && !bit5)	// X X 0 1 0
 1436               		.stabn	68,0,304,.LM190-.LFBB10
 1437               	.LM190:
 1438 067a 0E94 0000 		call _Z13lireDirectionv
 305:main.cpp      **** 				moteur.Avance(95);
 1439               		.stabn	68,0,305,.LM191-.LFBB10
 1440               	.LM191:
 1441 067e 9091 0000 		lds r25,bit3
 1442 0682 8091 0000 		lds r24,bit4
 1443 0686 9111      		cpse r25,__zero_reg__
GAS LISTING /tmp/ccQaABxv.s 			page 36


 1444 0688 00C0      		rjmp .L138
 305:main.cpp      **** 				moteur.Avance(95);
 1445               		.stabn	68,0,305,.LM192-.LFBB10
 1446               	.LM192:
 1447 068a 8823      		tst r24
 1448 068c 01F0      		breq .L139
 305:main.cpp      **** 				moteur.Avance(95);
 1449               		.stabn	68,0,305,.LM193-.LFBB10
 1450               	.LM193:
 1451 068e 2091 0000 		lds r18,bit5
 1452 0692 2111      		cpse r18,__zero_reg__
 1453 0694 00C0      		rjmp .L139
 306:main.cpp      **** 
 1454               		.stabn	68,0,306,.LM194-.LFBB10
 1455               	.LM194:
 1456 0696 6FE5      		ldi r22,lo8(95)
 1457 0698 70E0      		ldi r23,0
 1458 069a 80E0      		ldi r24,lo8(moteur)
 1459 069c 90E0      		ldi r25,hi8(moteur)
 1460 069e 0E94 0000 		call _ZN3Pwm6AvanceEj
 1461               	.L156:
 301:main.cpp      **** 		{
 1462               		.stabn	68,0,301,.LM195-.LFBB10
 1463               	.LM195:
 1464 06a2 8091 0000 		lds r24,bit1
 1465 06a6 8823      		tst r24
 1466 06a8 01F0      		breq .L173
 1467 06aa 00C0      		rjmp .L142
 1468               	.L138:
 308:main.cpp      **** 				moteur.Tourner_Gauche(95);
 1469               		.stabn	68,0,308,.LM196-.LFBB10
 1470               	.LM196:
 1471 06ac 8111      		cpse r24,__zero_reg__
 1472 06ae 00C0      		rjmp .L139
 308:main.cpp      **** 				moteur.Tourner_Gauche(95);
 1473               		.stabn	68,0,308,.LM197-.LFBB10
 1474               	.LM197:
 1475 06b0 2091 0000 		lds r18,bit5
 1476 06b4 2111      		cpse r18,__zero_reg__
 1477 06b6 00C0      		rjmp .L139
 309:main.cpp      **** 
 1478               		.stabn	68,0,309,.LM198-.LFBB10
 1479               	.LM198:
 1480 06b8 6FE5      		ldi r22,lo8(95)
 1481 06ba 70E0      		ldi r23,0
 1482 06bc 80E0      		ldi r24,lo8(moteur)
 1483 06be 90E0      		ldi r25,hi8(moteur)
 1484 06c0 0E94 0000 		call _ZN3Pwm14Tourner_GaucheEj
 1485 06c4 00C0      		rjmp .L156
 1486               	.L139:
 311:main.cpp      **** 				moteur.pivotGauche(95);
 1487               		.stabn	68,0,311,.LM199-.LFBB10
 1488               	.LM199:
 1489 06c6 2091 0000 		lds r18,bit2
 1490 06ca 2223      		tst r18
 1491 06cc 01F0      		breq .L141
 312:main.cpp      **** 
GAS LISTING /tmp/ccQaABxv.s 			page 37


 1492               		.stabn	68,0,312,.LM200-.LFBB10
 1493               	.LM200:
 1494 06ce 6FE5      		ldi r22,lo8(95)
 1495 06d0 70E0      		ldi r23,0
 1496 06d2 80E0      		ldi r24,lo8(moteur)
 1497 06d4 90E0      		ldi r25,hi8(moteur)
 1498 06d6 0E94 0000 		call _ZN3Pwm11pivotGaucheEj
 1499 06da 00C0      		rjmp .L156
 1500               	.L141:
 314:main.cpp      **** 				moteur.Tourner_Droite(95);
 1501               		.stabn	68,0,314,.LM201-.LFBB10
 1502               	.LM201:
 1503 06dc 9111      		cpse r25,__zero_reg__
 1504 06de 00C0      		rjmp .L156
 314:main.cpp      **** 				moteur.Tourner_Droite(95);
 1505               		.stabn	68,0,314,.LM202-.LFBB10
 1506               	.LM202:
 1507 06e0 8111      		cpse r24,__zero_reg__
 1508 06e2 00C0      		rjmp .L156
 314:main.cpp      **** 				moteur.Tourner_Droite(95);
 1509               		.stabn	68,0,314,.LM203-.LFBB10
 1510               	.LM203:
 1511 06e4 8091 0000 		lds r24,bit5
 1512 06e8 8823      		tst r24
 1513 06ea 01F0      		breq .L156
 315:main.cpp      **** 
 1514               		.stabn	68,0,315,.LM204-.LFBB10
 1515               	.LM204:
 1516 06ec 6FE5      		ldi r22,lo8(95)
 1517 06ee 70E0      		ldi r23,0
 1518 06f0 80E0      		ldi r24,lo8(moteur)
 1519 06f2 90E0      		ldi r25,hi8(moteur)
 1520 06f4 0E94 0000 		call _ZN3Pwm14Tourner_DroiteEj
 1521 06f8 00C0      		rjmp .L156
 1522               	.L172:
 301:main.cpp      **** 		{
 1523               		.stabn	68,0,301,.LM205-.LFBB10
 1524               	.LM205:
 1525 06fa 8091 0000 		lds r24,bit3
 1526 06fe 8111      		cpse r24,__zero_reg__
 1527 0700 00C0      		rjmp .L142
 301:main.cpp      **** 		{
 1528               		.stabn	68,0,301,.LM206-.LFBB10
 1529               	.LM206:
 1530 0702 8091 0000 		lds r24,bit4
 1531 0706 8111      		cpse r24,__zero_reg__
 1532 0708 00C0      		rjmp .L142
 301:main.cpp      **** 		{
 1533               		.stabn	68,0,301,.LM207-.LFBB10
 1534               	.LM207:
 1535 070a 8091 0000 		lds r24,bit5
 1536 070e 8111      		cpse r24,__zero_reg__
 1537 0710 00C0      		rjmp .L142
 319:main.cpp      **** 		moteur.Avance(95);
 1538               		.stabn	68,0,319,.LM208-.LFBB10
 1539               	.LM208:
 1540 0712 60E0      		ldi r22,0
GAS LISTING /tmp/ccQaABxv.s 			page 38


 1541 0714 80E0      		ldi r24,lo8(del)
 1542 0716 90E0      		ldi r25,hi8(del)
 1543 0718 0E94 0000 		call _ZN3Del11allumerVertEh
 320:main.cpp      **** 		_delay_ms(500);
 1544               		.stabn	68,0,320,.LM209-.LFBB10
 1545               	.LM209:
 1546 071c 6FE5      		ldi r22,lo8(95)
 1547 071e 70E0      		ldi r23,0
 1548 0720 80E0      		ldi r24,lo8(moteur)
 1549 0722 90E0      		ldi r25,hi8(moteur)
 1550 0724 0E94 0000 		call _ZN3Pwm6AvanceEj
 1551               	.LBB81:
 1552               	.LBB82:
 1553               		.stabs	"/usr/avr/include/util/delay.h",132,0,0,.Ltext15
 1554               	.Ltext15:
 1555               		.stabn	68,0,164,.LM210-.LFBB10
 1556               	.LM210:
 1557 0728 2FEF      		ldi r18,lo8(799999)
 1558 072a 84E3      		ldi r24,hi8(799999)
 1559 072c 9CE0      		ldi r25,hlo8(799999)
 1560 072e 2150      		1: subi r18,1
 1561 0730 8040      		sbci r24,0
 1562 0732 9040      		sbci r25,0
 1563 0734 01F4      		brne 1b
 1564 0736 00C0      		rjmp .
 1565 0738 0000      		nop
 1566               	.L143:
 1567               	.LBE82:
 1568               	.LBE81:
 1569               		.stabs	"main.cpp",132,0,0,.Ltext16
 1570               	.Ltext16:
 323:main.cpp      ****         {
 1571               		.stabn	68,0,323,.LM211-.LFBB10
 1572               	.LM211:
 1573 073a 8091 0000 		lds r24,bit3
 1574 073e 8111      		cpse r24,__zero_reg__
 1575 0740 00C0      		rjmp .L133
 325:main.cpp      ****             moteur.Tourner_Droite(95);
 1576               		.stabn	68,0,325,.LM212-.LFBB10
 1577               	.LM212:
 1578 0742 0E94 0000 		call _Z13lireDirectionv
 326:main.cpp      ****         }
 1579               		.stabn	68,0,326,.LM213-.LFBB10
 1580               	.LM213:
 1581 0746 6FE5      		ldi r22,lo8(95)
 1582 0748 70E0      		ldi r23,0
 1583 074a 80E0      		ldi r24,lo8(moteur)
 1584 074c 90E0      		ldi r25,hi8(moteur)
 1585 074e 0E94 0000 		call _ZN3Pwm14Tourner_DroiteEj
 1586 0752 00C0      		rjmp .L143
 1587               		.size	_Z25faireIntersectionTrianglev, .-_Z25faireIntersectionTrianglev
 1588               	.Lscope10:
 1589               		.stabs	"",36,0,0,.Lscope10-.LFBB10
 1590               		.stabd	78,0,0
 1591               		.stabs	"_Z11suivreLignev:F(0,4)",36,0,337,_Z11suivreLignev
 1592               	.global	_Z11suivreLignev
 1593               		.type	_Z11suivreLignev, @function
GAS LISTING /tmp/ccQaABxv.s 			page 39


 1594               	_Z11suivreLignev:
 1595               		.stabd	46,0,0
 333:main.cpp      ****     //faireSon(0);
 334:main.cpp      ****     
 335:main.cpp      **** }
 336:main.cpp      **** 
 337:main.cpp      **** void suivreLigne()
 338:main.cpp      **** {
 1596               		.stabn	68,0,338,.LM214-.LFBB11
 1597               	.LM214:
 1598               	.LFBB11:
 1599               	/* prologue: function */
 1600               	/* frame size = 0 */
 1601               	/* stack size = 0 */
 1602               	.L__stack_usage = 0
 339:main.cpp      **** 	
 340:main.cpp      ****     if(bit1 && bit2 && bit3 && bit4 && bit5) // 1 1 1 1 1
 1603               		.stabn	68,0,340,.LM215-.LFBB11
 1604               	.LM215:
 1605 0754 2091 0000 		lds r18,bit1
 1606 0758 9091 0000 		lds r25,bit2
 1607 075c 8091 0000 		lds r24,bit3
 1608 0760 2223      		tst r18
 1609 0762 01F4      		brne .+2
 1610 0764 00C0      		rjmp .L175
 1611               		.stabn	68,0,340,.LM216-.LFBB11
 1612               	.LM216:
 1613 0766 9923      		tst r25
 1614 0768 01F4      		brne .+2
 1615 076a 00C0      		rjmp .L176
 1616               		.stabn	68,0,340,.LM217-.LFBB11
 1617               	.LM217:
 1618 076c 8823      		tst r24
 1619 076e 01F4      		brne .+2
 1620 0770 00C0      		rjmp .L235
 1621               		.stabn	68,0,340,.LM218-.LFBB11
 1622               	.LM218:
 1623 0772 9091 0000 		lds r25,bit4
 1624 0776 9923      		tst r25
 1625 0778 01F4      		brne .+2
 1626 077a 00C0      		rjmp .L177
 1627               		.stabn	68,0,340,.LM219-.LFBB11
 1628               	.LM219:
 1629 077c 9091 0000 		lds r25,bit5
 1630 0780 9923      		tst r25
 1631 0782 01F4      		brne .+2
 1632 0784 00C0      		rjmp .L177
 1633               	.L237:
 341:main.cpp      ****     {
 342:main.cpp      **** 		while(bit1 && bit5)
 1634               		.stabn	68,0,342,.LM220-.LFBB11
 1635               	.LM220:
 1636 0786 8091 0000 		lds r24,bit1
 1637 078a 8823      		tst r24
 1638 078c 01F0      		breq .L179
 1639               		.stabn	68,0,342,.LM221-.LFBB11
 1640               	.LM221:
GAS LISTING /tmp/ccQaABxv.s 			page 40


 1641 078e 9091 0000 		lds r25,bit5
 1642 0792 9923      		tst r25
 1643 0794 01F0      		breq .L179
 343:main.cpp      **** 		{
 344:main.cpp      **** 			lireDirection();
 1644               		.stabn	68,0,344,.LM222-.LFBB11
 1645               	.LM222:
 1646 0796 0E94 0000 		call _Z13lireDirectionv
 345:main.cpp      **** 			moteur.Avance(95);
 1647               		.stabn	68,0,345,.LM223-.LFBB11
 1648               	.LM223:
 1649 079a 6FE5      		ldi r22,lo8(95)
 1650 079c 70E0      		ldi r23,0
 1651 079e 80E0      		ldi r24,lo8(moteur)
 1652 07a0 90E0      		ldi r25,hi8(moteur)
 1653 07a2 0E94 0000 		call _ZN3Pwm6AvanceEj
 1654 07a6 00C0      		rjmp .L237
 1655               	.L179:
 346:main.cpp      **** 		}
 347:main.cpp      **** 		if(compteur >= 3)
 1656               		.stabn	68,0,347,.LM224-.LFBB11
 1657               	.LM224:
 1658 07a8 9091 0000 		lds r25,compteur
 1659 07ac 9330      		cpi r25,lo8(3)
 1660 07ae 00F0      		brlo .L181
 348:main.cpp      ****         {
 349:main.cpp      **** 			moteur.Avance(0);
 1661               		.stabn	68,0,349,.LM225-.LFBB11
 1662               	.LM225:
 1663 07b0 60E0      		ldi r22,0
 1664 07b2 70E0      		ldi r23,0
 1665 07b4 80E0      		ldi r24,lo8(moteur)
 1666 07b6 90E0      		ldi r25,hi8(moteur)
 1667 07b8 0E94 0000 		call _ZN3Pwm6AvanceEj
 350:main.cpp      **** 			devraitFinir = true;
 1668               		.stabn	68,0,350,.LM226-.LFBB11
 1669               	.LM226:
 1670 07bc 81E0      		ldi r24,lo8(1)
 1671 07be 8093 0000 		sts devraitFinir,r24
 1672 07c2 0895      		ret
 1673               	.L181:
 351:main.cpp      ****          }
 352:main.cpp      ****                 
 353:main.cpp      **** 		else if(!bit1 && !bit2 && !bit3 && !bit4 && !bit5)
 1674               		.stabn	68,0,353,.LM227-.LFBB11
 1675               	.LM227:
 1676 07c4 8111      		cpse r24,__zero_reg__
 1677 07c6 00C0      		rjmp .L183
 1678               		.stabn	68,0,353,.LM228-.LFBB11
 1679               	.LM228:
 1680 07c8 8091 0000 		lds r24,bit2
 1681 07cc 8111      		cpse r24,__zero_reg__
 1682 07ce 00C0      		rjmp .L183
 1683               		.stabn	68,0,353,.LM229-.LFBB11
 1684               	.LM229:
 1685 07d0 8091 0000 		lds r24,bit3
 1686 07d4 8111      		cpse r24,__zero_reg__
GAS LISTING /tmp/ccQaABxv.s 			page 41


 1687 07d6 00C0      		rjmp .L183
 1688               		.stabn	68,0,353,.LM230-.LFBB11
 1689               	.LM230:
 1690 07d8 8091 0000 		lds r24,bit4
 1691 07dc 8111      		cpse r24,__zero_reg__
 1692 07de 00C0      		rjmp .L183
 1693               		.stabn	68,0,353,.LM231-.LFBB11
 1694               	.LM231:
 1695 07e0 8091 0000 		lds r24,bit5
 1696 07e4 8111      		cpse r24,__zero_reg__
 1697 07e6 00C0      		rjmp .L183
 1698               	.L184:
 354:main.cpp      **** 		{
 355:main.cpp      **** 			while(!bit3)
 1699               		.stabn	68,0,355,.LM232-.LFBB11
 1700               	.LM232:
 1701 07e8 8091 0000 		lds r24,bit3
 1702 07ec 8111      		cpse r24,__zero_reg__
 1703 07ee 00C0      		rjmp .L259
 356:main.cpp      **** 			{
 357:main.cpp      **** 				lireDirection();
 1704               		.stabn	68,0,357,.LM233-.LFBB11
 1705               	.LM233:
 1706 07f0 0E94 0000 		call _Z13lireDirectionv
 358:main.cpp      **** 				moteur.pivotDroit(95);
 1707               		.stabn	68,0,358,.LM234-.LFBB11
 1708               	.LM234:
 1709 07f4 6FE5      		ldi r22,lo8(95)
 1710 07f6 70E0      		ldi r23,0
 1711 07f8 80E0      		ldi r24,lo8(moteur)
 1712 07fa 90E0      		ldi r25,hi8(moteur)
 1713 07fc 0E94 0000 		call _ZN3Pwm10pivotDroitEj
 1714 0800 00C0      		rjmp .L184
 1715               	.L259:
 1716 0802 0895      		ret
 1717               	.L175:
 359:main.cpp      **** 			}
 360:main.cpp      **** 		}
 361:main.cpp      **** 
 362:main.cpp      ****                 else
 363:main.cpp      ****                     moteur.Avance(95);
 364:main.cpp      ****     }
 365:main.cpp      **** 		else if(bit1 && bit2 && !bit3 && !bit4 && !bit5) // 1 1 0 0 0
 366:main.cpp      ****         {
 367:main.cpp      ****             moteur.Tourner_Gauche(120);
 368:main.cpp      ****         }
 369:main.cpp      ****         else if(bit1 && !bit2 && !bit3 && !bit4 && !bit5) //1 0 0 0 0
 370:main.cpp      ****         {
 371:main.cpp      ****             moteur.pivotGauche(95);
 372:main.cpp      ****         }
 373:main.cpp      ****         else if(!bit1 && bit2 && !bit3 && !bit4 && !bit5) // 0 1 0 0 0
 1718               		.stabn	68,0,373,.LM235-.LFBB11
 1719               	.LM235:
 1720 0804 9111      		cpse r25,__zero_reg__
 1721 0806 00C0      		rjmp .L260
 1722               	.L187:
 374:main.cpp      ****         {
GAS LISTING /tmp/ccQaABxv.s 			page 42


 375:main.cpp      ****             moteur.Tourner_Gauche(95);
 376:main.cpp      ****         }
 377:main.cpp      ****         else if((!bit1 && !bit2 && bit3 && bit4 && bit5) || (!bit1 && bit2 && bit3 && bit4 && bit5)
 1723               		.stabn	68,0,377,.LM236-.LFBB11
 1724               	.LM236:
 1725 0808 8823      		tst r24
 1726 080a 01F4      		brne .+2
 1727 080c 00C0      		rjmp .L188
 1728               		.stabn	68,0,377,.LM237-.LFBB11
 1729               	.LM237:
 1730 080e 2091 0000 		lds r18,bit4
 1731 0812 2111      		cpse r18,__zero_reg__
 1732 0814 00C0      		rjmp .L261
 1733               	.L189:
 378:main.cpp      ****         {
 379:main.cpp      ****             //faireSon(0); 
 380:main.cpp      ****            moteur.Avance(95);
 381:main.cpp      ****            _delay_ms(950);
 382:main.cpp      ****            lireDirection();
 383:main.cpp      ****            
 384:main.cpp      ****            if (bit1 || bit2 || bit3 || bit4 || bit5)	//Si tu vois la ligne, continue
 385:main.cpp      ****            {
 386:main.cpp      **** 		nbCarre++;
 387:main.cpp      ****                 //del.allumerRouge(0);
 388:main.cpp      **** 		if(nbCarre == 3)
 389:main.cpp      **** 		{
 390:main.cpp      **** 			moteur.pivotDroit(95);
 391:main.cpp      **** 			_delay_ms(1000);
 392:main.cpp      **** 			while(!bit3)
 393:main.cpp      ****                         {
 394:main.cpp      ****                             moteur.pivotDroit(95);
 395:main.cpp      ****                             lireDirection();
 396:main.cpp      ****                         }
 397:main.cpp      **** 		}
 398:main.cpp      **** 				
 399:main.cpp      ****             }
 400:main.cpp      ****             else 		//Si tu vois rien, tourne le coin
 401:main.cpp      ****             {
 402:main.cpp      ****                nbCarre = 0;
 403:main.cpp      ****                 while(!bit3)
 404:main.cpp      ****                 {
 405:main.cpp      ****                     moteur.pivotDroit(85);
 406:main.cpp      ****                     lireDirection();
 407:main.cpp      ****                 }
 408:main.cpp      ****                 petitSkip = 0;
 409:main.cpp      ****             }
 410:main.cpp      ****         }
 411:main.cpp      ****         /*else if(bit1 && bit2 && bit3 && !(bit4) && !(bit5)) // 1 1 1 0 0
 412:main.cpp      ****         {
 413:main.cpp      ****             moteur.pivotGauche(95);
 414:main.cpp      ****            _delay_ms(100);
 415:main.cpp      ****         }*/
 416:main.cpp      ****         else if (!bit1 && !bit2 && !bit3 && !bit4 && bit5) //0 0 0 0 1
 1734               		.stabn	68,0,416,.LM238-.LFBB11
 1735               	.LM238:
 1736 0816 9111      		cpse r25,__zero_reg__
 1737 0818 00C0      		rjmp .L205
GAS LISTING /tmp/ccQaABxv.s 			page 43


 417:main.cpp      ****         {
 418:main.cpp      ****             moteur.pivotDroit(95);
 419:main.cpp      ****         }
 420:main.cpp      ****         else if (!bit1 && !bit2 && !bit3 && bit4 && bit5) //0 0 0 1 1
 421:main.cpp      ****         {
 422:main.cpp      ****             moteur.Tourner_Droite(120);
 423:main.cpp      ****         }
 424:main.cpp      ****         else if (!bit1 && !bit2 && !bit3 && bit4 && !(bit5)) // 0 0 0 1 0
 425:main.cpp      ****         {
 426:main.cpp      ****             moteur.Tourner_Droite(95);
 427:main.cpp      ****         }
 428:main.cpp      ****         
 429:main.cpp      **** 	else if (!(bit1) && !(bit2) && bit3 && !bit4 && !bit5) // 0 0 1 0 0
 1738               		.stabn	68,0,429,.LM239-.LFBB11
 1739               	.LM239:
 1740 081a 8091 0000 		lds r24,bit5
 1741 081e 2111      		cpse r18,__zero_reg__
 1742 0820 00C0      		rjmp .L252
 1743               		.stabn	68,0,429,.LM240-.LFBB11
 1744               	.LM240:
 1745 0822 8111      		cpse r24,__zero_reg__
 1746 0824 00C0      		rjmp .L174
 1747               	.L183:
 363:main.cpp      ****     }
 1748               		.stabn	68,0,363,.LM241-.LFBB11
 1749               	.LM241:
 1750 0826 6FE5      		ldi r22,lo8(95)
 1751 0828 70E0      		ldi r23,0
 1752 082a 80E0      		ldi r24,lo8(moteur)
 1753 082c 90E0      		ldi r25,hi8(moteur)
 1754 082e 0C94 0000 		jmp _ZN3Pwm6AvanceEj
 1755               	.L177:
 365:main.cpp      ****         {
 1756               		.stabn	68,0,365,.LM242-.LFBB11
 1757               	.LM242:
 1758 0832 8111      		cpse r24,__zero_reg__
 1759 0834 00C0      		rjmp .L174
 1760               	.L235:
 365:main.cpp      ****         {
 1761               		.stabn	68,0,365,.LM243-.LFBB11
 1762               	.LM243:
 1763 0836 8091 0000 		lds r24,bit4
 1764 083a 8111      		cpse r24,__zero_reg__
 1765 083c 00C0      		rjmp .L174
 365:main.cpp      ****         {
 1766               		.stabn	68,0,365,.LM244-.LFBB11
 1767               	.LM244:
 1768 083e 8091 0000 		lds r24,bit5
 1769 0842 8111      		cpse r24,__zero_reg__
 1770 0844 00C0      		rjmp .L174
 367:main.cpp      ****         }
 1771               		.stabn	68,0,367,.LM245-.LFBB11
 1772               	.LM245:
 1773 0846 68E7      		ldi r22,lo8(120)
 1774 0848 70E0      		ldi r23,0
 1775 084a 00C0      		rjmp .L257
 1776               	.L176:
GAS LISTING /tmp/ccQaABxv.s 			page 44


 369:main.cpp      ****         {
 1777               		.stabn	68,0,369,.LM246-.LFBB11
 1778               	.LM246:
 1779 084c 8111      		cpse r24,__zero_reg__
 1780 084e 00C0      		rjmp .L174
 369:main.cpp      ****         {
 1781               		.stabn	68,0,369,.LM247-.LFBB11
 1782               	.LM247:
 1783 0850 8091 0000 		lds r24,bit4
 1784 0854 8111      		cpse r24,__zero_reg__
 1785 0856 00C0      		rjmp .L174
 369:main.cpp      ****         {
 1786               		.stabn	68,0,369,.LM248-.LFBB11
 1787               	.LM248:
 1788 0858 8091 0000 		lds r24,bit5
 1789 085c 8111      		cpse r24,__zero_reg__
 1790 085e 00C0      		rjmp .L174
 371:main.cpp      ****         }
 1791               		.stabn	68,0,371,.LM249-.LFBB11
 1792               	.LM249:
 1793 0860 6FE5      		ldi r22,lo8(95)
 1794 0862 70E0      		ldi r23,0
 1795 0864 80E0      		ldi r24,lo8(moteur)
 1796 0866 90E0      		ldi r25,hi8(moteur)
 1797 0868 0C94 0000 		jmp _ZN3Pwm11pivotGaucheEj
 1798               	.L260:
 373:main.cpp      ****         {
 1799               		.stabn	68,0,373,.LM250-.LFBB11
 1800               	.LM250:
 1801 086c 8111      		cpse r24,__zero_reg__
 1802 086e 00C0      		rjmp .L187
 373:main.cpp      ****         {
 1803               		.stabn	68,0,373,.LM251-.LFBB11
 1804               	.LM251:
 1805 0870 8091 0000 		lds r24,bit4
 1806 0874 8111      		cpse r24,__zero_reg__
 1807 0876 00C0      		rjmp .L188
 373:main.cpp      ****         {
 1808               		.stabn	68,0,373,.LM252-.LFBB11
 1809               	.LM252:
 1810 0878 8091 0000 		lds r24,bit5
 1811 087c 8111      		cpse r24,__zero_reg__
 1812 087e 00C0      		rjmp .L188
 1813               	.L201:
 375:main.cpp      ****         }
 1814               		.stabn	68,0,375,.LM253-.LFBB11
 1815               	.LM253:
 1816 0880 6FE5      		ldi r22,lo8(95)
 1817 0882 70E0      		ldi r23,0
 1818               	.L257:
 1819 0884 80E0      		ldi r24,lo8(moteur)
 1820 0886 90E0      		ldi r25,hi8(moteur)
 1821 0888 0C94 0000 		jmp _ZN3Pwm14Tourner_GaucheEj
 1822               	.L261:
 377:main.cpp      ****         {
 1823               		.stabn	68,0,377,.LM254-.LFBB11
 1824               	.LM254:
GAS LISTING /tmp/ccQaABxv.s 			page 45


 1825 088c 3091 0000 		lds r19,bit5
 1826 0890 3323      		tst r19
 1827 0892 01F4      		brne .+2
 1828 0894 00C0      		rjmp .L189
 380:main.cpp      ****            _delay_ms(950);
 1829               		.stabn	68,0,380,.LM255-.LFBB11
 1830               	.LM255:
 1831 0896 6FE5      		ldi r22,lo8(95)
 1832 0898 70E0      		ldi r23,0
 1833 089a 80E0      		ldi r24,lo8(moteur)
 1834 089c 90E0      		ldi r25,hi8(moteur)
 1835 089e 0E94 0000 		call _ZN3Pwm6AvanceEj
 1836               	.LBB83:
 1837               	.LBB84:
 1838               		.stabs	"/usr/avr/include/util/delay.h",132,0,0,.Ltext17
 1839               	.Ltext17:
 1840               		.stabn	68,0,164,.LM256-.LFBB11
 1841               	.LM256:
 1842 08a2 2FE7      		ldi r18,lo8(1519999)
 1843 08a4 81E3      		ldi r24,hi8(1519999)
 1844 08a6 97E1      		ldi r25,hlo8(1519999)
 1845 08a8 2150      		1: subi r18,1
 1846 08aa 8040      		sbci r24,0
 1847 08ac 9040      		sbci r25,0
 1848 08ae 01F4      		brne 1b
 1849 08b0 00C0      		rjmp .
 1850 08b2 0000      		nop
 1851               	.LBE84:
 1852               	.LBE83:
 1853               		.stabs	"main.cpp",132,0,0,.Ltext18
 1854               	.Ltext18:
 382:main.cpp      ****            
 1855               		.stabn	68,0,382,.LM257-.LFBB11
 1856               	.LM257:
 1857 08b4 0E94 0000 		call _Z13lireDirectionv
 384:main.cpp      ****            {
 1858               		.stabn	68,0,384,.LM258-.LFBB11
 1859               	.LM258:
 1860 08b8 8091 0000 		lds r24,bit1
 1861 08bc 8111      		cpse r24,__zero_reg__
 1862 08be 00C0      		rjmp .L190
 384:main.cpp      ****            {
 1863               		.stabn	68,0,384,.LM259-.LFBB11
 1864               	.LM259:
 1865 08c0 8091 0000 		lds r24,bit2
 1866 08c4 8111      		cpse r24,__zero_reg__
 1867 08c6 00C0      		rjmp .L190
 384:main.cpp      ****            {
 1868               		.stabn	68,0,384,.LM260-.LFBB11
 1869               	.LM260:
 1870 08c8 8091 0000 		lds r24,bit3
 1871 08cc 8111      		cpse r24,__zero_reg__
 1872 08ce 00C0      		rjmp .L190
 384:main.cpp      ****            {
 1873               		.stabn	68,0,384,.LM261-.LFBB11
 1874               	.LM261:
 1875 08d0 8091 0000 		lds r24,bit4
GAS LISTING /tmp/ccQaABxv.s 			page 46


 1876 08d4 8111      		cpse r24,__zero_reg__
 1877 08d6 00C0      		rjmp .L190
 384:main.cpp      ****            {
 1878               		.stabn	68,0,384,.LM262-.LFBB11
 1879               	.LM262:
 1880 08d8 8091 0000 		lds r24,bit5
 1881 08dc 8823      		tst r24
 1882 08de 01F0      		breq .L191
 1883               	.L190:
 386:main.cpp      ****                 //del.allumerRouge(0);
 1884               		.stabn	68,0,386,.LM263-.LFBB11
 1885               	.LM263:
 1886 08e0 8091 0000 		lds r24,nbCarre
 1887 08e4 8F5F      		subi r24,lo8(-(1))
 1888 08e6 8093 0000 		sts nbCarre,r24
 388:main.cpp      **** 		{
 1889               		.stabn	68,0,388,.LM264-.LFBB11
 1890               	.LM264:
 1891 08ea 8330      		cpi r24,lo8(3)
 1892 08ec 01F0      		breq .+2
 1893 08ee 00C0      		rjmp .L174
 390:main.cpp      **** 			_delay_ms(1000);
 1894               		.stabn	68,0,390,.LM265-.LFBB11
 1895               	.LM265:
 1896 08f0 6FE5      		ldi r22,lo8(95)
 1897 08f2 70E0      		ldi r23,0
 1898 08f4 80E0      		ldi r24,lo8(moteur)
 1899 08f6 90E0      		ldi r25,hi8(moteur)
 1900 08f8 0E94 0000 		call _ZN3Pwm10pivotDroitEj
 1901               	.LBB85:
 1902               	.LBB86:
 1903               		.stabs	"/usr/avr/include/util/delay.h",132,0,0,.Ltext19
 1904               	.Ltext19:
 1905               		.stabn	68,0,164,.LM266-.LFBB11
 1906               	.LM266:
 1907 08fc 2FEF      		ldi r18,lo8(1599999)
 1908 08fe 89E6      		ldi r24,hi8(1599999)
 1909 0900 98E1      		ldi r25,hlo8(1599999)
 1910 0902 2150      		1: subi r18,1
 1911 0904 8040      		sbci r24,0
 1912 0906 9040      		sbci r25,0
 1913 0908 01F4      		brne 1b
 1914 090a 00C0      		rjmp .
 1915 090c 0000      		nop
 1916               	.L192:
 1917               	.LBE86:
 1918               	.LBE85:
 1919               		.stabs	"main.cpp",132,0,0,.Ltext20
 1920               	.Ltext20:
 392:main.cpp      ****                         {
 1921               		.stabn	68,0,392,.LM267-.LFBB11
 1922               	.LM267:
 1923 090e 8091 0000 		lds r24,bit3
 1924 0912 8111      		cpse r24,__zero_reg__
 1925 0914 00C0      		rjmp .L262
 394:main.cpp      ****                             lireDirection();
 1926               		.stabn	68,0,394,.LM268-.LFBB11
GAS LISTING /tmp/ccQaABxv.s 			page 47


 1927               	.LM268:
 1928 0916 6FE5      		ldi r22,lo8(95)
 1929 0918 70E0      		ldi r23,0
 1930 091a 80E0      		ldi r24,lo8(moteur)
 1931 091c 90E0      		ldi r25,hi8(moteur)
 1932 091e 0E94 0000 		call _ZN3Pwm10pivotDroitEj
 395:main.cpp      ****                         }
 1933               		.stabn	68,0,395,.LM269-.LFBB11
 1934               	.LM269:
 1935 0922 0E94 0000 		call _Z13lireDirectionv
 1936 0926 00C0      		rjmp .L192
 1937               	.L262:
 1938 0928 0895      		ret
 1939               	.L191:
 402:main.cpp      ****                 while(!bit3)
 1940               		.stabn	68,0,402,.LM270-.LFBB11
 1941               	.LM270:
 1942 092a 1092 0000 		sts nbCarre,__zero_reg__
 1943               	.L194:
 403:main.cpp      ****                 {
 1944               		.stabn	68,0,403,.LM271-.LFBB11
 1945               	.LM271:
 1946 092e 8091 0000 		lds r24,bit3
 1947 0932 8111      		cpse r24,__zero_reg__
 1948 0934 00C0      		rjmp .L263
 405:main.cpp      ****                     lireDirection();
 1949               		.stabn	68,0,405,.LM272-.LFBB11
 1950               	.LM272:
 1951 0936 65E5      		ldi r22,lo8(85)
 1952 0938 70E0      		ldi r23,0
 1953 093a 80E0      		ldi r24,lo8(moteur)
 1954 093c 90E0      		ldi r25,hi8(moteur)
 1955 093e 0E94 0000 		call _ZN3Pwm10pivotDroitEj
 406:main.cpp      ****                 }
 1956               		.stabn	68,0,406,.LM273-.LFBB11
 1957               	.LM273:
 1958 0942 0E94 0000 		call _Z13lireDirectionv
 1959 0946 00C0      		rjmp .L194
 1960               	.L263:
 408:main.cpp      ****             }
 1961               		.stabn	68,0,408,.LM274-.LFBB11
 1962               	.LM274:
 1963 0948 1092 0000 		sts petitSkip,__zero_reg__
 1964 094c 0895      		ret
 1965               	.L188:
 416:main.cpp      ****         {
 1966               		.stabn	68,0,416,.LM275-.LFBB11
 1967               	.LM275:
 1968 094e 9111      		cpse r25,__zero_reg__
 1969 0950 00C0      		rjmp .L174
 416:main.cpp      ****         {
 1970               		.stabn	68,0,416,.LM276-.LFBB11
 1971               	.LM276:
 1972 0952 8091 0000 		lds r24,bit4
 1973 0956 8111      		cpse r24,__zero_reg__
 1974 0958 00C0      		rjmp .L251
 416:main.cpp      ****         {
GAS LISTING /tmp/ccQaABxv.s 			page 48


 1975               		.stabn	68,0,416,.LM277-.LFBB11
 1976               	.LM277:
 1977 095a 8091 0000 		lds r24,bit5
 1978 095e 8823      		tst r24
 1979 0960 01F0      		breq .L236
 418:main.cpp      ****         }
 1980               		.stabn	68,0,418,.LM278-.LFBB11
 1981               	.LM278:
 1982 0962 6FE5      		ldi r22,lo8(95)
 1983 0964 70E0      		ldi r23,0
 1984 0966 80E0      		ldi r24,lo8(moteur)
 1985 0968 90E0      		ldi r25,hi8(moteur)
 1986 096a 0C94 0000 		jmp _ZN3Pwm10pivotDroitEj
 1987               	.L251:
 420:main.cpp      ****         {
 1988               		.stabn	68,0,420,.LM279-.LFBB11
 1989               	.LM279:
 1990 096e 8091 0000 		lds r24,bit5
 1991 0972 8823      		tst r24
 1992 0974 01F0      		breq .L202
 422:main.cpp      ****         }
 1993               		.stabn	68,0,422,.LM280-.LFBB11
 1994               	.LM280:
 1995 0976 68E7      		ldi r22,lo8(120)
 1996 0978 70E0      		ldi r23,0
 1997 097a 00C0      		rjmp .L258
 1998               	.L252:
 430:main.cpp      **** 	{
 431:main.cpp      **** 		moteur.Avance(95);
 432:main.cpp      **** 	}
 433:main.cpp      **** 	else if (!bit1 && bit2 && bit3 && !bit4 && !bit5) //0 1 1 0 0
 434:main.cpp      **** 	{
 435:main.cpp      **** 		moteur.Tourner_Gauche(95);
 436:main.cpp      **** 	}
 437:main.cpp      **** 	else if (!bit1 && !bit2 && bit3 && bit4 && !bit5) // 0 0 1 1 0
 1999               		.stabn	68,0,437,.LM281-.LFBB11
 2000               	.LM281:
 2001 097c 8111      		cpse r24,__zero_reg__
 2002 097e 00C0      		rjmp .L174
 2003               	.L202:
 426:main.cpp      ****         }
 2004               		.stabn	68,0,426,.LM282-.LFBB11
 2005               	.LM282:
 2006 0980 6FE5      		ldi r22,lo8(95)
 2007 0982 70E0      		ldi r23,0
 2008               	.L258:
 2009 0984 80E0      		ldi r24,lo8(moteur)
 2010 0986 90E0      		ldi r25,hi8(moteur)
 2011 0988 0C94 0000 		jmp _ZN3Pwm14Tourner_DroiteEj
 2012               	.L236:
 438:main.cpp      **** 	{
 439:main.cpp      **** 		moteur.Tourner_Droite(95);
 440:main.cpp      **** 	}   
 441:main.cpp      ****     else if (!bit1 && !bit2 && !bit3 && !bit4 && !bit5)	// 0 0 0 0 0
 2013               		.stabn	68,0,441,.LM283-.LFBB11
 2014               	.LM283:
 2015 098c 8091 0000 		lds r24,bit5
GAS LISTING /tmp/ccQaABxv.s 			page 49


 2016 0990 8111      		cpse r24,__zero_reg__
 2017 0992 00C0      		rjmp .L174
 2018               	.LBB87:
 2019               	.LBB88:
 2020               		.stabs	"/usr/avr/include/util/delay.h",132,0,0,.Ltext21
 2021               	.Ltext21:
 2022               		.stabn	68,0,164,.LM284-.LFBB11
 2023               	.LM284:
 2024 0994 2FEF      		ldi r18,lo8(319999)
 2025 0996 81EE      		ldi r24,hi8(319999)
 2026 0998 94E0      		ldi r25,hlo8(319999)
 2027 099a 2150      		1: subi r18,1
 2028 099c 8040      		sbci r24,0
 2029 099e 9040      		sbci r25,0
 2030 09a0 01F4      		brne 1b
 2031 09a2 00C0      		rjmp .
 2032 09a4 0000      		nop
 2033               	.LBE88:
 2034               	.LBE87:
 2035               		.stabs	"main.cpp",132,0,0,.Ltext22
 2036               	.Ltext22:
 442:main.cpp      **** 	{
 443:main.cpp      **** 		_delay_ms(200);
 444:main.cpp      **** 		lireDirection();
 2037               		.stabn	68,0,444,.LM285-.LFBB11
 2038               	.LM285:
 2039 09a6 0E94 0000 		call _Z13lireDirectionv
 445:main.cpp      **** 		if(!bit1 && !bit2 && !bit3 && !bit4 && !bit5)
 2040               		.stabn	68,0,445,.LM286-.LFBB11
 2041               	.LM286:
 2042 09aa 8091 0000 		lds r24,bit1
 2043 09ae 8111      		cpse r24,__zero_reg__
 2044 09b0 00C0      		rjmp .L174
 2045               		.stabn	68,0,445,.LM287-.LFBB11
 2046               	.LM287:
 2047 09b2 8091 0000 		lds r24,bit2
 2048 09b6 8111      		cpse r24,__zero_reg__
 2049 09b8 00C0      		rjmp .L174
 2050               		.stabn	68,0,445,.LM288-.LFBB11
 2051               	.LM288:
 2052 09ba 8091 0000 		lds r24,bit3
 2053 09be 8111      		cpse r24,__zero_reg__
 2054 09c0 00C0      		rjmp .L174
 2055               		.stabn	68,0,445,.LM289-.LFBB11
 2056               	.LM289:
 2057 09c2 8091 0000 		lds r24,bit4
 2058 09c6 8111      		cpse r24,__zero_reg__
 2059 09c8 00C0      		rjmp .L174
 2060               		.stabn	68,0,445,.LM290-.LFBB11
 2061               	.LM290:
 2062 09ca 8091 0000 		lds r24,bit5
 2063 09ce 8111      		cpse r24,__zero_reg__
 2064 09d0 00C0      		rjmp .L174
 446:main.cpp      **** 		{
 447:main.cpp      **** 			moteur.Avance(95);
 2065               		.stabn	68,0,447,.LM291-.LFBB11
 2066               	.LM291:
GAS LISTING /tmp/ccQaABxv.s 			page 50


 2067 09d2 6FE5      		ldi r22,lo8(95)
 2068 09d4 70E0      		ldi r23,0
 2069 09d6 80E0      		ldi r24,lo8(moteur)
 2070 09d8 90E0      		ldi r25,hi8(moteur)
 2071 09da 0E94 0000 		call _ZN3Pwm6AvanceEj
 2072               	.LBB89:
 2073               	.LBB90:
 2074               		.stabs	"/usr/avr/include/util/delay.h",132,0,0,.Ltext23
 2075               	.Ltext23:
 2076               		.stabn	68,0,164,.LM292-.LFBB11
 2077               	.LM292:
 2078 09de 2FEF      		ldi r18,lo8(959999)
 2079 09e0 85EA      		ldi r24,hi8(959999)
 2080 09e2 9EE0      		ldi r25,hlo8(959999)
 2081 09e4 2150      		1: subi r18,1
 2082 09e6 8040      		sbci r24,0
 2083 09e8 9040      		sbci r25,0
 2084 09ea 01F4      		brne 1b
 2085 09ec 00C0      		rjmp .
 2086 09ee 0000      		nop
 2087               	.LBE90:
 2088               	.LBE89:
 2089               		.stabs	"main.cpp",132,0,0,.Ltext24
 2090               	.Ltext24:
 448:main.cpp      **** 			_delay_ms(600); // Peut-être à augmenter
 449:main.cpp      **** 			lireDirection();
 2091               		.stabn	68,0,449,.LM293-.LFBB11
 2092               	.LM293:
 2093 09f0 0E94 0000 		call _Z13lireDirectionv
 450:main.cpp      ****                         verifierLuminosite();
 2094               		.stabn	68,0,450,.LM294-.LFBB11
 2095               	.LM294:
 2096 09f4 0E94 0000 		call _Z18verifierLuminositev
 451:main.cpp      **** 			if ((!bit1 && !bit2 && !bit3 && !bit4 && !bit5) && rapport > 80) // INTERSECTION
 2097               		.stabn	68,0,451,.LM295-.LFBB11
 2098               	.LM295:
 2099 09f8 9091 0000 		lds r25,bit1
 2100 09fc 8091 0000 		lds r24,rapport
 2101 0a00 9111      		cpse r25,__zero_reg__
 2102 0a02 00C0      		rjmp .L203
 2103               		.stabn	68,0,451,.LM296-.LFBB11
 2104               	.LM296:
 2105 0a04 9091 0000 		lds r25,bit2
 2106 0a08 9111      		cpse r25,__zero_reg__
 2107 0a0a 00C0      		rjmp .L203
 2108               		.stabn	68,0,451,.LM297-.LFBB11
 2109               	.LM297:
 2110 0a0c 9091 0000 		lds r25,bit3
 2111 0a10 9111      		cpse r25,__zero_reg__
 2112 0a12 00C0      		rjmp .L203
 2113               		.stabn	68,0,451,.LM298-.LFBB11
 2114               	.LM298:
 2115 0a14 9091 0000 		lds r25,bit4
 2116 0a18 9111      		cpse r25,__zero_reg__
 2117 0a1a 00C0      		rjmp .L203
 2118               		.stabn	68,0,451,.LM299-.LFBB11
 2119               	.LM299:
GAS LISTING /tmp/ccQaABxv.s 			page 51


 2120 0a1c 9091 0000 		lds r25,bit5
 2121 0a20 9111      		cpse r25,__zero_reg__
 2122 0a22 00C0      		rjmp .L203
 2123               		.stabn	68,0,451,.LM300-.LFBB11
 2124               	.LM300:
 2125 0a24 8135      		cpi r24,lo8(81)
 2126 0a26 00F0      		brlo .L203
 452:main.cpp      ****                             faireIntersection();
 2127               		.stabn	68,0,452,.LM301-.LFBB11
 2128               	.LM301:
 2129 0a28 0C94 0000 		jmp _Z17faireIntersectionv
 2130               	.L203:
 453:main.cpp      **** 
 454:main.cpp      **** 			else if(rapport > 80 && aFaitTriangle)// POINTILLÉS
 2131               		.stabn	68,0,454,.LM302-.LFBB11
 2132               	.LM302:
 2133 0a2c 8135      		cpi r24,lo8(81)
 2134 0a2e 00F0      		brlo .L174
 2135               		.stabn	68,0,454,.LM303-.LFBB11
 2136               	.LM303:
 2137 0a30 8091 0000 		lds r24,aFaitTriangle
 2138 0a34 8823      		tst r24
 2139 0a36 01F0      		breq .L174
 455:main.cpp      ****             {       
 456:main.cpp      **** 				//del.allumerRouge(0);
 457:main.cpp      ****                 petitSkip++; 
 2140               		.stabn	68,0,457,.LM304-.LFBB11
 2141               	.LM304:
 2142 0a38 8091 0000 		lds r24,petitSkip
 2143 0a3c 8F5F      		subi r24,lo8(-(1))
 2144 0a3e 8093 0000 		sts petitSkip,r24
 458:main.cpp      ****                 if(petitSkip == 2)
 2145               		.stabn	68,0,458,.LM305-.LFBB11
 2146               	.LM305:
 2147 0a42 8230      		cpi r24,lo8(2)
 2148 0a44 01F4      		brne .L174
 459:main.cpp      **** 				fairePointilles();     
 2149               		.stabn	68,0,459,.LM306-.LFBB11
 2150               	.LM306:
 2151 0a46 0C94 0000 		jmp _Z15fairePointillesv
 2152               	.L205:
 433:main.cpp      **** 	{
 2153               		.stabn	68,0,433,.LM307-.LFBB11
 2154               	.LM307:
 2155 0a4a 8823      		tst r24
 2156 0a4c 01F0      		breq .L174
 433:main.cpp      **** 	{
 2157               		.stabn	68,0,433,.LM308-.LFBB11
 2158               	.LM308:
 2159 0a4e 8091 0000 		lds r24,bit5
 2160 0a52 2111      		cpse r18,__zero_reg__
 2161 0a54 00C0      		rjmp .L253
 433:main.cpp      **** 	{
 2162               		.stabn	68,0,433,.LM309-.LFBB11
 2163               	.LM309:
 2164 0a56 8111      		cpse r24,__zero_reg__
 2165 0a58 00C0      		rjmp .L174
GAS LISTING /tmp/ccQaABxv.s 			page 52


 2166 0a5a 00C0      		rjmp .L201
 2167               	.L253:
 460:main.cpp      ****             }
 461:main.cpp      ****                             
 462:main.cpp      ****         }
 463:main.cpp      **** 			
 464:main.cpp      ****     }
 465:main.cpp      ****         else if(!bit1 && bit2 && bit3 && bit4 && !bit5) // Essai pour gerer l'intersection en trian
 2168               		.stabn	68,0,465,.LM310-.LFBB11
 2169               	.LM310:
 2170 0a5c 8111      		cpse r24,__zero_reg__
 2171 0a5e 00C0      		rjmp .L174
 466:main.cpp      ****         {
 467:main.cpp      ****                 faireIntersectionTriangle();
 2172               		.stabn	68,0,467,.LM311-.LFBB11
 2173               	.LM311:
 2174 0a60 0C94 0000 		jmp _Z25faireIntersectionTrianglev
 2175               	.L174:
 2176 0a64 0895      		ret
 2177               		.size	_Z11suivreLignev, .-_Z11suivreLignev
 2178               	.Lscope11:
 2179               		.stabs	"",36,0,0,.Lscope11-.LFBB11
 2180               		.stabd	78,0,0
 2181               		.section	.text.startup,"ax",@progbits
 2182               		.stabs	"main:F(0,9)",36,0,477,main
 2183               	.global	main
 2184               		.type	main, @function
 2185               	main:
 2186               		.stabd	46,0,0
 468:main.cpp      ****         }
 469:main.cpp      ****         /*else
 470:main.cpp      ****         {
 471:main.cpp      ****             del.allumerRouge(0);
 472:main.cpp      ****         }*/
 473:main.cpp      **** }
 474:main.cpp      **** 
 475:main.cpp      **** 
 476:main.cpp      **** 
 477:main.cpp      **** int main()
 478:main.cpp      **** {
 2187               		.stabn	68,0,478,.LM312-.LFBB12
 2188               	.LM312:
 2189               	.LFBB12:
 2190               	/* prologue: function */
 2191               	/* frame size = 0 */
 2192               	/* stack size = 0 */
 2193               	.L__stack_usage = 0
 479:main.cpp      ****     DDRB = 0b11111100;
 2194               		.stabn	68,0,479,.LM313-.LFBB12
 2195               	.LM313:
 2196 0000 8CEF      		ldi r24,lo8(-4)
 2197 0002 84B9      		out 0x4,r24
 480:main.cpp      ****     DDRD = 0b11110000;
 2198               		.stabn	68,0,480,.LM314-.LFBB12
 2199               	.LM314:
 2200 0004 80EF      		ldi r24,lo8(-16)
 2201 0006 8AB9      		out 0xa,r24
GAS LISTING /tmp/ccQaABxv.s 			page 53


 481:main.cpp      ****     DDRC = 0x00;
 2202               		.stabn	68,0,481,.LM315-.LFBB12
 2203               	.LM315:
 2204 0008 17B8      		out 0x7,__zero_reg__
 482:main.cpp      ****     DDRA = 0x0F;
 2205               		.stabn	68,0,482,.LM316-.LFBB12
 2206               	.LM316:
 2207 000a 8FE0      		ldi r24,lo8(15)
 2208 000c 81B9      		out 0x1,r24
 483:main.cpp      **** 
 484:main.cpp      ****     
 485:main.cpp      **** ///////////// BOUTONS DE DIRECTION ///////////////
 486:main.cpp      ****   
 487:main.cpp      ****     
 488:main.cpp      ****     
 489:main.cpp      **** 	while (compteur<3) 
 490:main.cpp      ****         {
 491:main.cpp      **** 			if (!(PINB & 0x01)) { 	//bouton droit
 492:main.cpp      **** 				_delay_ms(10);
 493:main.cpp      **** 				if(!(PINB & 0x01)){
 494:main.cpp      **** 					enfonceDroit = true;
 495:main.cpp      ****                                         PORTA = 0b1000;
 496:main.cpp      **** 					_delay_ms(10);
 497:main.cpp      **** 				}
 498:main.cpp      **** 			}
 499:main.cpp      **** 			else if (!(PINB & 0x02)) 
 500:main.cpp      ****                         { 		//bouton gauche
 501:main.cpp      **** 				_delay_ms(10);
 502:main.cpp      **** 				if(!(PINB & 0x02))
 503:main.cpp      ****                                 {
 504:main.cpp      **** 					enfonceGauche = true;
 505:main.cpp      ****                                          PORTA = 0b0100;
 506:main.cpp      **** 					_delay_ms(10);
 507:main.cpp      **** 				}
 508:main.cpp      **** 			}
 509:main.cpp      **** 			else if(enfonceDroit)
 510:main.cpp      ****                         {
 511:main.cpp      ****                             enfonceDroit = false;
 512:main.cpp      ****                             PORTA = 0x00;
 513:main.cpp      ****                             directions[compteur] = 'g';
 514:main.cpp      ****                             compteur++;
 515:main.cpp      ****                         }
 516:main.cpp      **** 			else if(enfonceGauche)
 517:main.cpp      ****                         {
 518:main.cpp      ****                             enfonceGauche = false;
 519:main.cpp      ****                             PORTA = 0x00;
 520:main.cpp      ****                             directions[compteur] = 'd';
 2209               		.stabn	68,0,520,.LM317-.LFBB12
 2210               	.LM317:
 2211 000e 24E6      		ldi r18,lo8(100)
 513:main.cpp      ****                             compteur++;
 2212               		.stabn	68,0,513,.LM318-.LFBB12
 2213               	.LM318:
 2214 0010 37E6      		ldi r19,lo8(103)
 504:main.cpp      ****                                          PORTA = 0b0100;
 2215               		.stabn	68,0,504,.LM319-.LFBB12
 2216               	.LM319:
GAS LISTING /tmp/ccQaABxv.s 			page 54


 2217 0012 91E0      		ldi r25,lo8(1)
 505:main.cpp      **** 					_delay_ms(10);
 2218               		.stabn	68,0,505,.LM320-.LFBB12
 2219               	.LM320:
 2220 0014 44E0      		ldi r20,lo8(4)
 495:main.cpp      **** 					_delay_ms(10);
 2221               		.stabn	68,0,495,.LM321-.LFBB12
 2222               	.LM321:
 2223 0016 58E0      		ldi r21,lo8(8)
 2224               	.L265:
 489:main.cpp      ****         {
 2225               		.stabn	68,0,489,.LM322-.LFBB12
 2226               	.LM322:
 2227 0018 8091 0000 		lds r24,compteur
 2228 001c 8330      		cpi r24,lo8(3)
 2229 001e 00F0      		brlo .+2
 2230 0020 00C0      		rjmp .L280
 491:main.cpp      **** 				_delay_ms(10);
 2231               		.stabn	68,0,491,.LM323-.LFBB12
 2232               	.LM323:
 2233 0022 1899      		sbic 0x3,0
 2234 0024 00C0      		rjmp .L266
 2235               	.LBB103:
 2236               	.LBB104:
 2237               		.stabs	"/usr/avr/include/util/delay.h",132,0,0,.Ltext25
 2238               	.Ltext25:
 2239               		.stabn	68,0,164,.LM324-.LFBB12
 2240               	.LM324:
 2241 0026 EFE1      		ldi r30,lo8(19999)
 2242 0028 FEE4      		ldi r31,hi8(19999)
 2243 002a 3197      		1: sbiw r30,1
 2244 002c 01F4      		brne 1b
 2245 002e 00C0      		rjmp .
 2246 0030 0000      		nop
 2247               	.LBE104:
 2248               	.LBE103:
 2249               		.stabs	"main.cpp",132,0,0,.Ltext26
 2250               	.Ltext26:
 493:main.cpp      **** 					enfonceDroit = true;
 2251               		.stabn	68,0,493,.LM325-.LFBB12
 2252               	.LM325:
 2253 0032 1899      		sbic 0x3,0
 2254 0034 00C0      		rjmp .L265
 494:main.cpp      ****                                         PORTA = 0b1000;
 2255               		.stabn	68,0,494,.LM326-.LFBB12
 2256               	.LM326:
 2257 0036 9093 0000 		sts enfonceDroit,r25
 495:main.cpp      **** 					_delay_ms(10);
 2258               		.stabn	68,0,495,.LM327-.LFBB12
 2259               	.LM327:
 2260 003a 52B9      		out 0x2,r21
 2261 003c 00C0      		rjmp .L278
 2262               	.L266:
 499:main.cpp      ****                         { 		//bouton gauche
 2263               		.stabn	68,0,499,.LM328-.LFBB12
 2264               	.LM328:
 2265 003e 1999      		sbic 0x3,1
GAS LISTING /tmp/ccQaABxv.s 			page 55


 2266 0040 00C0      		rjmp .L269
 2267               	.LBB105:
 2268               	.LBB106:
 2269               		.stabs	"/usr/avr/include/util/delay.h",132,0,0,.Ltext27
 2270               	.Ltext27:
 2271               		.stabn	68,0,164,.LM329-.LFBB12
 2272               	.LM329:
 2273 0042 EFE1      		ldi r30,lo8(19999)
 2274 0044 FEE4      		ldi r31,hi8(19999)
 2275 0046 3197      		1: sbiw r30,1
 2276 0048 01F4      		brne 1b
 2277 004a 00C0      		rjmp .
 2278 004c 0000      		nop
 2279               	.LBE106:
 2280               	.LBE105:
 2281               		.stabs	"main.cpp",132,0,0,.Ltext28
 2282               	.Ltext28:
 502:main.cpp      ****                                 {
 2283               		.stabn	68,0,502,.LM330-.LFBB12
 2284               	.LM330:
 2285 004e 1999      		sbic 0x3,1
 2286 0050 00C0      		rjmp .L265
 504:main.cpp      ****                                          PORTA = 0b0100;
 2287               		.stabn	68,0,504,.LM331-.LFBB12
 2288               	.LM331:
 2289 0052 9093 0000 		sts enfonceGauche,r25
 505:main.cpp      **** 					_delay_ms(10);
 2290               		.stabn	68,0,505,.LM332-.LFBB12
 2291               	.LM332:
 2292 0056 42B9      		out 0x2,r20
 2293               	.L278:
 2294               	.LBB107:
 2295               	.LBB108:
 2296               		.stabs	"/usr/avr/include/util/delay.h",132,0,0,.Ltext29
 2297               	.Ltext29:
 2298               		.stabn	68,0,164,.LM333-.LFBB12
 2299               	.LM333:
 2300 0058 EFE1      		ldi r30,lo8(19999)
 2301 005a FEE4      		ldi r31,hi8(19999)
 2302 005c 3197      		1: sbiw r30,1
 2303 005e 01F4      		brne 1b
 2304 0060 00C0      		rjmp .
 2305 0062 0000      		nop
 2306 0064 00C0      		rjmp .L265
 2307               	.L269:
 2308               	.LBE108:
 2309               	.LBE107:
 2310               		.stabs	"main.cpp",132,0,0,.Ltext30
 2311               	.Ltext30:
 509:main.cpp      ****                         {
 2312               		.stabn	68,0,509,.LM334-.LFBB12
 2313               	.LM334:
 2314 0066 8091 0000 		lds r24,enfonceDroit
 2315 006a 8823      		tst r24
 2316 006c 01F0      		breq .L271
 511:main.cpp      ****                             PORTA = 0x00;
 2317               		.stabn	68,0,511,.LM335-.LFBB12
GAS LISTING /tmp/ccQaABxv.s 			page 56


 2318               	.LM335:
 2319 006e 1092 0000 		sts enfonceDroit,__zero_reg__
 512:main.cpp      ****                             directions[compteur] = 'g';
 2320               		.stabn	68,0,512,.LM336-.LFBB12
 2321               	.LM336:
 2322 0072 12B8      		out 0x2,__zero_reg__
 513:main.cpp      ****                             compteur++;
 2323               		.stabn	68,0,513,.LM337-.LFBB12
 2324               	.LM337:
 2325 0074 8091 0000 		lds r24,compteur
 2326 0078 E82F      		mov r30,r24
 2327 007a F0E0      		ldi r31,0
 2328 007c E050      		subi r30,lo8(-(directions))
 2329 007e F040      		sbci r31,hi8(-(directions))
 2330 0080 3083      		st Z,r19
 2331 0082 00C0      		rjmp .L279
 2332               	.L271:
 516:main.cpp      ****                         {
 2333               		.stabn	68,0,516,.LM338-.LFBB12
 2334               	.LM338:
 2335 0084 8091 0000 		lds r24,enfonceGauche
 2336 0088 8823      		tst r24
 2337 008a 01F0      		breq .L265
 518:main.cpp      ****                             PORTA = 0x00;
 2338               		.stabn	68,0,518,.LM339-.LFBB12
 2339               	.LM339:
 2340 008c 1092 0000 		sts enfonceGauche,__zero_reg__
 519:main.cpp      ****                             directions[compteur] = 'd';
 2341               		.stabn	68,0,519,.LM340-.LFBB12
 2342               	.LM340:
 2343 0090 12B8      		out 0x2,__zero_reg__
 2344               		.stabn	68,0,520,.LM341-.LFBB12
 2345               	.LM341:
 2346 0092 8091 0000 		lds r24,compteur
 2347 0096 E82F      		mov r30,r24
 2348 0098 F0E0      		ldi r31,0
 2349 009a E050      		subi r30,lo8(-(directions))
 2350 009c F040      		sbci r31,hi8(-(directions))
 2351 009e 2083      		st Z,r18
 2352               	.L279:
 521:main.cpp      ****                             compteur++;
 2353               		.stabn	68,0,521,.LM342-.LFBB12
 2354               	.LM342:
 2355 00a0 8F5F      		subi r24,lo8(-(1))
 2356 00a2 8093 0000 		sts compteur,r24
 2357 00a6 00C0      		rjmp .L265
 2358               	.L280:
 522:main.cpp      ****                         }
 523:main.cpp      **** 				
 524:main.cpp      ****         }
 525:main.cpp      **** 
 526:main.cpp      **** 	
 527:main.cpp      **** 		
 528:main.cpp      **** 	
 529:main.cpp      **** ////////////// FIN DE DETECTION DE BOUTONS /////////////////////
 530:main.cpp      ****  
 531:main.cpp      ****  
GAS LISTING /tmp/ccQaABxv.s 			page 57


 532:main.cpp      ****  
 533:main.cpp      ****     compteur = 0;
 2359               		.stabn	68,0,533,.LM343-.LFBB12
 2360               	.LM343:
 2361 00a8 1092 0000 		sts compteur,__zero_reg__
 534:main.cpp      ****     moteur.Avance(205);
 2362               		.stabn	68,0,534,.LM344-.LFBB12
 2363               	.LM344:
 2364 00ac 6DEC      		ldi r22,lo8(-51)
 2365 00ae 70E0      		ldi r23,0
 2366 00b0 80E0      		ldi r24,lo8(moteur)
 2367 00b2 90E0      		ldi r25,hi8(moteur)
 2368 00b4 0E94 0000 		call _ZN3Pwm6AvanceEj
 2369               	.LBB109:
 2370               	.LBB110:
 2371               		.stabs	"/usr/avr/include/util/delay.h",132,0,0,.Ltext31
 2372               	.Ltext31:
 2373               		.stabn	68,0,164,.LM345-.LFBB12
 2374               	.LM345:
 2375 00b8 FFEF      		ldi r31,lo8(319999)
 2376 00ba 21EE      		ldi r18,hi8(319999)
 2377 00bc 84E0      		ldi r24,hlo8(319999)
 2378 00be F150      		1: subi r31,1
 2379 00c0 2040      		sbci r18,0
 2380 00c2 8040      		sbci r24,0
 2381 00c4 01F4      		brne 1b
 2382 00c6 00C0      		rjmp .
 2383 00c8 0000      		nop
 2384               	.L273:
 2385               	.LBE110:
 2386               	.LBE109:
 2387               		.stabs	"main.cpp",132,0,0,.Ltext32
 2388               	.Ltext32:
 535:main.cpp      ****     _delay_ms(200);
 536:main.cpp      ****     
 537:main.cpp      ****     while (!devraitFinir)
 2389               		.stabn	68,0,537,.LM346-.LFBB12
 2390               	.LM346:
 2391 00ca 8091 0000 		lds r24,devraitFinir
 2392 00ce 8111      		cpse r24,__zero_reg__
 2393 00d0 00C0      		rjmp .L281
 538:main.cpp      ****     {
 539:main.cpp      ****         verifierLuminosite();
 2394               		.stabn	68,0,539,.LM347-.LFBB12
 2395               	.LM347:
 2396 00d2 0E94 0000 		call _Z18verifierLuminositev
 540:main.cpp      ****         lireDirection();
 2397               		.stabn	68,0,540,.LM348-.LFBB12
 2398               	.LM348:
 2399 00d6 0E94 0000 		call _Z13lireDirectionv
 541:main.cpp      ****         suivreLigne();
 2400               		.stabn	68,0,541,.LM349-.LFBB12
 2401               	.LM349:
 2402 00da 0E94 0000 		call _Z11suivreLignev
 2403 00de 00C0      		rjmp .L273
 2404               	.L281:
 542:main.cpp      ****     }
GAS LISTING /tmp/ccQaABxv.s 			page 58


 543:main.cpp      ****     moteur.Avance(0);
 2405               		.stabn	68,0,543,.LM350-.LFBB12
 2406               	.LM350:
 2407 00e0 60E0      		ldi r22,0
 2408 00e2 70E0      		ldi r23,0
 2409 00e4 80E0      		ldi r24,lo8(moteur)
 2410 00e6 90E0      		ldi r25,hi8(moteur)
 2411 00e8 0E94 0000 		call _ZN3Pwm6AvanceEj
 544:main.cpp      ****     del.allumerVert(0);
 2412               		.stabn	68,0,544,.LM351-.LFBB12
 2413               	.LM351:
 2414 00ec 60E0      		ldi r22,0
 2415 00ee 80E0      		ldi r24,lo8(del)
 2416 00f0 90E0      		ldi r25,hi8(del)
 2417 00f2 0E94 0000 		call _ZN3Del11allumerVertEh
 2418               	.LBB111:
 2419               	.LBB112:
  58:main.cpp      ****        }
 2420               		.stabn	68,0,58,.LM352-.LFBB12
 2421               	.LM352:
 2422 00f6 85B5      		in r24,0x25
 2423 00f8 15BC      		out 0x25,__zero_reg__
 2424               	.LBE112:
 2425               	.LBE111:
 545:main.cpp      ****     faireSon(0);
 546:main.cpp      ****  
 547:main.cpp      **** }
 2426               		.stabn	68,0,547,.LM353-.LFBB12
 2427               	.LM353:
 2428 00fa 80E0      		ldi r24,0
 2429 00fc 90E0      		ldi r25,0
 2430 00fe 0895      		ret
 2431               		.size	main, .-main
 2432               	.Lscope12:
 2433               		.stabs	"",36,0,0,.Lscope12-.LFBB12
 2434               		.stabd	78,0,0
 2435               		.stabs	"_GLOBAL__sub_I_bit1:f(0,4)",36,0,547,_GLOBAL__sub_I_bit1
 2436               		.type	_GLOBAL__sub_I_bit1, @function
 2437               	_GLOBAL__sub_I_bit1:
 2438               		.stabd	46,0,0
 2439               		.stabn	68,0,547,.LM354-.LFBB13
 2440               	.LM354:
 2441               	.LFBB13:
 2442               	/* prologue: function */
 2443               	/* frame size = 0 */
 2444               	/* stack size = 0 */
 2445               	.L__stack_usage = 0
 2446               	.LBB115:
 2447               	.LBB116:
  19:main.cpp      **** Pwm moteur;
 2448               		.stabn	68,0,19,.LM355-.LFBB13
 2449               	.LM355:
 2450 0100 80E0      		ldi r24,lo8(del)
 2451 0102 90E0      		ldi r25,hi8(del)
 2452 0104 0E94 0000 		call _ZN3DelC1Ev
  20:main.cpp      **** can intensite;
 2453               		.stabn	68,0,20,.LM356-.LFBB13
GAS LISTING /tmp/ccQaABxv.s 			page 59


 2454               	.LM356:
 2455 0108 80E0      		ldi r24,lo8(moteur)
 2456 010a 90E0      		ldi r25,hi8(moteur)
 2457 010c 0E94 0000 		call _ZN3PwmC1Ev
  21:main.cpp      **** 
 2458               		.stabn	68,0,21,.LM357-.LFBB13
 2459               	.LM357:
 2460 0110 80E0      		ldi r24,lo8(intensite)
 2461 0112 90E0      		ldi r25,hi8(intensite)
 2462 0114 0C94 0000 		jmp _ZN3canC1Ev
 2463               	.LBE116:
 2464               	.LBE115:
 2465               		.size	_GLOBAL__sub_I_bit1, .-_GLOBAL__sub_I_bit1
 2466               	.Lscope13:
 2467               		.stabs	"",36,0,0,.Lscope13-.LFBB13
 2468               		.stabd	78,0,0
 2469               		.global __do_global_ctors
 2470               		.section .ctors,"a",@progbits
 2471               		.p2align	1
 2472 0000 0000      		.word	gs(_GLOBAL__sub_I_bit1)
 2473               		.section	.text.exit,"ax",@progbits
 2474               		.stabs	"_GLOBAL__sub_D_bit1:f(0,4)",36,0,547,_GLOBAL__sub_D_bit1
 2475               		.type	_GLOBAL__sub_D_bit1, @function
 2476               	_GLOBAL__sub_D_bit1:
 2477               		.stabd	46,0,0
 2478               		.stabn	68,0,547,.LM358-.LFBB14
 2479               	.LM358:
 2480               	.LFBB14:
 2481               	/* prologue: function */
 2482               	/* frame size = 0 */
 2483               	/* stack size = 0 */
 2484               	.L__stack_usage = 0
 2485               	.LBB121:
 2486               	.LBB122:
 2487               	.LBB123:
  21:main.cpp      **** 
 2488               		.stabn	68,0,21,.LM359-.LFBB14
 2489               	.LM359:
 2490 0000 80E0      		ldi r24,lo8(intensite)
 2491 0002 90E0      		ldi r25,hi8(intensite)
 2492 0004 0E94 0000 		call _ZN3canD1Ev
  20:main.cpp      **** can intensite;
 2493               		.stabn	68,0,20,.LM360-.LFBB14
 2494               	.LM360:
 2495 0008 80E0      		ldi r24,lo8(moteur)
 2496 000a 90E0      		ldi r25,hi8(moteur)
 2497 000c 0E94 0000 		call _ZN3PwmD1Ev
  19:main.cpp      **** Pwm moteur;
 2498               		.stabn	68,0,19,.LM361-.LFBB14
 2499               	.LM361:
 2500 0010 80E0      		ldi r24,lo8(del)
 2501 0012 90E0      		ldi r25,hi8(del)
 2502 0014 0C94 0000 		jmp _ZN3DelD1Ev
 2503               	.LBE123:
 2504               	.LBE122:
 2505               	.LBE121:
 2506               		.size	_GLOBAL__sub_D_bit1, .-_GLOBAL__sub_D_bit1
GAS LISTING /tmp/ccQaABxv.s 			page 60


 2507               	.Lscope14:
 2508               		.stabs	"",36,0,0,.Lscope14-.LFBB14
 2509               		.stabd	78,0,0
 2510               		.global __do_global_dtors
 2511               		.section .dtors,"a",@progbits
 2512               		.p2align	1
 2513 0000 0000      		.word	gs(_GLOBAL__sub_D_bit1)
 2514               	.global	intensite
 2515               		.section .bss
 2516               		.type	intensite, @object
 2517               		.size	intensite, 1
 2518               	intensite:
 2519 0000 00        		.zero	1
 2520               	.global	moteur
 2521               		.type	moteur, @object
 2522               		.size	moteur, 1
 2523               	moteur:
 2524 0001 00        		.zero	1
 2525               	.global	del
 2526               		.type	del, @object
 2527               		.size	del, 1
 2528               	del:
 2529 0002 00        		.zero	1
 2530               	.global	directions
 2531               		.type	directions, @object
 2532               		.size	directions, 3
 2533               	directions:
 2534 0003 0000 00   		.zero	3
 2535               	.global	nbCarre
 2536               		.type	nbCarre, @object
 2537               		.size	nbCarre, 1
 2538               	nbCarre:
 2539 0006 00        		.zero	1
 2540               	.global	rapport
 2541               		.type	rapport, @object
 2542               		.size	rapport, 1
 2543               	rapport:
 2544 0007 00        		.zero	1
 2545               	.global	petitSkip
 2546               		.type	petitSkip, @object
 2547               		.size	petitSkip, 1
 2548               	petitSkip:
 2549 0008 00        		.zero	1
 2550               	.global	compteur
 2551               		.type	compteur, @object
 2552               		.size	compteur, 1
 2553               	compteur:
 2554 0009 00        		.zero	1
 2555               	.global	devraitFinir
 2556               		.type	devraitFinir, @object
 2557               		.size	devraitFinir, 1
 2558               	devraitFinir:
 2559 000a 00        		.zero	1
 2560               	.global	aFaitTriangle
 2561               		.type	aFaitTriangle, @object
 2562               		.size	aFaitTriangle, 1
 2563               	aFaitTriangle:
GAS LISTING /tmp/ccQaABxv.s 			page 61


 2564 000b 00        		.zero	1
 2565               	.global	enfonceDroit
 2566               		.type	enfonceDroit, @object
 2567               		.size	enfonceDroit, 1
 2568               	enfonceDroit:
 2569 000c 00        		.zero	1
 2570               	.global	enfonceGauche
 2571               		.type	enfonceGauche, @object
 2572               		.size	enfonceGauche, 1
 2573               	enfonceGauche:
 2574 000d 00        		.zero	1
 2575               	.global	bit5
 2576               		.type	bit5, @object
 2577               		.size	bit5, 1
 2578               	bit5:
 2579 000e 00        		.zero	1
 2580               	.global	bit4
 2581               		.type	bit4, @object
 2582               		.size	bit4, 1
 2583               	bit4:
 2584 000f 00        		.zero	1
 2585               	.global	bit3
 2586               		.type	bit3, @object
 2587               		.size	bit3, 1
 2588               	bit3:
 2589 0010 00        		.zero	1
 2590               	.global	bit2
 2591               		.type	bit2, @object
 2592               		.size	bit2, 1
 2593               	bit2:
 2594 0011 00        		.zero	1
 2595               	.global	bit1
 2596               		.type	bit1, @object
 2597               		.size	bit1, 1
 2598               	bit1:
 2599 0012 00        		.zero	1
 2600               		.stabs	"bit1:G(0,54)",32,0,15,0
 2601               		.stabs	"bit2:G(0,54)",32,0,15,0
 2602               		.stabs	"bit3:G(0,54)",32,0,15,0
 2603               		.stabs	"bit4:G(0,54)",32,0,15,0
 2604               		.stabs	"bit5:G(0,54)",32,0,15,0
 2605               		.stabs	"enfonceGauche:G(0,54)",32,0,15,0
 2606               		.stabs	"enfonceDroit:G(0,54)",32,0,15,0
 2607               		.stabs	"aFaitTriangle:G(0,54)",32,0,16,0
 2608               		.stabs	"devraitFinir:G(0,54)",32,0,16,0
 2609               		.stabs	"compteur:G(0,59)",32,0,17,0
 2610               		.stabs	"petitSkip:G(0,59)",32,0,17,0
 2611               		.stabs	"rapport:G(0,59)",32,0,17,0
 2612               		.stabs	"nbCarre:G(0,59)",32,0,17,0
 2613               		.stabs	"directions:G(0,128)=ar(0,129)=r(0,129);0;0177777;;0;2;(0,17)",32,0,18,0
 2614               		.stabs	"del:G(0,98)",32,0,19,0
 2615               		.stabs	"moteur:G(0,123)",32,0,20,0
 2616               		.stabs	"intensite:G(0,105)",32,0,21,0
 2617               		.text
 2618               		.stabs	"",100,0,0,.Letext0
 2619               	.Letext0:
 2620               		.ident	"GCC: (Fedora 4.9.3-1.fc23) 4.9.3"
GAS LISTING /tmp/ccQaABxv.s 			page 62


 2621               	.global __do_clear_bss
GAS LISTING /tmp/ccQaABxv.s 			page 63


DEFINED SYMBOLS
                            *ABS*:0000000000000000 main.cpp
     /tmp/ccQaABxv.s:2      *ABS*:000000000000003e __SP_H__
     /tmp/ccQaABxv.s:3      *ABS*:000000000000003d __SP_L__
     /tmp/ccQaABxv.s:4      *ABS*:000000000000003f __SREG__
     /tmp/ccQaABxv.s:5      *ABS*:0000000000000000 __tmp_reg__
     /tmp/ccQaABxv.s:6      *ABS*:0000000000000001 __zero_reg__
     /tmp/ccQaABxv.s:118    .text:0000000000000000 _Z8faireSonj.part.1
     /tmp/ccQaABxv.s:176    .text:0000000000000054 _Z18verifierLuminositev
     /tmp/ccQaABxv.s:2518   .bss:0000000000000000 intensite
     /tmp/ccQaABxv.s:2543   .bss:0000000000000007 rapport
     /tmp/ccQaABxv.s:217    .text:0000000000000078 _Z22transmissionPcVersUartv
     /tmp/ccQaABxv.s:251    .text:000000000000008a _Z8faireSonj
     /tmp/ccQaABxv.s:279    .text:000000000000009a _Z18initialisationUARTv
     /tmp/ccQaABxv.s:316    .text:00000000000000b8 _Z22transmissionUARTVersPch
     /tmp/ccQaABxv.s:342    .text:00000000000000c6 _Z13lireDirectionv
     /tmp/ccQaABxv.s:2598   .bss:0000000000000012 bit1
     /tmp/ccQaABxv.s:2593   .bss:0000000000000011 bit2
     /tmp/ccQaABxv.s:2588   .bss:0000000000000010 bit3
     /tmp/ccQaABxv.s:2583   .bss:000000000000000f bit4
     /tmp/ccQaABxv.s:2578   .bss:000000000000000e bit5
     /tmp/ccQaABxv.s:390    .text:00000000000000fc _Z15fairePointillesv
     /tmp/ccQaABxv.s:2528   .bss:0000000000000002 del
     /tmp/ccQaABxv.s:2523   .bss:0000000000000001 moteur
     /tmp/ccQaABxv.s:2563   .bss:000000000000000b aFaitTriangle
     /tmp/ccQaABxv.s:2548   .bss:0000000000000008 petitSkip
     /tmp/ccQaABxv.s:686    .text:0000000000000286 _Z17faireIntersectionv
     /tmp/ccQaABxv.s:2553   .bss:0000000000000009 compteur
     /tmp/ccQaABxv.s:2533   .bss:0000000000000003 directions
     /tmp/ccQaABxv.s:1047   .text:000000000000045c _Z25faireIntersectionTrianglev
     /tmp/ccQaABxv.s:1594   .text:0000000000000754 _Z11suivreLignev
     /tmp/ccQaABxv.s:2558   .bss:000000000000000a devraitFinir
     /tmp/ccQaABxv.s:2538   .bss:0000000000000006 nbCarre
     /tmp/ccQaABxv.s:2185   .text.startup:0000000000000000 main
     /tmp/ccQaABxv.s:2568   .bss:000000000000000c enfonceDroit
     /tmp/ccQaABxv.s:2573   .bss:000000000000000d enfonceGauche
     /tmp/ccQaABxv.s:2437   .text.startup:0000000000000100 _GLOBAL__sub_I_bit1
     /tmp/ccQaABxv.s:2476   .text.exit:0000000000000000 _GLOBAL__sub_D_bit1

UNDEFINED SYMBOLS
__floatunsisf
__divsf3
__mulsf3
__fixunssfsi
pow
_ZN3can7lectureEh
_ZN3Del12allumerRougeEh
_ZN3Pwm14Tourner_GaucheEj
_ZN3Pwm11pivotGaucheEj
_ZN3Del11eteindreDelEv
_ZN3Pwm6AvanceEj
_ZN3Pwm10pivotDroitEj
_ZN3Pwm14Tourner_DroiteEj
_ZN3Del11allumerVertEh
_ZN3DelC1Ev
_ZN3PwmC1Ev
_ZN3canC1Ev
GAS LISTING /tmp/ccQaABxv.s 			page 64


__do_global_ctors
_ZN3canD1Ev
_ZN3PwmD1Ev
_ZN3DelD1Ev
__do_global_dtors
__do_clear_bss
