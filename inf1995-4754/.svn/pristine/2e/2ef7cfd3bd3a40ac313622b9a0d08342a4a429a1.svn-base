GAS LISTING /tmp/ccerPMfk.s 			page 1


   1               		.file	"main.cpp"
   2               	__SP_H__ = 0x3e
   3               	__SP_L__ = 0x3d
   4               	__SREG__ = 0x3f
   5               	__tmp_reg__ = 0
   6               	__zero_reg__ = 1
   7               		.stabs	"/usagers/alvux/Bureau/inf1995-4754/projet/",100,0,4,.Ltext0
   8               		.stabs	"main.cpp",100,0,4,.Ltext0
   9               		.text
  10               	.Ltext0:
  11               		.stabs	"gcc2_compiled.",60,0,0,0
  12               		.stabs	"__uint24:t(0,1)=@s24;r(0,1);0;077777777;",128,0,0,0
  13               		.stabs	"__int24:t(0,2)=@s24;r(0,2);040000000;037777777;",128,0,0,0
  14               		.stabs	"__builtin_va_list:t(0,3)=*(0,4)=(0,4)",128,0,0,0
  15               		.stabs	"complex long double:t(0,5)=R3;8;0;",128,0,0,0
  16               		.stabs	"complex double:t(0,6)=R3;8;0;",128,0,0,0
  17               		.stabs	"complex float:t(0,7)=R3;8;0;",128,0,0,0
  18               		.stabs	"complex int:t(0,8)=s4real:(0,9)=r(0,9);-32768;32767;,0,16;imag:(0,9),16,16;;",128,0,0,0
  19               		.stabs	"long long unsigned int:t(0,10)=@s64;r(0,10);0;01777777777777777777777;",128,0,0,0
  20               		.stabs	"long unsigned int:t(0,11)=@s32;r(0,11);0;037777777777;",128,0,0,0
  21               		.stabs	"unsigned int:t(0,12)=r(0,12);0;0177777;",128,0,0,0
  22               		.stabs	"unsigned char:t(0,13)=@s8;r(0,13);0;255;",128,0,0,0
  23               		.stabs	"long long int:t(0,14)=@s64;r(0,14);01000000000000000000000;0777777777777777777777;",128,0,
  24               		.stabs	"long int:t(0,15)=@s32;r(0,15);020000000000;017777777777;",128,0,0,0
  25               		.stabs	"int:t(0,9)",128,0,0,0
  26               		.stabs	"signed char:t(0,16)=@s8;r(0,16);-128;127;",128,0,0,0
  27               		.stabs	"char:t(0,17)=@s8;r(0,17);0;255;",128,0,0,0
  28               		.stabs	"signed:t(0,9)",128,0,0,0
  29               		.stabs	"unsigned long:t(0,11)",128,0,0,0
  30               		.stabs	"long long unsigned:t(0,10)",128,0,0,0
  31               		.stabs	"short int:t(0,18)=r(0,18);-32768;32767;",128,0,0,0
  32               		.stabs	"short unsigned int:t(0,19)=r(0,19);0;0177777;",128,0,0,0
  33               		.stabs	"unsigned short:t(0,19)",128,0,0,0
  34               		.stabs	"float:t(0,20)=r(0,9);4;0;",128,0,0,0
  35               		.stabs	"double:t(0,21)=r(0,9);4;0;",128,0,0,0
  36               		.stabs	"long double:t(0,22)=r(0,9);4;0;",128,0,0,0
  37               		.stabs	"short _Fract:t(0,23)=r(0,9);1;0;",128,0,0,0
  38               		.stabs	"long _Fract:t(0,24)=r(0,9);4;0;",128,0,0,0
  39               		.stabs	"long long _Fract:t(0,25)=r(0,9);8;0;",128,0,0,0
  40               		.stabs	"unsigned short _Fract:t(0,26)=r(0,9);1;0;",128,0,0,0
  41               		.stabs	"unsigned _Fract:t(0,27)=r(0,9);2;0;",128,0,0,0
  42               		.stabs	"unsigned long _Fract:t(0,28)=r(0,9);4;0;",128,0,0,0
  43               		.stabs	"unsigned long long _Fract:t(0,29)=r(0,9);8;0;",128,0,0,0
  44               		.stabs	"_Sat short _Fract:t(0,30)=r(0,9);1;0;",128,0,0,0
  45               		.stabs	"_Sat _Fract:t(0,31)=r(0,9);2;0;",128,0,0,0
  46               		.stabs	"_Sat long _Fract:t(0,32)=r(0,9);4;0;",128,0,0,0
  47               		.stabs	"_Sat long long _Fract:t(0,33)=r(0,9);8;0;",128,0,0,0
  48               		.stabs	"_Sat unsigned short _Fract:t(0,34)=r(0,9);1;0;",128,0,0,0
  49               		.stabs	"_Sat unsigned _Fract:t(0,35)=r(0,9);2;0;",128,0,0,0
  50               		.stabs	"_Sat unsigned long _Fract:t(0,36)=r(0,9);4;0;",128,0,0,0
  51               		.stabs	"_Sat unsigned long long _Fract:t(0,37)=r(0,9);8;0;",128,0,0,0
  52               		.stabs	"short _Accum:t(0,38)=r(0,9);2;0;",128,0,0,0
  53               		.stabs	"long _Accum:t(0,39)=r(0,9);8;0;",128,0,0,0
  54               		.stabs	"long long _Accum:t(0,40)=r(0,9);8;0;",128,0,0,0
  55               		.stabs	"unsigned short _Accum:t(0,41)=r(0,9);2;0;",128,0,0,0
  56               		.stabs	"unsigned _Accum:t(0,42)=r(0,9);4;0;",128,0,0,0
  57               		.stabs	"unsigned long _Accum:t(0,43)=r(0,9);8;0;",128,0,0,0
GAS LISTING /tmp/ccerPMfk.s 			page 2


  58               		.stabs	"unsigned long long _Accum:t(0,44)=r(0,9);8;0;",128,0,0,0
  59               		.stabs	"_Sat short _Accum:t(0,45)=r(0,9);2;0;",128,0,0,0
  60               		.stabs	"_Sat _Accum:t(0,46)=r(0,9);4;0;",128,0,0,0
  61               		.stabs	"_Sat long _Accum:t(0,47)=r(0,9);8;0;",128,0,0,0
  62               		.stabs	"_Sat long long _Accum:t(0,48)=r(0,9);8;0;",128,0,0,0
  63               		.stabs	"_Sat unsigned short _Accum:t(0,49)=r(0,9);2;0;",128,0,0,0
  64               		.stabs	"_Sat unsigned _Accum:t(0,50)=r(0,9);4;0;",128,0,0,0
  65               		.stabs	"_Sat unsigned long _Accum:t(0,51)=r(0,9);8;0;",128,0,0,0
  66               		.stabs	"_Sat unsigned long long _Accum:t(0,52)=r(0,9);8;0;",128,0,0,0
  67               		.stabs	"void:t(0,4)",128,0,0,0
  68               		.stabs	"wchar_t:t(0,53)=r(0,53);-32768;32767;",128,0,0,0
  69               		.stabs	"bool:t(0,54)=@s8;-16;",128,0,0,0
  70               		.stabs	"__vtbl_ptr_type:t(0,55)=*(0,56)=f(0,9)",128,0,0,0
  71               		.stabs	"decltype(nullptr):t(0,57)=(0,57)",128,0,0,0
  72               		.stabs	"int8_t:t(0,58)=(0,16)",128,0,121,0
  73               		.stabs	"uint8_t:t(0,59)=(0,13)",128,0,122,0
  74               		.stabs	"int16_t:t(0,60)=(0,9)",128,0,123,0
  75               		.stabs	"uint16_t:t(0,61)=(0,12)",128,0,124,0
  76               		.stabs	"int32_t:t(0,62)=(0,15)",128,0,125,0
  77               		.stabs	"uint32_t:t(0,63)=(0,11)",128,0,126,0
  78               		.stabs	"int64_t:t(0,64)=(0,14)",128,0,128,0
  79               		.stabs	"uint64_t:t(0,65)=(0,10)",128,0,129,0
  80               		.stabs	"intptr_t:t(0,66)=(0,60)",128,0,142,0
  81               		.stabs	"uintptr_t:t(0,67)=(0,61)",128,0,147,0
  82               		.stabs	"int_least8_t:t(0,68)=(0,58)",128,0,159,0
  83               		.stabs	"uint_least8_t:t(0,69)=(0,59)",128,0,164,0
  84               		.stabs	"int_least16_t:t(0,70)=(0,60)",128,0,169,0
  85               		.stabs	"uint_least16_t:t(0,71)=(0,61)",128,0,174,0
  86               		.stabs	"int_least32_t:t(0,72)=(0,62)",128,0,179,0
  87               		.stabs	"uint_least32_t:t(0,73)=(0,63)",128,0,184,0
  88               		.stabs	"int_least64_t:t(0,74)=(0,64)",128,0,192,0
  89               		.stabs	"uint_least64_t:t(0,75)=(0,65)",128,0,199,0
  90               		.stabs	"int_fast8_t:t(0,76)=(0,58)",128,0,213,0
  91               		.stabs	"uint_fast8_t:t(0,77)=(0,59)",128,0,218,0
  92               		.stabs	"int_fast16_t:t(0,78)=(0,60)",128,0,223,0
  93               		.stabs	"uint_fast16_t:t(0,79)=(0,61)",128,0,228,0
  94               		.stabs	"int_fast32_t:t(0,80)=(0,62)",128,0,233,0
  95               		.stabs	"uint_fast32_t:t(0,81)=(0,63)",128,0,238,0
  96               		.stabs	"int_fast64_t:t(0,82)=(0,64)",128,0,246,0
  97               		.stabs	"uint_fast64_t:t(0,83)=(0,65)",128,0,253,0
  98               		.stabs	"intmax_t:t(0,84)=(0,64)",128,0,273,0
  99               		.stabs	"uintmax_t:t(0,85)=(0,65)",128,0,278,0
 100               		.stabs	"int_farptr_t:t(0,86)=(0,62)",128,0,77,0
 101               		.stabs	"uint_farptr_t:t(0,87)=(0,63)",128,0,81,0
 102               		.stabs	"._0:Tt(0,88)=s3low:(0,13),0,8;high:(0,13),8,8;extended:(0,13),16,8;;",128,0,240,0
 103               		.stabs	"__fuse_t:t(0,88)",128,0,244,0
 104               		.stabs	"Memoire24CXXX:Tt(0,89)=s1m_adresse_peripherique:/0(0,59):_ZN13Memoire24CXXX22m_adresse_per
 105               		.stabs	"Del:Tt(0,98)=s1__base_ctor ::(0,99)=#(0,98),(0,4),(0,100)=*(0,98),(0,4);:_ZN3DelC2Ev;2A.;_
 106               		.stabs	"Moteur:Tt(0,102)=s1__base_ctor ::(0,103)=#(0,102),(0,4),(0,104)=*(0,102),(0,4);:_ZN6Moteur
 107               		.stabs	"can:Tt(0,105)=s1__base_ctor ::(0,106)=#(0,105),(0,4),(0,107)=*(0,105),(0,4);:_ZN3canC2Ev;2
 108               		.stabs	"Minuterie:Tt(0,109)=s4minuterieExpiree_:/0(0,110)=B(0,59),0,8;duree_:/0(0,61),8,16;boutonP
 109               		.stabs	"PwmSon:Tt(0,119)=s1__base_ctor ::(0,120)=#(0,119),(0,4),(0,121)=*(0,119),(0,4);:_ZN6PwmSon
 110               		.stabs	"Pwm:Tt(0,123)=s1__base_ctor ::(0,124)=#(0,123),(0,4),(0,125)=*(0,123),(0,4);:_ZN3PwmC2Ev;2
 111               		.stabs	"_Z13lireDirectionv:F(0,4)",36,0,24,_Z13lireDirectionv
 112               	.global	_Z13lireDirectionv
 113               		.type	_Z13lireDirectionv, @function
 114               	_Z13lireDirectionv:
GAS LISTING /tmp/ccerPMfk.s 			page 3


 115               		.stabd	46,0,0
   1:main.cpp      **** #include "Memoire24CXXX.h"
   2:main.cpp      **** #include "delControl.h" 
   3:main.cpp      **** #include "Moteur.h" 
   4:main.cpp      **** #include "can.h"
   5:main.cpp      **** #include "minuterie.h" 
   6:main.cpp      **** #include "Memoire24CXXX.h" 
   7:main.cpp      **** #include "PwmSon.h"
   8:main.cpp      **** #include "PWM.h"
   9:main.cpp      **** #include <avr/io.h>
  10:main.cpp      **** #include <avr/interrupt.h> 
  11:main.cpp      **** #define F_CPU 8000000
  12:main.cpp      **** #include <util/delay.h>
  13:main.cpp      **** using namespace std;
  14:main.cpp      ****     volatile bool bit1 = false, bit2 = false, bit3 = false, bit4 = false, bit5 = false;
  15:main.cpp      **** 
  16:main.cpp      **** /*Capteurs:
  17:main.cpp      **** PINC & 0b00010000   capteur_droit
  18:main.cpp      **** PINC & 0b00000001   capteur_gauche
  19:main.cpp      **** PINC & 0b00000010   centre capteur_gauche
  20:main.cpp      **** PINC & 0b00001000   centre droit
  21:main.cpp      **** PINC & 0b00000100   centre
  22:main.cpp      ****  
  23:main.cpp      ****  */
  24:main.cpp      **** void lireDirection()
  25:main.cpp      **** {
 116               		.stabn	68,0,25,.LM0-.LFBB1
 117               	.LM0:
 118               	.LFBB1:
 119               	/* prologue: function */
 120               	/* frame size = 0 */
 121               	/* stack size = 0 */
 122               	.L__stack_usage = 0
  26:main.cpp      ****         bit1 = PINC & 0b00000001;
 123               		.stabn	68,0,26,.LM1-.LFBB1
 124               	.LM1:
 125 0000 86B1      		in r24,0x6
 126 0002 8170      		andi r24,lo8(1)
 127 0004 8093 0000 		sts bit1,r24
  27:main.cpp      ****         bit2 = PINC & 0b00000010;
 128               		.stabn	68,0,27,.LM2-.LFBB1
 129               	.LM2:
 130 0008 86B1      		in r24,0x6
 131 000a 8695      		lsr r24
 132 000c 8170      		andi r24,1
 133 000e 8093 0000 		sts bit2,r24
  28:main.cpp      ****         bit3 = PINC & 0b00000100;
 134               		.stabn	68,0,28,.LM3-.LFBB1
 135               	.LM3:
 136 0012 86B1      		in r24,0x6
 137 0014 82FB      		bst r24,2
 138 0016 8827      		clr r24
 139 0018 80F9      		bld r24,0
 140 001a 8093 0000 		sts bit3,r24
  29:main.cpp      ****         bit4 = PINC & 0b00001000;
 141               		.stabn	68,0,29,.LM4-.LFBB1
 142               	.LM4:
GAS LISTING /tmp/ccerPMfk.s 			page 4


 143 001e 86B1      		in r24,0x6
 144 0020 83FB      		bst r24,3
 145 0022 8827      		clr r24
 146 0024 80F9      		bld r24,0
 147 0026 8093 0000 		sts bit4,r24
  30:main.cpp      ****         bit5 = PINC & 0b00010000;
 148               		.stabn	68,0,30,.LM5-.LFBB1
 149               	.LM5:
 150 002a 86B1      		in r24,0x6
 151 002c 8295      		swap r24
 152 002e 8170      		andi r24,1
 153 0030 8093 0000 		sts bit5,r24
 154 0034 0895      		ret
 155               		.size	_Z13lireDirectionv, .-_Z13lireDirectionv
 156               	.Lscope1:
 157               		.stabs	"",36,0,0,.Lscope1-.LFBB1
 158               		.stabd	78,0,0
 159               		.section	.text.startup,"ax",@progbits
 160               		.stabs	"main:F(0,9)",36,0,33,main
 161               	.global	main
 162               		.type	main, @function
 163               	main:
 164               		.stabd	46,0,0
  31:main.cpp      **** }
  32:main.cpp      **** //!(x^y) 00011111   00011111 & 0x01  0z02 (stuff de godalol)
  33:main.cpp      **** int main()
  34:main.cpp      **** {
 165               		.stabn	68,0,34,.LM6-.LFBB2
 166               	.LM6:
 167               	.LFBB2:
 168 0000 DF92      		push r13
 169 0002 EF92      		push r14
 170 0004 FF92      		push r15
 171 0006 0F93      		push r16
 172 0008 1F93      		push r17
 173 000a CF93      		push r28
 174 000c DF93      		push r29
 175 000e 00D0      		rcall .
 176 0010 00D0      		rcall .
 177 0012 00D0      		rcall .
 178 0014 CDB7      		in r28,__SP_L__
 179 0016 DEB7      		in r29,__SP_H__
 180               	/* prologue: function */
 181               	/* frame size = 6 */
 182               	/* stack size = 13 */
 183               	.L__stack_usage = 13
 184               	.LBB33:
  35:main.cpp      ****     
  36:main.cpp      ****     DDRD = 0b11110000;
 185               		.stabn	68,0,36,.LM7-.LFBB2
 186               	.LM7:
 187 0018 80EF      		ldi r24,lo8(-16)
 188 001a 8AB9      		out 0xa,r24
  37:main.cpp      ****     DDRC = 0x00;
 189               		.stabn	68,0,37,.LM8-.LFBB2
 190               	.LM8:
 191 001c 17B8      		out 0x7,__zero_reg__
GAS LISTING /tmp/ccerPMfk.s 			page 5


  38:main.cpp      ****     DDRA = 0x0F;
 192               		.stabn	68,0,38,.LM9-.LFBB2
 193               	.LM9:
 194 001e 8FE0      		ldi r24,lo8(15)
 195 0020 81B9      		out 0x1,r24
  39:main.cpp      ****     Del del;
 196               		.stabn	68,0,39,.LM10-.LFBB2
 197               	.LM10:
 198 0022 CE01      		movw r24,r28
 199 0024 0696      		adiw r24,6
 200 0026 0E94 0000 		call _ZN3DelC1Ev
  40:main.cpp      ****     Pwm moteur;
 201               		.stabn	68,0,40,.LM11-.LFBB2
 202               	.LM11:
 203 002a CE01      		movw r24,r28
 204 002c 0596      		adiw r24,5
 205 002e 0E94 0000 		call _ZN3PwmC1Ev
  41:main.cpp      ****     can intensite;
 206               		.stabn	68,0,41,.LM12-.LFBB2
 207               	.LM12:
 208 0032 CE01      		movw r24,r28
 209 0034 0496      		adiw r24,4
 210 0036 0E94 0000 		call _ZN3canC1Ev
  42:main.cpp      ****     uint8_t rapport;
  43:main.cpp      ****     //bool aTourneAGauche = false;
  44:main.cpp      ****     //bool aTourneADroite = false;
  45:main.cpp      ****     bool passeDansLeTunel = false;
  46:main.cpp      ****     bool estSortiDuTunel = false;
  47:main.cpp      **** 
  48:main.cpp      ****     
  49:main.cpp      **** ///////////// BOUTONS DE DIRECTION ///////////////
  50:main.cpp      ****     char directions[3] = {};
 211               		.stabn	68,0,50,.LM13-.LFBB2
 212               	.LM13:
 213 003a 1982      		std Y+1,__zero_reg__
 214 003c 1A82      		std Y+2,__zero_reg__
 215 003e 1B82      		std Y+3,__zero_reg__
  51:main.cpp      ****     uint8_t compteur = 0;
  52:main.cpp      ****     bool enfonceDroit = false;
  53:main.cpp      ****     bool enfonceGauche = false;
  54:main.cpp      ****     DDRB = 0b11111100;
 216               		.stabn	68,0,54,.LM14-.LFBB2
 217               	.LM14:
 218 0040 8CEF      		ldi r24,lo8(-4)
 219 0042 84B9      		out 0x4,r24
  53:main.cpp      ****     DDRB = 0b11111100;
 220               		.stabn	68,0,53,.LM15-.LFBB2
 221               	.LM15:
 222 0044 20E0      		ldi r18,0
  52:main.cpp      ****     bool enfonceGauche = false;
 223               		.stabn	68,0,52,.LM16-.LFBB2
 224               	.LM16:
 225 0046 90E0      		ldi r25,0
  51:main.cpp      ****     uint8_t compteur = 0;
 226               		.stabn	68,0,51,.LM17-.LFBB2
 227               	.LM17:
 228 0048 80E0      		ldi r24,0
GAS LISTING /tmp/ccerPMfk.s 			page 6


  55:main.cpp      ****     
  56:main.cpp      **** 	while (compteur<3) {
  57:main.cpp      **** 	
  58:main.cpp      **** 		
  59:main.cpp      **** 			if (!(PINB & 0x01)) { 	//bouton droit
  60:main.cpp      **** 				_delay_ms(10);
  61:main.cpp      **** 				if(!(PINB & 0x01)){
  62:main.cpp      **** 					enfonceDroit = true;
  63:main.cpp      ****                                         PORTA = 0b1000;
  64:main.cpp      **** 					_delay_ms(10);
  65:main.cpp      **** 				}
  66:main.cpp      **** 			}
  67:main.cpp      **** 			else
  68:main.cpp      **** 				if(enfonceDroit){
  69:main.cpp      **** 					enfonceDroit = false;
  70:main.cpp      ****                                         PORTA = 0x00;
  71:main.cpp      **** 					directions[compteur] = 'd';
 229               		.stabn	68,0,71,.LM18-.LFBB2
 230               	.LM18:
 231 004a 34E6      		ldi r19,lo8(100)
  63:main.cpp      **** 					_delay_ms(10);
 232               		.stabn	68,0,63,.LM19-.LFBB2
 233               	.LM19:
 234 004c 48E0      		ldi r20,lo8(8)
  72:main.cpp      **** 					compteur++;
  73:main.cpp      **** 				}
  74:main.cpp      **** 				
  75:main.cpp      **** 			if (!(PINB & 0x02)) { 		//bouton gauche
  76:main.cpp      **** 				_delay_ms(10);
  77:main.cpp      **** 				if(!(PINB & 0x02)){
  78:main.cpp      **** 					enfonceGauche = true;
  79:main.cpp      ****                                          PORTA = 0b0100;
  80:main.cpp      **** 					_delay_ms(10);
  81:main.cpp      **** 				}
  82:main.cpp      **** 			}
  83:main.cpp      **** 			else
  84:main.cpp      **** 				if(enfonceGauche){
  85:main.cpp      **** 					enfonceGauche = false;
  86:main.cpp      ****                                         PORTA = 0x00;
  87:main.cpp      **** 					directions[compteur] = 'g';
 235               		.stabn	68,0,87,.LM20-.LFBB2
 236               	.LM20:
 237 004e 57E6      		ldi r21,lo8(103)
  79:main.cpp      **** 					_delay_ms(10);
 238               		.stabn	68,0,79,.LM21-.LFBB2
 239               	.LM21:
 240 0050 64E0      		ldi r22,lo8(4)
 241               	.L7:
  59:main.cpp      **** 				_delay_ms(10);
 242               		.stabn	68,0,59,.LM22-.LFBB2
 243               	.LM22:
 244 0052 1899      		sbic 0x3,0
 245 0054 00C0      		rjmp .L3
 246               	.LBB34:
 247               	.LBB35:
 248               		.stabs	"/usr/avr/include/util/delay.h",132,0,0,.Ltext1
 249               	.Ltext1:
GAS LISTING /tmp/ccerPMfk.s 			page 7


   1:/usr/avr/include/util/delay.h **** /* Copyright (c) 2002, Marek Michalkiewicz
   2:/usr/avr/include/util/delay.h ****    Copyright (c) 2004,2005,2007 Joerg Wunsch
   3:/usr/avr/include/util/delay.h ****    Copyright (c) 2007  Florin-Viorel Petrov
   4:/usr/avr/include/util/delay.h ****    All rights reserved.
   5:/usr/avr/include/util/delay.h **** 
   6:/usr/avr/include/util/delay.h ****    Redistribution and use in source and binary forms, with or without
   7:/usr/avr/include/util/delay.h ****    modification, are permitted provided that the following conditions are met:
   8:/usr/avr/include/util/delay.h **** 
   9:/usr/avr/include/util/delay.h ****    * Redistributions of source code must retain the above copyright
  10:/usr/avr/include/util/delay.h ****      notice, this list of conditions and the following disclaimer.
  11:/usr/avr/include/util/delay.h **** 
  12:/usr/avr/include/util/delay.h ****    * Redistributions in binary form must reproduce the above copyright
  13:/usr/avr/include/util/delay.h ****      notice, this list of conditions and the following disclaimer in
  14:/usr/avr/include/util/delay.h ****      the documentation and/or other materials provided with the
  15:/usr/avr/include/util/delay.h ****      distribution.
  16:/usr/avr/include/util/delay.h **** 
  17:/usr/avr/include/util/delay.h ****    * Neither the name of the copyright holders nor the names of
  18:/usr/avr/include/util/delay.h ****      contributors may be used to endorse or promote products derived
  19:/usr/avr/include/util/delay.h ****      from this software without specific prior written permission.
  20:/usr/avr/include/util/delay.h **** 
  21:/usr/avr/include/util/delay.h ****   THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS "AS IS"
  22:/usr/avr/include/util/delay.h ****   AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE
  23:/usr/avr/include/util/delay.h ****   IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE
  24:/usr/avr/include/util/delay.h ****   ARE DISCLAIMED. IN NO EVENT SHALL THE COPYRIGHT OWNER OR CONTRIBUTORS BE
  25:/usr/avr/include/util/delay.h ****   LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR
  26:/usr/avr/include/util/delay.h ****   CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF
  27:/usr/avr/include/util/delay.h ****   SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS
  28:/usr/avr/include/util/delay.h ****   INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN
  29:/usr/avr/include/util/delay.h ****   CONTRACT, STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)
  30:/usr/avr/include/util/delay.h ****   ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE
  31:/usr/avr/include/util/delay.h ****   POSSIBILITY OF SUCH DAMAGE. */
  32:/usr/avr/include/util/delay.h **** 
  33:/usr/avr/include/util/delay.h **** /* $Id: delay.h.in 2251 2011-09-14 08:20:33Z joerg_wunsch $ */
  34:/usr/avr/include/util/delay.h **** 
  35:/usr/avr/include/util/delay.h **** #ifndef _UTIL_DELAY_H_
  36:/usr/avr/include/util/delay.h **** #define _UTIL_DELAY_H_ 1
  37:/usr/avr/include/util/delay.h **** 
  38:/usr/avr/include/util/delay.h **** #ifndef __HAS_DELAY_CYCLES
  39:/usr/avr/include/util/delay.h **** #define __HAS_DELAY_CYCLES 1
  40:/usr/avr/include/util/delay.h **** #endif
  41:/usr/avr/include/util/delay.h **** 
  42:/usr/avr/include/util/delay.h **** #include <inttypes.h>
  43:/usr/avr/include/util/delay.h **** #include <util/delay_basic.h>
  44:/usr/avr/include/util/delay.h **** #include <math.h>
  45:/usr/avr/include/util/delay.h **** 
  46:/usr/avr/include/util/delay.h **** /** \file */
  47:/usr/avr/include/util/delay.h **** /** \defgroup util_delay <util/delay.h>: Convenience functions for busy-wait delay loops
  48:/usr/avr/include/util/delay.h ****     \code
  49:/usr/avr/include/util/delay.h ****     #define F_CPU 1000000UL  // 1 MHz
  50:/usr/avr/include/util/delay.h ****     //#define F_CPU 14.7456E6
  51:/usr/avr/include/util/delay.h ****     #include <util/delay.h>
  52:/usr/avr/include/util/delay.h ****     \endcode
  53:/usr/avr/include/util/delay.h **** 
  54:/usr/avr/include/util/delay.h ****     \note As an alternative method, it is possible to pass the
  55:/usr/avr/include/util/delay.h ****     F_CPU macro down to the compiler from the Makefile.
  56:/usr/avr/include/util/delay.h ****     Obviously, in that case, no \c \#define statement should be
  57:/usr/avr/include/util/delay.h ****     used.
GAS LISTING /tmp/ccerPMfk.s 			page 8


  58:/usr/avr/include/util/delay.h **** 
  59:/usr/avr/include/util/delay.h ****     The functions in this header file are wrappers around the basic
  60:/usr/avr/include/util/delay.h ****     busy-wait functions from <util/delay_basic.h>.  They are meant as
  61:/usr/avr/include/util/delay.h ****     convenience functions where actual time values can be specified
  62:/usr/avr/include/util/delay.h ****     rather than a number of cycles to wait for.  The idea behind is
  63:/usr/avr/include/util/delay.h ****     that compile-time constant expressions will be eliminated by
  64:/usr/avr/include/util/delay.h ****     compiler optimization so floating-point expressions can be used
  65:/usr/avr/include/util/delay.h ****     to calculate the number of delay cycles needed based on the CPU
  66:/usr/avr/include/util/delay.h ****     frequency passed by the macro F_CPU.
  67:/usr/avr/include/util/delay.h **** 
  68:/usr/avr/include/util/delay.h ****     \note In order for these functions to work as intended, compiler
  69:/usr/avr/include/util/delay.h ****     optimizations <em>must</em> be enabled, and the delay time
  70:/usr/avr/include/util/delay.h ****     <em>must</em> be an expression that is a known constant at
  71:/usr/avr/include/util/delay.h ****     compile-time.  If these requirements are not met, the resulting
  72:/usr/avr/include/util/delay.h ****     delay will be much longer (and basically unpredictable), and
  73:/usr/avr/include/util/delay.h ****     applications that otherwise do not use floating-point calculations
  74:/usr/avr/include/util/delay.h ****     will experience severe code bloat by the floating-point library
  75:/usr/avr/include/util/delay.h ****     routines linked into the application.
  76:/usr/avr/include/util/delay.h **** 
  77:/usr/avr/include/util/delay.h ****     The functions available allow the specification of microsecond, and
  78:/usr/avr/include/util/delay.h ****     millisecond delays directly, using the application-supplied macro
  79:/usr/avr/include/util/delay.h ****     F_CPU as the CPU clock frequency (in Hertz).
  80:/usr/avr/include/util/delay.h **** 
  81:/usr/avr/include/util/delay.h **** */
  82:/usr/avr/include/util/delay.h **** 
  83:/usr/avr/include/util/delay.h **** #if !defined(__DOXYGEN__)
  84:/usr/avr/include/util/delay.h **** static inline void _delay_us(double __us) __attribute__((always_inline));
  85:/usr/avr/include/util/delay.h **** static inline void _delay_ms(double __ms) __attribute__((always_inline));
  86:/usr/avr/include/util/delay.h **** #endif
  87:/usr/avr/include/util/delay.h **** 
  88:/usr/avr/include/util/delay.h **** #ifndef F_CPU
  89:/usr/avr/include/util/delay.h **** /* prevent compiler error by supplying a default */
  90:/usr/avr/include/util/delay.h **** # warning "F_CPU not defined for <util/delay.h>"
  91:/usr/avr/include/util/delay.h **** # define F_CPU 1000000UL
  92:/usr/avr/include/util/delay.h **** #endif
  93:/usr/avr/include/util/delay.h **** 
  94:/usr/avr/include/util/delay.h **** #ifndef __OPTIMIZE__
  95:/usr/avr/include/util/delay.h **** # warning "Compiler optimizations disabled; functions from <util/delay.h> won't work as designed"
  96:/usr/avr/include/util/delay.h **** #endif
  97:/usr/avr/include/util/delay.h **** 
  98:/usr/avr/include/util/delay.h **** #if __HAS_DELAY_CYCLES && defined(__OPTIMIZE__) && \
  99:/usr/avr/include/util/delay.h ****   !defined(__DELAY_BACKWARD_COMPATIBLE__) &&	   \
 100:/usr/avr/include/util/delay.h ****   __STDC_HOSTED__
 101:/usr/avr/include/util/delay.h **** #  include <math.h>
 102:/usr/avr/include/util/delay.h **** #endif
 103:/usr/avr/include/util/delay.h **** 
 104:/usr/avr/include/util/delay.h **** /**
 105:/usr/avr/include/util/delay.h ****    \ingroup util_delay
 106:/usr/avr/include/util/delay.h **** 
 107:/usr/avr/include/util/delay.h ****    Perform a delay of \c __ms milliseconds, using _delay_loop_2().
 108:/usr/avr/include/util/delay.h **** 
 109:/usr/avr/include/util/delay.h ****    The macro F_CPU is supposed to be defined to a
 110:/usr/avr/include/util/delay.h ****    constant defining the CPU clock frequency (in Hertz).
 111:/usr/avr/include/util/delay.h **** 
 112:/usr/avr/include/util/delay.h ****    The maximal possible delay is 262.14 ms / F_CPU in MHz.
 113:/usr/avr/include/util/delay.h **** 
 114:/usr/avr/include/util/delay.h ****    When the user request delay which exceed the maximum possible one,
GAS LISTING /tmp/ccerPMfk.s 			page 9


 115:/usr/avr/include/util/delay.h ****    _delay_ms() provides a decreased resolution functionality. In this
 116:/usr/avr/include/util/delay.h ****    mode _delay_ms() will work with a resolution of 1/10 ms, providing
 117:/usr/avr/include/util/delay.h ****    delays up to 6.5535 seconds (independent from CPU frequency).  The
 118:/usr/avr/include/util/delay.h ****    user will not be informed about decreased resolution.
 119:/usr/avr/include/util/delay.h **** 
 120:/usr/avr/include/util/delay.h ****    If the avr-gcc toolchain has __builtin_avr_delay_cycles(unsigned long)
 121:/usr/avr/include/util/delay.h ****    support, maximal possible delay is 4294967.295 ms/ F_CPU in MHz. For
 122:/usr/avr/include/util/delay.h ****    values greater than the maximal possible delay, overflows results in
 123:/usr/avr/include/util/delay.h ****    no delay i.e., 0ms.
 124:/usr/avr/include/util/delay.h **** 
 125:/usr/avr/include/util/delay.h ****    Conversion of __us into clock cycles may not always result in integer.
 126:/usr/avr/include/util/delay.h ****    By default, the clock cycles rounded up to next integer. This ensures that
 127:/usr/avr/include/util/delay.h ****    the user gets atleast __us microseconds of delay.
 128:/usr/avr/include/util/delay.h **** 
 129:/usr/avr/include/util/delay.h ****    Alternatively, user can define __DELAY_ROUND_DOWN__ and __DELAY_ROUND_CLOSEST__
 130:/usr/avr/include/util/delay.h ****    to round down and round to closest integer.
 131:/usr/avr/include/util/delay.h **** 
 132:/usr/avr/include/util/delay.h ****    Note: The new implementation of _delay_ms(double __ms) with 
 133:/usr/avr/include/util/delay.h ****     __builtin_avr_delay_cycles(unsigned long) support is not backward compatible. 
 134:/usr/avr/include/util/delay.h ****    User can define __DELAY_BACKWARD_COMPATIBLE__ to get a backward compatible delay.
 135:/usr/avr/include/util/delay.h ****    Also, the backward compatible
 136:/usr/avr/include/util/delay.h ****    algorithm will be chosen if the code is compiled in a <em>freestanding
 137:/usr/avr/include/util/delay.h ****    environment</em> (GCC option \c -ffreestanding), as the math functions
 138:/usr/avr/include/util/delay.h ****    required for rounding are not available to the compiler then.
 139:/usr/avr/include/util/delay.h **** 
 140:/usr/avr/include/util/delay.h ****  */
 141:/usr/avr/include/util/delay.h **** void
 142:/usr/avr/include/util/delay.h **** _delay_ms(double __ms)
 143:/usr/avr/include/util/delay.h **** {
 144:/usr/avr/include/util/delay.h **** 	uint16_t __ticks;
 145:/usr/avr/include/util/delay.h **** 	double __tmp ; 
 146:/usr/avr/include/util/delay.h **** #if __HAS_DELAY_CYCLES && defined(__OPTIMIZE__) && \
 147:/usr/avr/include/util/delay.h ****   !defined(__DELAY_BACKWARD_COMPATIBLE__) &&	   \
 148:/usr/avr/include/util/delay.h ****   __STDC_HOSTED__
 149:/usr/avr/include/util/delay.h **** 	uint32_t __ticks_dc;
 150:/usr/avr/include/util/delay.h **** 	extern void __builtin_avr_delay_cycles(unsigned long);
 151:/usr/avr/include/util/delay.h **** 	__tmp = ((F_CPU) / 1e3) * __ms;
 152:/usr/avr/include/util/delay.h **** 
 153:/usr/avr/include/util/delay.h **** 	#if defined(__DELAY_ROUND_DOWN__)
 154:/usr/avr/include/util/delay.h **** 		__ticks_dc = (uint32_t)fabs(__tmp);
 155:/usr/avr/include/util/delay.h **** 
 156:/usr/avr/include/util/delay.h **** 	#elif defined(__DELAY_ROUND_CLOSEST__)
 157:/usr/avr/include/util/delay.h **** 		__ticks_dc = (uint32_t)(fabs(__tmp)+0.5);
 158:/usr/avr/include/util/delay.h **** 
 159:/usr/avr/include/util/delay.h **** 	#else
 160:/usr/avr/include/util/delay.h **** 		//round up by default
 161:/usr/avr/include/util/delay.h **** 		__ticks_dc = (uint32_t)(ceil(fabs(__tmp)));
 162:/usr/avr/include/util/delay.h **** 	#endif
 163:/usr/avr/include/util/delay.h **** 
 164:/usr/avr/include/util/delay.h **** 	__builtin_avr_delay_cycles(__ticks_dc);
 250               		.stabn	68,0,164,.LM23-.LFBB2
 251               	.LM23:
 252 0056 EFE1      		ldi r30,lo8(19999)
 253 0058 FEE4      		ldi r31,hi8(19999)
 254 005a 3197      		1: sbiw r30,1
 255 005c 01F4      		brne 1b
 256 005e 00C0      		rjmp .
GAS LISTING /tmp/ccerPMfk.s 			page 10


 257 0060 0000      		nop
 258               	.LBE35:
 259               	.LBE34:
 260               		.stabs	"main.cpp",132,0,0,.Ltext2
 261               	.Ltext2:
  61:main.cpp      **** 					enfonceDroit = true;
 262               		.stabn	68,0,61,.LM24-.LFBB2
 263               	.LM24:
 264 0062 1899      		sbic 0x3,0
 265 0064 00C0      		rjmp .L4
  63:main.cpp      **** 					_delay_ms(10);
 266               		.stabn	68,0,63,.LM25-.LFBB2
 267               	.LM25:
 268 0066 42B9      		out 0x2,r20
 269               	.LBB36:
 270               	.LBB37:
 271               		.stabs	"/usr/avr/include/util/delay.h",132,0,0,.Ltext3
 272               	.Ltext3:
 273               		.stabn	68,0,164,.LM26-.LFBB2
 274               	.LM26:
 275 0068 EFE1      		ldi r30,lo8(19999)
 276 006a FEE4      		ldi r31,hi8(19999)
 277 006c 3197      		1: sbiw r30,1
 278 006e 01F4      		brne 1b
 279 0070 00C0      		rjmp .
 280 0072 0000      		nop
 281               	.LBE37:
 282               	.LBE36:
 283               		.stabs	"main.cpp",132,0,0,.Ltext4
 284               	.Ltext4:
  62:main.cpp      ****                                         PORTA = 0b1000;
 285               		.stabn	68,0,62,.LM27-.LFBB2
 286               	.LM27:
 287 0074 91E0      		ldi r25,lo8(1)
 288 0076 00C0      		rjmp .L4
 289               	.L3:
  68:main.cpp      **** 					enfonceDroit = false;
 290               		.stabn	68,0,68,.LM28-.LFBB2
 291               	.LM28:
 292 0078 9923      		tst r25
 293 007a 01F0      		breq .L4
  70:main.cpp      **** 					directions[compteur] = 'd';
 294               		.stabn	68,0,70,.LM29-.LFBB2
 295               	.LM29:
 296 007c 12B8      		out 0x2,__zero_reg__
  71:main.cpp      **** 					compteur++;
 297               		.stabn	68,0,71,.LM30-.LFBB2
 298               	.LM30:
 299 007e E1E0      		ldi r30,lo8(1)
 300 0080 F0E0      		ldi r31,0
 301 0082 EC0F      		add r30,r28
 302 0084 FD1F      		adc r31,r29
 303 0086 E80F      		add r30,r24
 304 0088 F11D      		adc r31,__zero_reg__
 305 008a 3083      		st Z,r19
  72:main.cpp      **** 				}
 306               		.stabn	68,0,72,.LM31-.LFBB2
GAS LISTING /tmp/ccerPMfk.s 			page 11


 307               	.LM31:
 308 008c 8F5F      		subi r24,lo8(-(1))
  69:main.cpp      ****                                         PORTA = 0x00;
 309               		.stabn	68,0,69,.LM32-.LFBB2
 310               	.LM32:
 311 008e 90E0      		ldi r25,0
 312               	.L4:
  75:main.cpp      **** 				_delay_ms(10);
 313               		.stabn	68,0,75,.LM33-.LFBB2
 314               	.LM33:
 315 0090 1999      		sbic 0x3,1
 316 0092 00C0      		rjmp .L5
 317               	.LBB38:
 318               	.LBB39:
 319               		.stabs	"/usr/avr/include/util/delay.h",132,0,0,.Ltext5
 320               	.Ltext5:
 321               		.stabn	68,0,164,.LM34-.LFBB2
 322               	.LM34:
 323 0094 EFE1      		ldi r30,lo8(19999)
 324 0096 FEE4      		ldi r31,hi8(19999)
 325 0098 3197      		1: sbiw r30,1
 326 009a 01F4      		brne 1b
 327 009c 00C0      		rjmp .
 328 009e 0000      		nop
 329               	.LBE39:
 330               	.LBE38:
 331               		.stabs	"main.cpp",132,0,0,.Ltext6
 332               	.Ltext6:
  77:main.cpp      **** 					enfonceGauche = true;
 333               		.stabn	68,0,77,.LM35-.LFBB2
 334               	.LM35:
 335 00a0 1999      		sbic 0x3,1
 336 00a2 00C0      		rjmp .L6
  79:main.cpp      **** 					_delay_ms(10);
 337               		.stabn	68,0,79,.LM36-.LFBB2
 338               	.LM36:
 339 00a4 62B9      		out 0x2,r22
 340               	.LBB40:
 341               	.LBB41:
 342               		.stabs	"/usr/avr/include/util/delay.h",132,0,0,.Ltext7
 343               	.Ltext7:
 344               		.stabn	68,0,164,.LM37-.LFBB2
 345               	.LM37:
 346 00a6 EFE1      		ldi r30,lo8(19999)
 347 00a8 FEE4      		ldi r31,hi8(19999)
 348 00aa 3197      		1: sbiw r30,1
 349 00ac 01F4      		brne 1b
 350 00ae 00C0      		rjmp .
 351 00b0 0000      		nop
 352               	.LBE41:
 353               	.LBE40:
 354               		.stabs	"main.cpp",132,0,0,.Ltext8
 355               	.Ltext8:
  78:main.cpp      ****                                          PORTA = 0b0100;
 356               		.stabn	68,0,78,.LM38-.LFBB2
 357               	.LM38:
 358 00b2 21E0      		ldi r18,lo8(1)
GAS LISTING /tmp/ccerPMfk.s 			page 12


 359 00b4 00C0      		rjmp .L6
 360               	.L5:
  84:main.cpp      **** 					enfonceGauche = false;
 361               		.stabn	68,0,84,.LM39-.LFBB2
 362               	.LM39:
 363 00b6 2223      		tst r18
 364 00b8 01F0      		breq .L6
  86:main.cpp      **** 					directions[compteur] = 'g';
 365               		.stabn	68,0,86,.LM40-.LFBB2
 366               	.LM40:
 367 00ba 12B8      		out 0x2,__zero_reg__
 368               		.stabn	68,0,87,.LM41-.LFBB2
 369               	.LM41:
 370 00bc E1E0      		ldi r30,lo8(1)
 371 00be F0E0      		ldi r31,0
 372 00c0 EC0F      		add r30,r28
 373 00c2 FD1F      		adc r31,r29
 374 00c4 E80F      		add r30,r24
 375 00c6 F11D      		adc r31,__zero_reg__
 376 00c8 5083      		st Z,r21
  88:main.cpp      **** 					compteur++;
 377               		.stabn	68,0,88,.LM42-.LFBB2
 378               	.LM42:
 379 00ca 8F5F      		subi r24,lo8(-(1))
  85:main.cpp      ****                                         PORTA = 0x00;
 380               		.stabn	68,0,85,.LM43-.LFBB2
 381               	.LM43:
 382 00cc 20E0      		ldi r18,0
 383               	.L6:
  56:main.cpp      **** 	
 384               		.stabn	68,0,56,.LM44-.LFBB2
 385               	.LM44:
 386 00ce 8330      		cpi r24,lo8(3)
 387 00d0 00F4      		brsh .+2
 388 00d2 00C0      		rjmp .L7
 389 00d4 10E0      		ldi r17,0
 390 00d6 E12C      		mov r14,__zero_reg__
 391 00d8 F12C      		mov r15,__zero_reg__
  89:main.cpp      **** 				}
  90:main.cpp      **** 				
  91:main.cpp      ****         }
  92:main.cpp      **** 
  93:main.cpp      **** 	
  94:main.cpp      **** 		
  95:main.cpp      **** 	
  96:main.cpp      **** ////////////// FIN DE DETECTION DE BOUTONS /////////////////////
  97:main.cpp      ****  
  98:main.cpp      ****  
  99:main.cpp      ****  
 100:main.cpp      ****     compteur = 0;
 101:main.cpp      ****     while (true)
 102:main.cpp      ****     {
 103:main.cpp      ****         ////////////////// SOYA GIRL SUPER ADDONS ///////////////////////////
 104:main.cpp      ****         rapport = intensite.lecture(8) >> 2;
 105:main.cpp      ****         lireDirection();
 106:main.cpp      ****         
 107:main.cpp      ****          if(compteur >= 3)// Comme ça si l'arrêt est à la sorti du tunnel bein c'est ça
GAS LISTING /tmp/ccerPMfk.s 			page 13


 108:main.cpp      ****          {
 109:main.cpp      ****              if(bit1 && bit2 && bit3 && bit4 && bit5)
 110:main.cpp      ****              {
 111:main.cpp      ****                  moteur.Avance(0);
 112:main.cpp      ****                 return 0;
 113:main.cpp      ****             } 
 114:main.cpp      ****          }  
 115:main.cpp      ****         
 116:main.cpp      ****         if(rapport < 80)
 117:main.cpp      ****         {
 118:main.cpp      ****             passeDansLeTunel = true;
 119:main.cpp      ****             PORTA = 0b1100;
 392               		.stabn	68,0,119,.LM45-.LFBB2
 393               	.LM45:
 394 00da 3CE0      		ldi r19,lo8(12)
 395 00dc D32E      		mov r13,r19
 396               	.L8:
 104:main.cpp      ****         lireDirection();
 397               		.stabn	68,0,104,.LM46-.LFBB2
 398               	.LM46:
 399 00de 68E0      		ldi r22,lo8(8)
 400 00e0 CE01      		movw r24,r28
 401 00e2 0496      		adiw r24,4
 402 00e4 0E94 0000 		call _ZN3can7lectureEh
 403 00e8 9695      		lsr r25
 404 00ea 8795      		ror r24
 405 00ec 9695      		lsr r25
 406 00ee 8795      		ror r24
 407 00f0 082F      		mov r16,r24
 105:main.cpp      ****         
 408               		.stabn	68,0,105,.LM47-.LFBB2
 409               	.LM47:
 410 00f2 0E94 0000 		call _Z13lireDirectionv
 107:main.cpp      ****          {
 411               		.stabn	68,0,107,.LM48-.LFBB2
 412               	.LM48:
 413 00f6 1330      		cpi r17,lo8(3)
 414 00f8 00F0      		brlo .L9
 109:main.cpp      ****              {
 415               		.stabn	68,0,109,.LM49-.LFBB2
 416               	.LM49:
 417 00fa 8091 0000 		lds r24,bit1
 418 00fe 8823      		tst r24
 419 0100 01F0      		breq .L9
 109:main.cpp      ****              {
 420               		.stabn	68,0,109,.LM50-.LFBB2
 421               	.LM50:
 422 0102 8091 0000 		lds r24,bit2
 423 0106 8823      		tst r24
 424 0108 01F0      		breq .L9
 109:main.cpp      ****              {
 425               		.stabn	68,0,109,.LM51-.LFBB2
 426               	.LM51:
 427 010a 8091 0000 		lds r24,bit3
 428 010e 8823      		tst r24
 429 0110 01F0      		breq .L9
 109:main.cpp      ****              {
GAS LISTING /tmp/ccerPMfk.s 			page 14


 430               		.stabn	68,0,109,.LM52-.LFBB2
 431               	.LM52:
 432 0112 8091 0000 		lds r24,bit4
 433 0116 8823      		tst r24
 434 0118 01F0      		breq .L9
 109:main.cpp      ****              {
 435               		.stabn	68,0,109,.LM53-.LFBB2
 436               	.LM53:
 437 011a 8091 0000 		lds r24,bit5
 438 011e 8111      		cpse r24,__zero_reg__
 439 0120 00C0      		rjmp .L11
 440               	.L9:
 116:main.cpp      ****         {
 441               		.stabn	68,0,116,.LM54-.LFBB2
 442               	.LM54:
 443 0122 0035      		cpi r16,lo8(80)
 444 0124 00F4      		brsh .L198
 445               		.stabn	68,0,119,.LM55-.LFBB2
 446               	.LM55:
 447 0126 D2B8      		out 0x2,r13
 118:main.cpp      ****             PORTA = 0b1100;
 448               		.stabn	68,0,118,.LM56-.LFBB2
 449               	.LM56:
 450 0128 FF24      		clr r15
 451 012a F394      		inc r15
 452 012c 00C0      		rjmp .L12
 453               	.L198:
 120:main.cpp      ****         }
 121:main.cpp      ****         else if(rapport >= 80 && passeDansLeTunel)
 454               		.stabn	68,0,121,.LM57-.LFBB2
 455               	.LM57:
 456 012e FF20      		tst r15
 457 0130 01F0      		breq .L12
 122:main.cpp      ****         {
 123:main.cpp      ****             passeDansLeTunel = false;
 124:main.cpp      ****             estSortiDuTunel = true;
 125:main.cpp      ****             PORTA = 0x00;
 458               		.stabn	68,0,125,.LM58-.LFBB2
 459               	.LM58:
 460 0132 12B8      		out 0x2,__zero_reg__
 123:main.cpp      ****             estSortiDuTunel = true;
 461               		.stabn	68,0,123,.LM59-.LFBB2
 462               	.LM59:
 463 0134 F12C      		mov r15,__zero_reg__
 464 0136 00C0      		rjmp .L13
 465               	.L12:
 126:main.cpp      ****         }
 127:main.cpp      ****         if(estSortiDuTunel) //En gros on fait une intersection fancy
 466               		.stabn	68,0,127,.LM60-.LFBB2
 467               	.LM60:
 468 0138 EE20      		tst r14
 469 013a 01F4      		brne .+2
 470 013c 00C0      		rjmp .L14
 471               	.L13:
 472               	.LBB42:
 473               	.LBB43:
 474               		.stabs	"/usr/avr/include/util/delay.h",132,0,0,.Ltext9
GAS LISTING /tmp/ccerPMfk.s 			page 15


 475               	.Ltext9:
 476               		.stabn	68,0,164,.LM61-.LFBB2
 477               	.LM61:
 478 013e FFEF      		ldi r31,lo8(159999)
 479 0140 20E7      		ldi r18,hi8(159999)
 480 0142 82E0      		ldi r24,hlo8(159999)
 481 0144 F150      		1: subi r31,1
 482 0146 2040      		sbci r18,0
 483 0148 8040      		sbci r24,0
 484 014a 01F4      		brne 1b
 485 014c 00C0      		rjmp .
 486 014e 0000      		nop
 487               	.LBE43:
 488               	.LBE42:
 489               		.stabs	"main.cpp",132,0,0,.Ltext10
 490               	.Ltext10:
 128:main.cpp      ****         {
 129:main.cpp      ****             _delay_ms(100); //Pour pas qu'il detecte trop tot et qu'il tourne dans le mur.
 130:main.cpp      ****             
 131:main.cpp      ****             if(compteur >= 3)// Comme ça si l'arrêt est à la sorti du tunnel bein c'est ça
 491               		.stabn	68,0,131,.LM62-.LFBB2
 492               	.LM62:
 493 0150 1330      		cpi r17,lo8(3)
 494 0152 00F0      		brlo .+2
 495 0154 00C0      		rjmp .L11
 132:main.cpp      ****             {
 133:main.cpp      ****                 moteur.Avance(0);
 134:main.cpp      ****                 return 0;
 135:main.cpp      ****             }    
 136:main.cpp      ****             else if (directions[compteur] == 'd')
 496               		.stabn	68,0,136,.LM63-.LFBB2
 497               	.LM63:
 498 0156 E1E0      		ldi r30,lo8(1)
 499 0158 F0E0      		ldi r31,0
 500 015a EC0F      		add r30,r28
 501 015c FD1F      		adc r31,r29
 502 015e E10F      		add r30,r17
 503 0160 F11D      		adc r31,__zero_reg__
 504 0162 8081      		ld r24,Z
 505 0164 8436      		cpi r24,lo8(100)
 506 0166 01F4      		brne .L16
 137:main.cpp      ****             {
 138:main.cpp      ****                 moteur.pivotDroit(150);
 507               		.stabn	68,0,138,.LM64-.LFBB2
 508               	.LM64:
 509 0168 66E9      		ldi r22,lo8(-106)
 510 016a 70E0      		ldi r23,0
 511 016c CE01      		movw r24,r28
 512 016e 0596      		adiw r24,5
 513 0170 0E94 0000 		call _ZN3Pwm10pivotDroitEj
 514               	.LBB44:
 515               	.LBB45:
 516               		.stabs	"/usr/avr/include/util/delay.h",132,0,0,.Ltext11
 517               	.Ltext11:
 518               		.stabn	68,0,164,.LM65-.LFBB2
 519               	.LM65:
 520 0174 9FE7      		ldi r25,lo8(399999)
GAS LISTING /tmp/ccerPMfk.s 			page 16


 521 0176 EAE1      		ldi r30,hi8(399999)
 522 0178 F6E0      		ldi r31,hlo8(399999)
 523 017a 9150      		1: subi r25,1
 524 017c E040      		sbci r30,0
 525 017e F040      		sbci r31,0
 526 0180 01F4      		brne 1b
 527 0182 00C0      		rjmp .
 528 0184 0000      		nop
 529               	.L17:
 530               	.LBE45:
 531               	.LBE44:
 532               		.stabs	"main.cpp",132,0,0,.Ltext12
 533               	.Ltext12:
 139:main.cpp      ****                 _delay_ms(250);
 140:main.cpp      ****                // moteur.Avance(120);
 141:main.cpp      ****                 while(!(bit1 || bit2 || bit3 || bit4 || bit5))
 534               		.stabn	68,0,141,.LM66-.LFBB2
 535               	.LM66:
 536 0186 8091 0000 		lds r24,bit1
 537 018a 8823      		tst r24
 538 018c 01F0      		breq .L18
 539               	.L19:
 142:main.cpp      ****                 {
 143:main.cpp      ****                     lireDirection();
 144:main.cpp      ****                     moteur.Tourner_Gauche(170);
 145:main.cpp      ****                 }
 146:main.cpp      **** 					
 147:main.cpp      **** 		//_delay_ms(300);
 148:main.cpp      **** 		//moteur.Tourner_Gauche(150);
 149:main.cpp      **** 		//_delay_ms(200);
 150:main.cpp      ****             }
 151:main.cpp      ****             else if (directions[compteur] == 'g')
 152:main.cpp      ****             {
 153:main.cpp      **** 		moteur.pivotGauche(150);
 154:main.cpp      **** 		_delay_ms(250);
 155:main.cpp      **** 		//moteur.Avance(120);
 156:main.cpp      **** 		while(!(bit1 || bit2 || bit3 || bit4 || bit5))
 157:main.cpp      **** 		{
 158:main.cpp      ****                     lireDirection();
 159:main.cpp      ****                     moteur.Tourner_Gauche(170);
 160:main.cpp      **** 		}		
 161:main.cpp      **** 		//_delay_ms(300);
 162:main.cpp      **** 		//moteur.Tourner_Gauche(150);
 163:main.cpp      **** 		//_delay_ms(200);
 164:main.cpp      ****             }
 165:main.cpp      **** 				
 166:main.cpp      **** 		
 167:main.cpp      ****             compteur++;
 540               		.stabn	68,0,167,.LM67-.LFBB2
 541               	.LM67:
 542 018e 1F5F      		subi r17,lo8(-(1))
 543 0190 EE24      		clr r14
 544 0192 E394      		inc r14
 545 0194 00C0      		rjmp .L14
 546               	.L18:
 141:main.cpp      ****                 {
 547               		.stabn	68,0,141,.LM68-.LFBB2
GAS LISTING /tmp/ccerPMfk.s 			page 17


 548               	.LM68:
 549 0196 8091 0000 		lds r24,bit2
 550 019a 8111      		cpse r24,__zero_reg__
 551 019c 00C0      		rjmp .L19
 141:main.cpp      ****                 {
 552               		.stabn	68,0,141,.LM69-.LFBB2
 553               	.LM69:
 554 019e 8091 0000 		lds r24,bit3
 555 01a2 8111      		cpse r24,__zero_reg__
 556 01a4 00C0      		rjmp .L19
 141:main.cpp      ****                 {
 557               		.stabn	68,0,141,.LM70-.LFBB2
 558               	.LM70:
 559 01a6 8091 0000 		lds r24,bit4
 560 01aa 8111      		cpse r24,__zero_reg__
 561 01ac 00C0      		rjmp .L19
 141:main.cpp      ****                 {
 562               		.stabn	68,0,141,.LM71-.LFBB2
 563               	.LM71:
 564 01ae 8091 0000 		lds r24,bit5
 565 01b2 8111      		cpse r24,__zero_reg__
 566 01b4 00C0      		rjmp .L19
 143:main.cpp      ****                     moteur.Tourner_Gauche(170);
 567               		.stabn	68,0,143,.LM72-.LFBB2
 568               	.LM72:
 569 01b6 0E94 0000 		call _Z13lireDirectionv
 144:main.cpp      ****                 }
 570               		.stabn	68,0,144,.LM73-.LFBB2
 571               	.LM73:
 572 01ba 6AEA      		ldi r22,lo8(-86)
 573 01bc 70E0      		ldi r23,0
 574 01be CE01      		movw r24,r28
 575 01c0 0596      		adiw r24,5
 576 01c2 0E94 0000 		call _ZN3Pwm14Tourner_GaucheEj
 577 01c6 00C0      		rjmp .L17
 578               	.L16:
 151:main.cpp      ****             {
 579               		.stabn	68,0,151,.LM74-.LFBB2
 580               	.LM74:
 581 01c8 8736      		cpi r24,lo8(103)
 582 01ca 01F4      		brne .L19
 153:main.cpp      **** 		_delay_ms(250);
 583               		.stabn	68,0,153,.LM75-.LFBB2
 584               	.LM75:
 585 01cc 66E9      		ldi r22,lo8(-106)
 586 01ce 70E0      		ldi r23,0
 587 01d0 CE01      		movw r24,r28
 588 01d2 0596      		adiw r24,5
 589 01d4 0E94 0000 		call _ZN3Pwm11pivotGaucheEj
 590               	.LBB46:
 591               	.LBB47:
 592               		.stabs	"/usr/avr/include/util/delay.h",132,0,0,.Ltext13
 593               	.Ltext13:
 594               		.stabn	68,0,164,.LM76-.LFBB2
 595               	.LM76:
 596 01d8 2FE7      		ldi r18,lo8(399999)
 597 01da 8AE1      		ldi r24,hi8(399999)
GAS LISTING /tmp/ccerPMfk.s 			page 18


 598 01dc 96E0      		ldi r25,hlo8(399999)
 599 01de 2150      		1: subi r18,1
 600 01e0 8040      		sbci r24,0
 601 01e2 9040      		sbci r25,0
 602 01e4 01F4      		brne 1b
 603 01e6 00C0      		rjmp .
 604 01e8 0000      		nop
 605               	.L21:
 606               	.LBE47:
 607               	.LBE46:
 608               		.stabs	"main.cpp",132,0,0,.Ltext14
 609               	.Ltext14:
 156:main.cpp      **** 		{
 610               		.stabn	68,0,156,.LM77-.LFBB2
 611               	.LM77:
 612 01ea 8091 0000 		lds r24,bit1
 613 01ee 8111      		cpse r24,__zero_reg__
 614 01f0 00C0      		rjmp .L19
 156:main.cpp      **** 		{
 615               		.stabn	68,0,156,.LM78-.LFBB2
 616               	.LM78:
 617 01f2 8091 0000 		lds r24,bit2
 618 01f6 8111      		cpse r24,__zero_reg__
 619 01f8 00C0      		rjmp .L19
 156:main.cpp      **** 		{
 620               		.stabn	68,0,156,.LM79-.LFBB2
 621               	.LM79:
 622 01fa 8091 0000 		lds r24,bit3
 623 01fe 8111      		cpse r24,__zero_reg__
 624 0200 00C0      		rjmp .L19
 156:main.cpp      **** 		{
 625               		.stabn	68,0,156,.LM80-.LFBB2
 626               	.LM80:
 627 0202 8091 0000 		lds r24,bit4
 628 0206 8111      		cpse r24,__zero_reg__
 629 0208 00C0      		rjmp .L19
 156:main.cpp      **** 		{
 630               		.stabn	68,0,156,.LM81-.LFBB2
 631               	.LM81:
 632 020a 8091 0000 		lds r24,bit5
 633 020e 8111      		cpse r24,__zero_reg__
 634 0210 00C0      		rjmp .L19
 158:main.cpp      ****                     moteur.Tourner_Gauche(170);
 635               		.stabn	68,0,158,.LM82-.LFBB2
 636               	.LM82:
 637 0212 0E94 0000 		call _Z13lireDirectionv
 159:main.cpp      **** 		}		
 638               		.stabn	68,0,159,.LM83-.LFBB2
 639               	.LM83:
 640 0216 6AEA      		ldi r22,lo8(-86)
 641 0218 70E0      		ldi r23,0
 642 021a CE01      		movw r24,r28
 643 021c 0596      		adiw r24,5
 644 021e 0E94 0000 		call _ZN3Pwm14Tourner_GaucheEj
 645 0222 00C0      		rjmp .L21
 646               	.L14:
 168:main.cpp      ****         }
GAS LISTING /tmp/ccerPMfk.s 			page 19


 169:main.cpp      ****         
 170:main.cpp      ****         /////////////////// FIN DES AJOUTS EXCITANTS ///////////////////////////
 171:main.cpp      ****         
 172:main.cpp      ****         if(bit1 && !(bit2 && bit3 && bit4 && bit5)) //sensor gauche
 647               		.stabn	68,0,172,.LM84-.LFBB2
 648               	.LM84:
 649 0224 8091 0000 		lds r24,bit1
 650 0228 8823      		tst r24
 651 022a 01F0      		breq .L23
 652               		.stabn	68,0,172,.LM85-.LFBB2
 653               	.LM85:
 654 022c 8091 0000 		lds r24,bit2
 655 0230 8823      		tst r24
 656 0232 01F0      		breq .L24
 657               		.stabn	68,0,172,.LM86-.LFBB2
 658               	.LM86:
 659 0234 8091 0000 		lds r24,bit3
 660 0238 8823      		tst r24
 661 023a 01F0      		breq .L24
 662               		.stabn	68,0,172,.LM87-.LFBB2
 663               	.LM87:
 664 023c 8091 0000 		lds r24,bit4
 665 0240 8823      		tst r24
 666 0242 01F0      		breq .L24
 667               		.stabn	68,0,172,.LM88-.LFBB2
 668               	.LM88:
 669 0244 8091 0000 		lds r24,bit5
 670 0248 8823      		tst r24
 671 024a 01F0      		breq .L24
 672               	.L23:
 173:main.cpp      ****         {
 174:main.cpp      ****             moteur.pivotGauche(130);
 175:main.cpp      ****           
 176:main.cpp      ****             
 177:main.cpp      ****         }
 178:main.cpp      ****         else if(bit1 && bit2 && !(bit3 && bit4 && bit5)) //sensor gauche et Mgauche
 673               		.stabn	68,0,178,.LM89-.LFBB2
 674               	.LM89:
 675 024c 8091 0000 		lds r24,bit1
 676 0250 8823      		tst r24
 677 0252 01F0      		breq .L25
 678               		.stabn	68,0,178,.LM90-.LFBB2
 679               	.LM90:
 680 0254 8091 0000 		lds r24,bit2
 681 0258 8823      		tst r24
 682 025a 01F0      		breq .L25
 683               		.stabn	68,0,178,.LM91-.LFBB2
 684               	.LM91:
 685 025c 8091 0000 		lds r24,bit3
 686 0260 8823      		tst r24
 687 0262 01F0      		breq .L28
 688               		.stabn	68,0,178,.LM92-.LFBB2
 689               	.LM92:
 690 0264 8091 0000 		lds r24,bit4
 691 0268 8823      		tst r24
 692 026a 01F0      		breq .L28
 693               		.stabn	68,0,178,.LM93-.LFBB2
GAS LISTING /tmp/ccerPMfk.s 			page 20


 694               	.LM93:
 695 026c 8091 0000 		lds r24,bit5
 696 0270 8111      		cpse r24,__zero_reg__
 697 0272 00C0      		rjmp .L25
 698 0274 00C0      		rjmp .L28
 699               	.L24:
 174:main.cpp      ****           
 700               		.stabn	68,0,174,.LM94-.LFBB2
 701               	.LM94:
 702 0276 62E8      		ldi r22,lo8(-126)
 703 0278 70E0      		ldi r23,0
 704 027a CE01      		movw r24,r28
 705 027c 0596      		adiw r24,5
 706 027e 0E94 0000 		call _ZN3Pwm11pivotGaucheEj
 707 0282 00C0      		rjmp .L8
 708               	.L25:
 179:main.cpp      ****         {
 180:main.cpp      ****             moteur.Tourner_Gauche(120);
 181:main.cpp      ****         }
 182:main.cpp      ****         else if(!bit1 && bit2 && !(bit3 && bit4 && bit5)) //sensor Mgauche
 709               		.stabn	68,0,182,.LM95-.LFBB2
 710               	.LM95:
 711 0284 8091 0000 		lds r24,bit1
 712 0288 8111      		cpse r24,__zero_reg__
 713 028a 00C0      		rjmp .L27
 714               		.stabn	68,0,182,.LM96-.LFBB2
 715               	.LM96:
 716 028c 8091 0000 		lds r24,bit2
 717 0290 8823      		tst r24
 718 0292 01F0      		breq .L27
 719               		.stabn	68,0,182,.LM97-.LFBB2
 720               	.LM97:
 721 0294 8091 0000 		lds r24,bit3
 722 0298 8823      		tst r24
 723 029a 01F0      		breq .L28
 724               		.stabn	68,0,182,.LM98-.LFBB2
 725               	.LM98:
 726 029c 8091 0000 		lds r24,bit4
 727 02a0 8823      		tst r24
 728 02a2 01F0      		breq .L28
 729               		.stabn	68,0,182,.LM99-.LFBB2
 730               	.LM99:
 731 02a4 8091 0000 		lds r24,bit5
 732 02a8 8111      		cpse r24,__zero_reg__
 733 02aa 00C0      		rjmp .L27
 734               	.L28:
 183:main.cpp      ****         {
 184:main.cpp      ****             moteur.Tourner_Gauche(120);
 735               		.stabn	68,0,184,.LM100-.LFBB2
 736               	.LM100:
 737 02ac 68E7      		ldi r22,lo8(120)
 738 02ae 70E0      		ldi r23,0
 739 02b0 CE01      		movw r24,r28
 740 02b2 0596      		adiw r24,5
 741 02b4 0E94 0000 		call _ZN3Pwm14Tourner_GaucheEj
 742 02b8 00C0      		rjmp .L8
 743               	.L27:
GAS LISTING /tmp/ccerPMfk.s 			page 21


 185:main.cpp      ****         }
 186:main.cpp      ****         
 187:main.cpp      ****         else if (!(bit1 && bit2 && bit3 && bit4) && bit5) //sensor droite
 744               		.stabn	68,0,187,.LM101-.LFBB2
 745               	.LM101:
 746 02ba 8091 0000 		lds r24,bit1
 747 02be 8823      		tst r24
 748 02c0 01F0      		breq .L29
 749               		.stabn	68,0,187,.LM102-.LFBB2
 750               	.LM102:
 751 02c2 8091 0000 		lds r24,bit2
 752 02c6 8823      		tst r24
 753 02c8 01F0      		breq .L29
 754               		.stabn	68,0,187,.LM103-.LFBB2
 755               	.LM103:
 756 02ca 8091 0000 		lds r24,bit3
 757 02ce 8823      		tst r24
 758 02d0 01F0      		breq .L29
 759               		.stabn	68,0,187,.LM104-.LFBB2
 760               	.LM104:
 761 02d2 8091 0000 		lds r24,bit4
 762 02d6 8111      		cpse r24,__zero_reg__
 763 02d8 00C0      		rjmp .L30
 764               	.L29:
 765               		.stabn	68,0,187,.LM105-.LFBB2
 766               	.LM105:
 767 02da 8091 0000 		lds r24,bit5
 768 02de 8823      		tst r24
 769 02e0 01F0      		breq .L30
 188:main.cpp      ****         {
 189:main.cpp      ****             moteur.pivotDroit(130);
 770               		.stabn	68,0,189,.LM106-.LFBB2
 771               	.LM106:
 772 02e2 62E8      		ldi r22,lo8(-126)
 773 02e4 70E0      		ldi r23,0
 774 02e6 00C0      		rjmp .L196
 775               	.L30:
 190:main.cpp      ****           
 191:main.cpp      ****         }
 192:main.cpp      ****         else if (!(bit1 && bit2 && bit3) && bit4 && bit5) //sensor droite et Mdroite
 776               		.stabn	68,0,192,.LM107-.LFBB2
 777               	.LM107:
 778 02e8 8091 0000 		lds r24,bit1
 779 02ec 8823      		tst r24
 780 02ee 01F0      		breq .L32
 781               		.stabn	68,0,192,.LM108-.LFBB2
 782               	.LM108:
 783 02f0 8091 0000 		lds r24,bit2
 784 02f4 8823      		tst r24
 785 02f6 01F0      		breq .L32
 786               		.stabn	68,0,192,.LM109-.LFBB2
 787               	.LM109:
 788 02f8 8091 0000 		lds r24,bit3
 789 02fc 8111      		cpse r24,__zero_reg__
 790 02fe 00C0      		rjmp .L33
 791               	.L32:
 792               		.stabn	68,0,192,.LM110-.LFBB2
GAS LISTING /tmp/ccerPMfk.s 			page 22


 793               	.LM110:
 794 0300 8091 0000 		lds r24,bit4
 795 0304 8823      		tst r24
 796 0306 01F0      		breq .L33
 797               		.stabn	68,0,192,.LM111-.LFBB2
 798               	.LM111:
 799 0308 8091 0000 		lds r24,bit5
 800 030c 8111      		cpse r24,__zero_reg__
 801 030e 00C0      		rjmp .L185
 802               	.L33:
 193:main.cpp      ****         {
 194:main.cpp      ****             moteur.Tourner_Droite(120);
 195:main.cpp      ****         }
 196:main.cpp      ****         else if (!(bit1 && bit2 && bit3) && bit4 && !bit5) //sensor Mdroite
 803               		.stabn	68,0,196,.LM112-.LFBB2
 804               	.LM112:
 805 0310 8091 0000 		lds r24,bit1
 806 0314 8823      		tst r24
 807 0316 01F0      		breq .L35
 808               		.stabn	68,0,196,.LM113-.LFBB2
 809               	.LM113:
 810 0318 8091 0000 		lds r24,bit2
 811 031c 8823      		tst r24
 812 031e 01F0      		breq .L35
 813               		.stabn	68,0,196,.LM114-.LFBB2
 814               	.LM114:
 815 0320 8091 0000 		lds r24,bit3
 816 0324 8111      		cpse r24,__zero_reg__
 817 0326 00C0      		rjmp .L36
 818               	.L35:
 819               		.stabn	68,0,196,.LM115-.LFBB2
 820               	.LM115:
 821 0328 8091 0000 		lds r24,bit4
 822 032c 8823      		tst r24
 823 032e 01F0      		breq .L36
 824               		.stabn	68,0,196,.LM116-.LFBB2
 825               	.LM116:
 826 0330 8091 0000 		lds r24,bit5
 827 0334 8111      		cpse r24,__zero_reg__
 828 0336 00C0      		rjmp .L36
 829               	.L185:
 197:main.cpp      ****         {
 198:main.cpp      ****             moteur.Tourner_Droite(120);
 830               		.stabn	68,0,198,.LM117-.LFBB2
 831               	.LM117:
 832 0338 68E7      		ldi r22,lo8(120)
 833 033a 70E0      		ldi r23,0
 834 033c CE01      		movw r24,r28
 835 033e 0596      		adiw r24,5
 836 0340 0E94 0000 		call _ZN3Pwm14Tourner_DroiteEj
 837 0344 00C0      		rjmp .L8
 838               	.L36:
 199:main.cpp      ****         }
 200:main.cpp      ****         
 201:main.cpp      **** 	else if (!bit1 && !bit2 && bit3 && !bit4 && !bit5) //sensor centre
 839               		.stabn	68,0,201,.LM118-.LFBB2
 840               	.LM118:
GAS LISTING /tmp/ccerPMfk.s 			page 23


 841 0346 8091 0000 		lds r24,bit1
 842 034a 8111      		cpse r24,__zero_reg__
 843 034c 00C0      		rjmp .L38
 844               		.stabn	68,0,201,.LM119-.LFBB2
 845               	.LM119:
 846 034e 8091 0000 		lds r24,bit2
 847 0352 8111      		cpse r24,__zero_reg__
 848 0354 00C0      		rjmp .L38
 849               		.stabn	68,0,201,.LM120-.LFBB2
 850               	.LM120:
 851 0356 8091 0000 		lds r24,bit3
 852 035a 8823      		tst r24
 853 035c 01F0      		breq .L38
 854               		.stabn	68,0,201,.LM121-.LFBB2
 855               	.LM121:
 856 035e 8091 0000 		lds r24,bit4
 857 0362 8111      		cpse r24,__zero_reg__
 858 0364 00C0      		rjmp .L38
 859               		.stabn	68,0,201,.LM122-.LFBB2
 860               	.LM122:
 861 0366 8091 0000 		lds r24,bit5
 862 036a 8823      		tst r24
 863 036c 01F0      		breq .L188
 864               	.L38:
 202:main.cpp      **** 	{
 203:main.cpp      **** 		moteur.Avance(120);
 204:main.cpp      **** 	}
 205:main.cpp      **** 	else if (!bit1 && bit2 && bit3 && !bit4 && !bit5) //sensor centre et Mgauche
 865               		.stabn	68,0,205,.LM123-.LFBB2
 866               	.LM123:
 867 036e 8091 0000 		lds r24,bit1
 868 0372 8111      		cpse r24,__zero_reg__
 869 0374 00C0      		rjmp .L40
 870               		.stabn	68,0,205,.LM124-.LFBB2
 871               	.LM124:
 872 0376 8091 0000 		lds r24,bit2
 873 037a 8823      		tst r24
 874 037c 01F0      		breq .L40
 875               		.stabn	68,0,205,.LM125-.LFBB2
 876               	.LM125:
 877 037e 8091 0000 		lds r24,bit3
 878 0382 8823      		tst r24
 879 0384 01F0      		breq .L40
 880               		.stabn	68,0,205,.LM126-.LFBB2
 881               	.LM126:
 882 0386 8091 0000 		lds r24,bit4
 883 038a 8111      		cpse r24,__zero_reg__
 884 038c 00C0      		rjmp .L40
 885               		.stabn	68,0,205,.LM127-.LFBB2
 886               	.LM127:
 887 038e 8091 0000 		lds r24,bit5
 888 0392 8823      		tst r24
 889 0394 01F0      		breq .L188
 890               	.L40:
 206:main.cpp      **** 	{
 207:main.cpp      **** 		moteur.Avance(120);
 208:main.cpp      **** 	}
GAS LISTING /tmp/ccerPMfk.s 			page 24


 209:main.cpp      **** 	else if (!bit1 && !bit2 && bit3 && bit4 && !bit5) //sensor centre et Mdroite
 891               		.stabn	68,0,209,.LM128-.LFBB2
 892               	.LM128:
 893 0396 8091 0000 		lds r24,bit1
 894 039a 8111      		cpse r24,__zero_reg__
 895 039c 00C0      		rjmp .L42
 896               		.stabn	68,0,209,.LM129-.LFBB2
 897               	.LM129:
 898 039e 8091 0000 		lds r24,bit2
 899 03a2 8111      		cpse r24,__zero_reg__
 900 03a4 00C0      		rjmp .L42
 901               		.stabn	68,0,209,.LM130-.LFBB2
 902               	.LM130:
 903 03a6 8091 0000 		lds r24,bit3
 904 03aa 8823      		tst r24
 905 03ac 01F0      		breq .L42
 906               		.stabn	68,0,209,.LM131-.LFBB2
 907               	.LM131:
 908 03ae 8091 0000 		lds r24,bit4
 909 03b2 8823      		tst r24
 910 03b4 01F0      		breq .L42
 911               		.stabn	68,0,209,.LM132-.LFBB2
 912               	.LM132:
 913 03b6 8091 0000 		lds r24,bit5
 914 03ba 8111      		cpse r24,__zero_reg__
 915 03bc 00C0      		rjmp .L42
 916               	.L188:
 210:main.cpp      **** 	{
 211:main.cpp      **** 		moteur.Avance(120);
 917               		.stabn	68,0,211,.LM133-.LFBB2
 918               	.LM133:
 919 03be 68E7      		ldi r22,lo8(120)
 920 03c0 70E0      		ldi r23,0
 921 03c2 CE01      		movw r24,r28
 922 03c4 0596      		adiw r24,5
 923 03c6 0E94 0000 		call _ZN3Pwm6AvanceEj
 924 03ca 00C0      		rjmp .L8
 925               	.L42:
 212:main.cpp      **** 	}
 213:main.cpp      ****     
 214:main.cpp      **** 	else if (!bit1 && !bit2 && bit3 && bit4 && bit5) //sensor centre et Mdroite et droite (coin)
 926               		.stabn	68,0,214,.LM134-.LFBB2
 927               	.LM134:
 928 03cc 8091 0000 		lds r24,bit1
 929 03d0 8111      		cpse r24,__zero_reg__
 930 03d2 00C0      		rjmp .L44
 931               		.stabn	68,0,214,.LM135-.LFBB2
 932               	.LM135:
 933 03d4 8091 0000 		lds r24,bit2
 934 03d8 8111      		cpse r24,__zero_reg__
 935 03da 00C0      		rjmp .L44
 936               		.stabn	68,0,214,.LM136-.LFBB2
 937               	.LM136:
 938 03dc 8091 0000 		lds r24,bit3
 939 03e0 8823      		tst r24
 940 03e2 01F0      		breq .L44
 941               		.stabn	68,0,214,.LM137-.LFBB2
GAS LISTING /tmp/ccerPMfk.s 			page 25


 942               	.LM137:
 943 03e4 8091 0000 		lds r24,bit4
 944 03e8 8823      		tst r24
 945 03ea 01F0      		breq .L44
 946               		.stabn	68,0,214,.LM138-.LFBB2
 947               	.LM138:
 948 03ec 8091 0000 		lds r24,bit5
 949 03f0 8823      		tst r24
 950 03f2 01F0      		breq .L44
 215:main.cpp      **** 	{
 216:main.cpp      ****             moteur.pivotDroit(150);
 951               		.stabn	68,0,216,.LM139-.LFBB2
 952               	.LM139:
 953 03f4 66E9      		ldi r22,lo8(-106)
 954 03f6 70E0      		ldi r23,0
 955               	.L196:
 956 03f8 CE01      		movw r24,r28
 957 03fa 0596      		adiw r24,5
 958 03fc 0E94 0000 		call _ZN3Pwm10pivotDroitEj
 959 0400 00C0      		rjmp .L8
 960               	.L44:
 217:main.cpp      **** 	}
 218:main.cpp      **** 		
 219:main.cpp      **** 		
 220:main.cpp      **** 	else if (!(bit1 && bit2 && bit3 && bit4 && bit5))	//Aucun sensor (aka embranchement Y)
 961               		.stabn	68,0,220,.LM140-.LFBB2
 962               	.LM140:
 963 0402 8091 0000 		lds r24,bit1
 964 0406 8823      		tst r24
 965 0408 01F0      		breq .L46
 966               		.stabn	68,0,220,.LM141-.LFBB2
 967               	.LM141:
 968 040a 8091 0000 		lds r24,bit2
 969 040e 8823      		tst r24
 970 0410 01F0      		breq .L46
 971               		.stabn	68,0,220,.LM142-.LFBB2
 972               	.LM142:
 973 0412 8091 0000 		lds r24,bit3
 974 0416 8823      		tst r24
 975 0418 01F0      		breq .L46
 976               		.stabn	68,0,220,.LM143-.LFBB2
 977               	.LM143:
 978 041a 8091 0000 		lds r24,bit4
 979 041e 8823      		tst r24
 980 0420 01F0      		breq .L46
 981               		.stabn	68,0,220,.LM144-.LFBB2
 982               	.LM144:
 983 0422 8091 0000 		lds r24,bit5
 984 0426 8111      		cpse r24,__zero_reg__
 985 0428 00C0      		rjmp .L8
 986               	.L46:
 221:main.cpp      **** 	{
 222:main.cpp      **** 			moteur.Avance(120);
 987               		.stabn	68,0,222,.LM145-.LFBB2
 988               	.LM145:
 989 042a 68E7      		ldi r22,lo8(120)
 990 042c 70E0      		ldi r23,0
GAS LISTING /tmp/ccerPMfk.s 			page 26


 991 042e CE01      		movw r24,r28
 992 0430 0596      		adiw r24,5
 993 0432 0E94 0000 		call _ZN3Pwm6AvanceEj
 994               	.LBB48:
 995               	.LBB49:
 996               		.stabs	"/usr/avr/include/util/delay.h",132,0,0,.Ltext15
 997               	.Ltext15:
 998               		.stabn	68,0,164,.LM146-.LFBB2
 999               	.LM146:
 1000 0436 FFEF      		ldi r31,lo8(479999)
 1001 0438 22E5      		ldi r18,hi8(479999)
 1002 043a 87E0      		ldi r24,hlo8(479999)
 1003 043c F150      		1: subi r31,1
 1004 043e 2040      		sbci r18,0
 1005 0440 8040      		sbci r24,0
 1006 0442 01F4      		brne 1b
 1007 0444 00C0      		rjmp .
 1008 0446 0000      		nop
 1009               	.LBE49:
 1010               	.LBE48:
 1011               		.stabs	"main.cpp",132,0,0,.Ltext16
 1012               	.Ltext16:
 223:main.cpp      **** 			_delay_ms(300);
 224:main.cpp      **** 			
 225:main.cpp      **** 			if (!(bit1 && bit2 && bit3 && bit4 && bit5))
 1013               		.stabn	68,0,225,.LM147-.LFBB2
 1014               	.LM147:
 1015 0448 8091 0000 		lds r24,bit1
 1016 044c 8823      		tst r24
 1017 044e 01F0      		breq .L48
 1018               		.stabn	68,0,225,.LM148-.LFBB2
 1019               	.LM148:
 1020 0450 8091 0000 		lds r24,bit2
 1021 0454 8823      		tst r24
 1022 0456 01F0      		breq .L48
 1023               		.stabn	68,0,225,.LM149-.LFBB2
 1024               	.LM149:
 1025 0458 8091 0000 		lds r24,bit3
 1026 045c 8823      		tst r24
 1027 045e 01F0      		breq .L48
 1028               		.stabn	68,0,225,.LM150-.LFBB2
 1029               	.LM150:
 1030 0460 8091 0000 		lds r24,bit4
 1031 0464 8823      		tst r24
 1032 0466 01F0      		breq .L48
 1033               		.stabn	68,0,225,.LM151-.LFBB2
 1034               	.LM151:
 1035 0468 8091 0000 		lds r24,bit5
 1036 046c 8111      		cpse r24,__zero_reg__
 1037 046e 00C0      		rjmp .L8
 1038               	.L48:
 226:main.cpp      **** 			{
 227:main.cpp      ****                             
 228:main.cpp      ****                                
 229:main.cpp      **** 				if (directions[compteur] == 'd')
 1039               		.stabn	68,0,229,.LM152-.LFBB2
 1040               	.LM152:
GAS LISTING /tmp/ccerPMfk.s 			page 27


 1041 0470 E1E0      		ldi r30,lo8(1)
 1042 0472 F0E0      		ldi r31,0
 1043 0474 EC0F      		add r30,r28
 1044 0476 FD1F      		adc r31,r29
 1045 0478 E10F      		add r30,r17
 1046 047a F11D      		adc r31,__zero_reg__
 1047 047c 8081      		ld r24,Z
 1048 047e 8436      		cpi r24,lo8(100)
 1049 0480 01F4      		brne .L195
 230:main.cpp      **** 				{
 231:main.cpp      **** 					moteur.pivotDroit(150);
 1050               		.stabn	68,0,231,.LM153-.LFBB2
 1051               	.LM153:
 1052 0482 66E9      		ldi r22,lo8(-106)
 1053 0484 70E0      		ldi r23,0
 1054 0486 CE01      		movw r24,r28
 1055 0488 0596      		adiw r24,5
 1056 048a 0E94 0000 		call _ZN3Pwm10pivotDroitEj
 1057               	.LBB50:
 1058               	.LBB51:
 1059               		.stabs	"/usr/avr/include/util/delay.h",132,0,0,.Ltext17
 1060               	.Ltext17:
 1061               		.stabn	68,0,164,.LM154-.LFBB2
 1062               	.LM154:
 1063 048e EFE7      		ldi r30,lo8(399999)
 1064 0490 FAE1      		ldi r31,hi8(399999)
 1065 0492 26E0      		ldi r18,hlo8(399999)
 1066 0494 E150      		1: subi r30,1
 1067 0496 F040      		sbci r31,0
 1068 0498 2040      		sbci r18,0
 1069 049a 01F4      		brne 1b
 1070 049c 00C0      		rjmp .
 1071 049e 0000      		nop
 1072               	.LBE51:
 1073               	.LBE50:
 1074               		.stabs	"main.cpp",132,0,0,.Ltext18
 1075               	.Ltext18:
 232:main.cpp      **** 					_delay_ms(250);
 233:main.cpp      **** 					moteur.Avance(120);
 1076               		.stabn	68,0,233,.LM155-.LFBB2
 1077               	.LM155:
 1078 04a0 68E7      		ldi r22,lo8(120)
 1079 04a2 70E0      		ldi r23,0
 1080 04a4 CE01      		movw r24,r28
 1081 04a6 0596      		adiw r24,5
 1082 04a8 0E94 0000 		call _ZN3Pwm6AvanceEj
 1083               	.L49:
 234:main.cpp      **** 					while(!(bit1 || bit2 || bit3 || bit4 || bit5))
 1084               		.stabn	68,0,234,.LM156-.LFBB2
 1085               	.LM156:
 1086 04ac 8091 0000 		lds r24,bit1
 1087 04b0 8823      		tst r24
 1088 04b2 01F0      		breq .L50
 1089               	.L51:
 235:main.cpp      **** 					{
 236:main.cpp      **** 						lireDirection();
 237:main.cpp      **** 						
GAS LISTING /tmp/ccerPMfk.s 			page 28


 238:main.cpp      **** 					}
 239:main.cpp      **** 					
 240:main.cpp      **** 					//_delay_ms(300);
 241:main.cpp      **** 					//moteur.Tourner_Gauche(150);
 242:main.cpp      **** 					//_delay_ms(200);
 243:main.cpp      **** 				}
 244:main.cpp      **** 				else if (directions[compteur] == 'g')
 245:main.cpp      **** 				{
 246:main.cpp      **** 					moteur.pivotGauche(150);
 247:main.cpp      **** 					_delay_ms(250);
 248:main.cpp      **** 					
 249:main.cpp      **** 					moteur.Avance(120);
 250:main.cpp      **** 					while(!(bit1 || bit2 || bit3 || bit4 || bit5))
 251:main.cpp      **** 					{
 252:main.cpp      **** 						lireDirection();
 253:main.cpp      **** 						
 254:main.cpp      **** 					}
 255:main.cpp      **** 						
 256:main.cpp      **** 					//_delay_ms(300);
 257:main.cpp      **** 					//moteur.Tourner_Gauche(150);
 258:main.cpp      **** 					//_delay_ms(200);
 259:main.cpp      **** 				}
 260:main.cpp      **** 				
 261:main.cpp      **** 		
 262:main.cpp      **** 				compteur++;
 1090               		.stabn	68,0,262,.LM157-.LFBB2
 1091               	.LM157:
 1092 04b4 1F5F      		subi r17,lo8(-(1))
 1093 04b6 00C0      		rjmp .L8
 1094               	.L50:
 234:main.cpp      **** 					while(!(bit1 || bit2 || bit3 || bit4 || bit5))
 1095               		.stabn	68,0,234,.LM158-.LFBB2
 1096               	.LM158:
 1097 04b8 8091 0000 		lds r24,bit2
 1098 04bc 8111      		cpse r24,__zero_reg__
 1099 04be 00C0      		rjmp .L51
 234:main.cpp      **** 					while(!(bit1 || bit2 || bit3 || bit4 || bit5))
 1100               		.stabn	68,0,234,.LM159-.LFBB2
 1101               	.LM159:
 1102 04c0 8091 0000 		lds r24,bit3
 1103 04c4 8111      		cpse r24,__zero_reg__
 1104 04c6 00C0      		rjmp .L51
 234:main.cpp      **** 					while(!(bit1 || bit2 || bit3 || bit4 || bit5))
 1105               		.stabn	68,0,234,.LM160-.LFBB2
 1106               	.LM160:
 1107 04c8 8091 0000 		lds r24,bit4
 1108 04cc 8111      		cpse r24,__zero_reg__
 1109 04ce 00C0      		rjmp .L51
 234:main.cpp      **** 					while(!(bit1 || bit2 || bit3 || bit4 || bit5))
 1110               		.stabn	68,0,234,.LM161-.LFBB2
 1111               	.LM161:
 1112 04d0 8091 0000 		lds r24,bit5
 1113 04d4 8111      		cpse r24,__zero_reg__
 1114 04d6 00C0      		rjmp .L51
 236:main.cpp      **** 						
 1115               		.stabn	68,0,236,.LM162-.LFBB2
 1116               	.LM162:
GAS LISTING /tmp/ccerPMfk.s 			page 29


 1117 04d8 0E94 0000 		call _Z13lireDirectionv
 1118 04dc 00C0      		rjmp .L49
 1119               	.L195:
 244:main.cpp      **** 				{
 1120               		.stabn	68,0,244,.LM163-.LFBB2
 1121               	.LM163:
 1122 04de 8736      		cpi r24,lo8(103)
 1123 04e0 01F4      		brne .L51
 246:main.cpp      **** 					_delay_ms(250);
 1124               		.stabn	68,0,246,.LM164-.LFBB2
 1125               	.LM164:
 1126 04e2 66E9      		ldi r22,lo8(-106)
 1127 04e4 70E0      		ldi r23,0
 1128 04e6 CE01      		movw r24,r28
 1129 04e8 0596      		adiw r24,5
 1130 04ea 0E94 0000 		call _ZN3Pwm11pivotGaucheEj
 1131               	.LBB52:
 1132               	.LBB53:
 1133               		.stabs	"/usr/avr/include/util/delay.h",132,0,0,.Ltext19
 1134               	.Ltext19:
 1135               		.stabn	68,0,164,.LM165-.LFBB2
 1136               	.LM165:
 1137 04ee 8FE7      		ldi r24,lo8(399999)
 1138 04f0 9AE1      		ldi r25,hi8(399999)
 1139 04f2 E6E0      		ldi r30,hlo8(399999)
 1140 04f4 8150      		1: subi r24,1
 1141 04f6 9040      		sbci r25,0
 1142 04f8 E040      		sbci r30,0
 1143 04fa 01F4      		brne 1b
 1144 04fc 00C0      		rjmp .
 1145 04fe 0000      		nop
 1146               	.LBE53:
 1147               	.LBE52:
 1148               		.stabs	"main.cpp",132,0,0,.Ltext20
 1149               	.Ltext20:
 249:main.cpp      **** 					while(!(bit1 || bit2 || bit3 || bit4 || bit5))
 1150               		.stabn	68,0,249,.LM166-.LFBB2
 1151               	.LM166:
 1152 0500 68E7      		ldi r22,lo8(120)
 1153 0502 70E0      		ldi r23,0
 1154 0504 CE01      		movw r24,r28
 1155 0506 0596      		adiw r24,5
 1156 0508 0E94 0000 		call _ZN3Pwm6AvanceEj
 1157               	.L53:
 250:main.cpp      **** 					{
 1158               		.stabn	68,0,250,.LM167-.LFBB2
 1159               	.LM167:
 1160 050c 8091 0000 		lds r24,bit1
 1161 0510 8111      		cpse r24,__zero_reg__
 1162 0512 00C0      		rjmp .L51
 250:main.cpp      **** 					{
 1163               		.stabn	68,0,250,.LM168-.LFBB2
 1164               	.LM168:
 1165 0514 8091 0000 		lds r24,bit2
 1166 0518 8111      		cpse r24,__zero_reg__
 1167 051a 00C0      		rjmp .L51
 250:main.cpp      **** 					{
GAS LISTING /tmp/ccerPMfk.s 			page 30


 1168               		.stabn	68,0,250,.LM169-.LFBB2
 1169               	.LM169:
 1170 051c 8091 0000 		lds r24,bit3
 1171 0520 8111      		cpse r24,__zero_reg__
 1172 0522 00C0      		rjmp .L51
 250:main.cpp      **** 					{
 1173               		.stabn	68,0,250,.LM170-.LFBB2
 1174               	.LM170:
 1175 0524 8091 0000 		lds r24,bit4
 1176 0528 8111      		cpse r24,__zero_reg__
 1177 052a 00C0      		rjmp .L51
 250:main.cpp      **** 					{
 1178               		.stabn	68,0,250,.LM171-.LFBB2
 1179               	.LM171:
 1180 052c 8091 0000 		lds r24,bit5
 1181 0530 8111      		cpse r24,__zero_reg__
 1182 0532 00C0      		rjmp .L51
 252:main.cpp      **** 						
 1183               		.stabn	68,0,252,.LM172-.LFBB2
 1184               	.LM172:
 1185 0534 0E94 0000 		call _Z13lireDirectionv
 1186 0538 00C0      		rjmp .L53
 1187               	.L11:
 133:main.cpp      ****                 return 0;
 1188               		.stabn	68,0,133,.LM173-.LFBB2
 1189               	.LM173:
 1190 053a 60E0      		ldi r22,0
 1191 053c 70E0      		ldi r23,0
 1192 053e CE01      		movw r24,r28
 1193 0540 0596      		adiw r24,5
 1194 0542 0E94 0000 		call _ZN3Pwm6AvanceEj
  41:main.cpp      ****     uint8_t rapport;
 1195               		.stabn	68,0,41,.LM174-.LFBB2
 1196               	.LM174:
 1197 0546 CE01      		movw r24,r28
 1198 0548 0496      		adiw r24,4
 1199 054a 0E94 0000 		call _ZN3canD1Ev
  40:main.cpp      ****     can intensite;
 1200               		.stabn	68,0,40,.LM175-.LFBB2
 1201               	.LM175:
 1202 054e CE01      		movw r24,r28
 1203 0550 0596      		adiw r24,5
 1204 0552 0E94 0000 		call _ZN3PwmD1Ev
 263:main.cpp      **** 			}
 264:main.cpp      **** 			
 265:main.cpp      ****         }
 266:main.cpp      **** 		
 267:main.cpp      **** 	
 268:main.cpp      ****         
 269:main.cpp      ****     }
 1205               		.stabn	68,0,269,.LM176-.LFBB2
 1206               	.LM176:
 1207 0556 CE01      		movw r24,r28
 1208 0558 0696      		adiw r24,6
 1209 055a 0E94 0000 		call _ZN3DelD1Ev
 1210               	.LBE33:
 270:main.cpp      ****     
GAS LISTING /tmp/ccerPMfk.s 			page 31


 271:main.cpp      ****     
 272:main.cpp      ****     
 273:main.cpp      **** }
 1211               		.stabn	68,0,273,.LM177-.LFBB2
 1212               	.LM177:
 1213 055e 80E0      		ldi r24,0
 1214 0560 90E0      		ldi r25,0
 1215               	/* epilogue start */
 1216 0562 2696      		adiw r28,6
 1217 0564 0FB6      		in __tmp_reg__,__SREG__
 1218 0566 F894      		cli
 1219 0568 DEBF      		out __SP_H__,r29
 1220 056a 0FBE      		out __SREG__,__tmp_reg__
 1221 056c CDBF      		out __SP_L__,r28
 1222 056e DF91      		pop r29
 1223 0570 CF91      		pop r28
 1224 0572 1F91      		pop r17
 1225 0574 0F91      		pop r16
 1226 0576 FF90      		pop r15
 1227 0578 EF90      		pop r14
 1228 057a DF90      		pop r13
 1229 057c 0895      		ret
 1230               		.size	main, .-main
 1231               		.stabs	"del:(0,98)",128,0,39,6
 1232               		.stabs	"moteur:(0,123)",128,0,40,5
 1233               		.stabs	"intensite:(0,105)",128,0,41,4
 1234               		.stabs	"rapport:r(0,59)",64,0,42,16
 1235               		.stabs	"passeDansLeTunel:r(0,54)",64,0,45,15
 1236               		.stabs	"estSortiDuTunel:r(0,54)",64,0,46,14
 1237               		.stabs	"directions:(0,127)=ar(0,128)=r(0,128);0;0177777;;0;2;(0,17)",128,0,50,1
 1238               		.stabs	"enfonceDroit:r(0,54)",64,0,52,25
 1239               		.stabs	"enfonceGauche:r(0,54)",64,0,53,18
 1240               		.stabn	192,0,0,.LBB33-.LFBB2
 1241               		.stabn	224,0,0,.LBE33-.LFBB2
 1242               	.Lscope2:
 1243               		.stabs	"",36,0,0,.Lscope2-.LFBB2
 1244               		.stabd	78,0,0
 1245               	.global	bit5
 1246               		.section .bss
 1247               		.type	bit5, @object
 1248               		.size	bit5, 1
 1249               	bit5:
 1250 0000 00        		.zero	1
 1251               	.global	bit4
 1252               		.type	bit4, @object
 1253               		.size	bit4, 1
 1254               	bit4:
 1255 0001 00        		.zero	1
 1256               	.global	bit3
 1257               		.type	bit3, @object
 1258               		.size	bit3, 1
 1259               	bit3:
 1260 0002 00        		.zero	1
 1261               	.global	bit2
 1262               		.type	bit2, @object
 1263               		.size	bit2, 1
 1264               	bit2:
GAS LISTING /tmp/ccerPMfk.s 			page 32


 1265 0003 00        		.zero	1
 1266               	.global	bit1
 1267               		.type	bit1, @object
 1268               		.size	bit1, 1
 1269               	bit1:
 1270 0004 00        		.zero	1
 1271               		.stabs	"bit1:G(0,129)=B(0,54)",32,0,14,0
 1272               		.stabs	"bit2:G(0,129)",32,0,14,0
 1273               		.stabs	"bit3:G(0,129)",32,0,14,0
 1274               		.stabs	"bit4:G(0,129)",32,0,14,0
 1275               		.stabs	"bit5:G(0,129)",32,0,14,0
 1276               		.text
 1277               		.stabs	"",100,0,0,.Letext0
 1278               	.Letext0:
 1279               		.ident	"GCC: (Fedora 4.9.2-1.fc22) 4.9.2"
 1280               	.global __do_clear_bss
GAS LISTING /tmp/ccerPMfk.s 			page 33


DEFINED SYMBOLS
                            *ABS*:0000000000000000 main.cpp
     /tmp/ccerPMfk.s:2      *ABS*:000000000000003e __SP_H__
     /tmp/ccerPMfk.s:3      *ABS*:000000000000003d __SP_L__
     /tmp/ccerPMfk.s:4      *ABS*:000000000000003f __SREG__
     /tmp/ccerPMfk.s:5      *ABS*:0000000000000000 __tmp_reg__
     /tmp/ccerPMfk.s:6      *ABS*:0000000000000001 __zero_reg__
     /tmp/ccerPMfk.s:114    .text:0000000000000000 _Z13lireDirectionv
     /tmp/ccerPMfk.s:1269   .bss:0000000000000004 bit1
     /tmp/ccerPMfk.s:1264   .bss:0000000000000003 bit2
     /tmp/ccerPMfk.s:1259   .bss:0000000000000002 bit3
     /tmp/ccerPMfk.s:1254   .bss:0000000000000001 bit4
     /tmp/ccerPMfk.s:1249   .bss:0000000000000000 bit5
     /tmp/ccerPMfk.s:163    .text.startup:0000000000000000 main

UNDEFINED SYMBOLS
_ZN3DelC1Ev
_ZN3PwmC1Ev
_ZN3canC1Ev
_ZN3can7lectureEh
_ZN3Pwm10pivotDroitEj
_ZN3Pwm14Tourner_GaucheEj
_ZN3Pwm11pivotGaucheEj
_ZN3Pwm14Tourner_DroiteEj
_ZN3Pwm6AvanceEj
_ZN3canD1Ev
_ZN3PwmD1Ev
_ZN3DelD1Ev
__do_clear_bss
