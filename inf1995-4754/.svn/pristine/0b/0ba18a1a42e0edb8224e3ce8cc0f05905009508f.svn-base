#include "Memoire24CXXX.h"
#include "delControl.h" 
#include "Moteur.h" 
#include "can.h"
#include "minuterie.h" 
#include "Memoire24CXXX.h" 
#include "PwmSon.h"
#include "PWM.h"
#include <avr/io.h>
#include <avr/interrupt.h> 
#define F_CPU 8000000
#include <util/delay.h>
using namespace std;


void initialisationUART ( void ) {

// 2400 bauds. Nous vous donnons la valeur des deux

// premier registres pour vous éviter des complications

UBRR0H = 0;

UBRR0L = 0xCF;

// permettre la reception et la transmission par le UART0

UCSR0A = (1 << TXC0) | (1 << RXC0) ;

UCSR0B =  (1 << RXEN0) | (1 << TXEN0) ; // L'émetteur USART est activé en réglant TXEN dans UCSRB.

// Format des trames: 8 bits, 1 stop bits, none parity

UCSR0C = (1 << UCSZ00) | (1 << UCSZ01);

}

// De l'USART vers le PC

void transmissionUART ( uint8_t donnee ) {

	while (!( UCSR0A & (1<<UDRE0))) //Attendre que le tampon soient libre. 
	{
	}
               
    	UDR0 = donnee; //A modifier mais LEL, pcq ceci permet de transferer de la memoire vers le PC

}

uint8_t lecture(const Memoire24CXXX& memoire, uint8_t& adresse)
{
	_delay__ms(5);
	uint8_t instruction[2] = {};
	memoire.lecture(adresse, instruction, 2);
	
	return instruction[2];
}





int main()
{
	DDRB = 0xFF;
	DDRD = 0xFF;
	Memoire24CXXX memoire;
	uint8_t adresse = 0x02;
	uint8_t adresseBoucle;
	uint8_t repBoucle;
	uint8_t compteur;
	uint8_t inst[2];
	enum Etat{ON, OFF, END};
	Etat monEtat = OFF;
	Del del;
	Pwm moteur;
	PwmSon son;
	
	//Sequence de demarrage
	for(uint8_t i = 0; i < 3; i++)
	{
		del.allumerRouge(0);
		_delay_ms(500);
		del.allumerVert(0);
		_delay_ms(500);
	}
	//>ECRITURE
        memoire.ecriture(adresse, memoire);
	_delay_ms(5);
        initialisationUART();
        transmissionUART (memoire);
        
	while(etat != END)
        {
            inst = lecture(memoire, adresse);
             initialisationUART();
            transmissionUART (inst);
            switch (inst[0])
            { //Utiliser element 2 au besoin
                    case (0x01):
                            monEtat = ON;
                            break;
                            
                    case (0x02):
                            if(monEtat == ON)
                                for(uint8_t i = 0; i < inst[1]; i++)
                                    _delay_ms(25);
                    break;
                    
                    case (0x44):
                            if(monEtat == ON)
                                    del.allumerVert(0);
                    break;
                    
                    case (0x45):
                            if(monEtat == ON)
                                del.eteindreDel();
                    break;
                    
                    case (0x48):
                            if(monEtat == ON)
                                son.faireSon(inst[1]);
                    break;
                    
                    case (0x09):
                            if(monEtat == ON)
                                son.silence();
   
                    break;
                    
                    case (0x60):
                            if(monEtat == ON)
                                moteur.Avance(0);
                    break;
                    
                     case (0x61):
                            if(monEtat == ON)
                                moteur.Avance(0);
                                
                    break;
                    
                    case (0x62):
                            if(monEtat == ON)
                                moteur.Avance(inst[1]);
                    break;
                    
                    case (0x63):
                            if(monEtat == ON)
                                moteur.reculer(inst[1]);
                    break;
                    
                    case (0x64):
                            if(monEtat == ON)
                                moteur.Tourner_Droite(128);
                    break;
                    
                    case (0x65):
                            if(monEtat == ON)
                                moteur.Tourner_Gauche(128);
                    break;
                    
                    case (0xC0):
                            if(monEtat == ON)
                            {
                                  adresseBoucle = adresse;
                                  repBoucle = inst[1];
                                  compteur = 0;  
                            }
                    break;
                    
                    case (0xC1):
                            if(monEtat == ON)
                            {
								if(compteur < repBoucle)
								{
									adresse = adresseBoucle;
									compteur++;
								}
                            }
                    break;
                    
                    case (0xFF):
                            monEtat = END;
                    break;
            }
            adresse += 2;

        }	
	
	
	return 0;
}
