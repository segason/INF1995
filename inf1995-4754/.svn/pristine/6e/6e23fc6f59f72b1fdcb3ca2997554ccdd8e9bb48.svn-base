#include <avr/io.h>
#define F_CPU 8000000
#include <util/delay.h>
#include "PWM.h"


Pwm::Pwm(uint8_t timer)
{
	timer_ = timer;
	
	if(timer_ == 1){
		TCCR1A |= (1<<COM1A1) | (1<<COM1B1) | (1<<WGM10); 
    
		TCNT1 = 0;

		OCR1A = 0 ;

		OCR1B = 0 ;

		TCCR1B |= (1<<CS11) ;

		TCCR1C = 0;
	}
	if(timer_ == 2){
		TCCR2A |= (1<<COM2A1) | (1<<COM2B1) | (1<<WGM20); 
    
		TCNT2 = 0;

		OCR2A = 0 ;

		OCR2B = 0 ;

		TCCR2B |= (1<<CS21) ;

		TCCR2C = 0;
	}
}

Pwm::~Pwm()
{}

void Pwm::Avance(unsigned int pwm)
{
	if(timer_ == 1)
		OCR1A = OCR1B = pwm;
	if(timer_ == 2)
		OCR2A = OCR2B = pwm;
}

void Pwm::Tourner_Gauche(unsigned int pwm)
{
	if(timer_ == 1){
		OCR1A = pwm / 2;
		OCR1B = pwm;
	}
	if(timer_ == 2){
		OCR2A = pwm / 2;
		OCR2B = pwm;
	}
}

void Pwm::Tourner_Droite(unsigned int pwm)
{
	if(timer_ == 1){
		OCR1A = pwm;
		OCR1B = pwm / 2;
	}
	if(timer_ == 2){
		OCR2A = pwm;
		OCR2B = pwm / 2;
	}
}

